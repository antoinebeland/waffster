{"version":3,"sources":["src/geometry/polygons-group-configs.ts","src/config.ts","src/geometry/point.ts","src/geometry/bounding-box.ts","src/geometry/abstract-polygons-group.ts","src/geometry/polygons-super-group.ts","src/budget/budget-element-group.ts","src/geometry/square.ts","src/geometry/squares-group.ts","src/budget/simple-budget-element.ts","src/budget/budget-element.ts","src/budget/budget-config.ts","src/budget/budget.ts","src/budget/layouts/layout.ts","src/budget/visitors/rendering-visitor.ts","src/budget/commands/command.ts","src/budget/commands/add-command.ts","src/utils/event.ts","src/budget/commands/command-invoker.ts","src/budget/commands/delete-command.ts","src/budget/budget-visualization.ts","src/budget/layouts/layout-config.ts","src/budget/layouts/bars-layout.ts","src/budget/layouts/grid-layout.ts","src/budget/layouts/horizontal-bars-layout.ts","src/app.ts","src/budget/commands/transfer-command.ts","src/utils/formatter.ts","src/utils/random.ts","src/utils/svg-utils.ts","src/geometry/polygon.ts","src/geometry/translation.ts","src/budget/visitors/budget-element-visitor.ts","src/budget/layouts/layouts-manager.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Defines the possible orientation of a polygons group.\n */\nexport enum PolygonsGroupOrientation {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical'\n}\n\n/**\n * Defines the base of a polygons group configuration.\n */\nexport interface PolygonsGroupConfig {\n  /**\n   * The maximum polygons count per line.\n   */\n  maxCountPerLine: number;\n\n  /**\n   * The orientation of the group. By default, the orientation is HORIZONTAL.\n   */\n  orientation?: PolygonsGroupOrientation;\n\n  /**\n   * The length of a polygon side.\n   */\n  sideLength: number;\n\n  /**\n   * The starting position of the group. By default, the starting position is 0.\n   */\n  startingPosition?: number;\n}\n\n/**\n * Checks if the specified configuration has all the base properties.\n *\n * @param config        The configuration to validate.\n * @return {boolean}    TRUE of the configuration has all the base properties. FALSE otherwise.\n */\nexport function isPolygonsGroupConfig(config: any): boolean {\n  return config !== undefined &&\n    config.maxCountPerLine !== undefined && !isNaN(config.maxCountPerLine) && config.maxCountPerLine > 0 &&\n    (config.orientation === undefined || (<any>Object).values(PolygonsGroupOrientation).includes(config.orientation)) &&\n    config.sideLength !== undefined && !isNaN(config.sideLength) && config.sideLength > 0 &&\n    (config.startingPosition === undefined ||\n      config.startingPosition >= 0 && config.startingPosition < config.maxCountPerLine);\n}\n","import { PolygonsGroupConfig, PolygonsGroupOrientation } from './geometry/polygons-group-configs';\n\n/**\n * Defines the configuration values of the application.\n */\nexport class Config {\n  /**\n   * The average character size.\n   */\n  static readonly AVERAGE_CHAR_SIZE = 7.5;\n\n  /**\n   * The orientation og the budget elements.\n   */\n  static readonly BUDGET_ELEMENTS_ORIENTATION = PolygonsGroupOrientation.HORIZONTAL;\n\n  /**\n   * The spacing to use for the sub elements of the budget when these elements are active.\n   */\n  static readonly BUDGET_SUB_ELEMENTS_SPACING = 3;\n\n  /**\n   * The configuration of the gauge.\n   */\n  static readonly GAUGE_CONFIG = {\n    barWidth: 15,\n    height: 60,\n    interval: [-26000000, 26000000],\n    needleRadius: 6,\n    width: 120,\n  };\n\n  /**\n   * Indicates if the groups of an element must used different colors.\n   */\n  static readonly IS_USING_DISTINCT_COLORS = false;\n\n  /**\n   * The delay before the active level is changed when an element is hovered.\n   */\n  static readonly LEVEL_CHANGE_DELAY = 1000;\n\n  /**\n   * The minimum amount to show.\n   */\n  static readonly MIN_AMOUNT = 50000;\n\n  /**\n   * The maximum polygons count per line for a group.\n   */\n  static readonly MAX_COUNT_PER_LINE = 20;\n\n  /**\n   * The side length of a square.\n   */\n  static readonly SIDE_LENGTH = 6;\n\n  /**\n   * The transition duration in ms.\n   */\n  static readonly TRANSITION_DURATION = 350;\n\n  /**\n   * The default polygons group configuration to use.\n   */\n  static readonly DEFAULT_POLYGONS_GROUP_CONFIG: PolygonsGroupConfig = {\n    maxCountPerLine: Config.MAX_COUNT_PER_LINE,\n    orientation: Config.BUDGET_ELEMENTS_ORIENTATION,\n    sideLength: Config.SIDE_LENGTH\n  };\n}\n","/**\n * Defines a point.\n */\nexport interface Point {\n  /**\n   * The X coordinate of the point.\n   */\n  x: number;\n\n  /**\n   * The Y coordinate of the point.\n   */\n  y: number;\n}\n\n/**\n * Validated if the specified instance is a Point.\n *\n * @param point         The point to validate.\n * @return {boolean}    TRUE is the specified element is an instance of the Point interface. FALSE otherwise.\n */\nexport function isPoint(point: any): point is Point {\n  return point !== undefined &&\n      point.x !== undefined && !isNaN(point.x) &&\n      point.y !== undefined && !isNaN(point.y);\n}\n","import { Point } from './point';\n\n/**\n * Defines a bounding box.\n */\nexport class BoundingBox {\n  position: Point;\n  width: number;\n  height: number;\n\n  /**\n   * Initializes a new instance of the BoundingBox class.\n   *\n   * @param position    The top-left position of the bounding box.\n   * @param width       The width of the bounding box.\n   * @param height      The height of the bounding box.\n   */\n  constructor(position: Point = { x: 0, y: 0 }, width = 0, height = 0) {\n    if (width < 0) {\n      throw new RangeError('Invalid width specified.');\n    }\n    if (height < 0) {\n      throw new RangeError('Invalid height specified.');\n    }\n    this.position = position;\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Gets the X position of the bounding box.\n   *\n   * @return {number}   The X position.\n   */\n  get x(): number {\n    return this.position.x;\n  }\n\n  /**\n   * Gets the Y position of the bounding box.\n   *\n   * @return {number}   The Y position.\n   */\n  get y(): number {\n    return this.position.y;\n  }\n\n  /**\n   * Checks if the current point is into the bounding box.\n   *\n   * @param point       The point to check.\n   * @return {boolean}  TRUE if the specified point is into the bounding box. FALSE otherwise.\n   */\n  isInto(point: Point): boolean {\n    return this.position.x <= point.x && this.position.x + this.width >= point.x &&\n      this.position.y <= point.y && this.position.y + this.height >= point.y;\n  }\n\n  /**\n   * Converts the bounding box to a string representation.\n   *\n   * @return {string}   The string associated with the properties of the bounding box.\n   */\n  toString(): string {\n    return `x: ${this.position.x} y: ${this.position.y} width: ${this.width} height: ${this.height}`;\n  }\n}\n","import { BoundingBox } from './bounding-box';\nimport { Point } from './point';\nimport { Polygon } from './polygon';\nimport { isPolygonsGroupConfig, PolygonsGroupConfig, PolygonsGroupOrientation } from './polygons-group-configs';\nimport { Translation } from './translation';\n\n/**\n * Defines the base of a polygons group.\n */\nexport abstract class AbstractPolygonsGroup {\n  private readonly _translation: Translation;\n  private _boundary = [];\n  private _selectionCount = 0;\n\n  // TODO: Put variable private and use public accessors.\n  protected _boundingBox: BoundingBox;\n  protected _maxCountPerLine: number;\n  protected _orientation: PolygonsGroupOrientation;\n  protected _sideLength: number;\n  protected _startingPosition;\n\n  protected constructor(config: PolygonsGroupConfig) {\n    this.config = config;\n    this._boundary = [];\n    this._boundingBox = new BoundingBox();\n    this._translation = { x: 0, y: 0 };\n  }\n\n  /**\n   * Gets the polygons count of the group.\n   *\n   * @returns {number}              The polygons count into the group.\n   */\n  abstract get count(): number;\n\n  /**\n   * Sets the polygons count into the group.\n   *\n   * @param {number} count          The polygons count to set.\n   */\n  abstract set count(count: number);\n\n  /**\n   * Gets the polygons of the group.\n   *\n   * @returns {Polygon[]}     The polygons of the group.\n   */\n  abstract get polygons(): Polygon[];\n\n  abstract get temporaryCount(): number;\n\n  abstract set temporaryCount(count: number);\n\n  /**\n   * Gets the boundary of the polygons group.\n   */\n  get boundary(): Point[] {\n    return this._boundary;\n  }\n\n  /**\n   * Gets the bounding box associated with the group.\n   *\n   * @returns {BoundingBox}                 The bounding box of the group.\n   */\n  get boundingBox(): BoundingBox {\n    return this._boundingBox;\n  }\n\n  /**\n   * Gets the configuration of the group.\n   *\n   * @returns {PolygonsGroupConfig}         The configuration of the group.\n   */\n  get config(): PolygonsGroupConfig {\n    return {\n      maxCountPerLine: this._maxCountPerLine,\n      orientation: this._orientation,\n      sideLength: this._sideLength,\n      startingPosition: this._startingPosition\n    };\n  }\n\n  /**\n   * Sets the configuration of the group.\n   *\n   * @param {PolygonsGroupConfig} config    The configuration to set.\n   */\n  set config(config: PolygonsGroupConfig) {\n    if (!isPolygonsGroupConfig(config)) {\n      throw new TypeError('Invalid configuration specified.');\n    }\n    this._maxCountPerLine = config.maxCountPerLine;\n    this._orientation = config.orientation || PolygonsGroupOrientation.HORIZONTAL;\n    this._sideLength = config.sideLength;\n    this._startingPosition = config.startingPosition || 0;\n  }\n\n  get selectionCount(): number {\n    return this._selectionCount;\n  }\n\n  set selectionCount(count: number) {\n    if (count < 0 || count > this.count) {\n      throw new TypeError('The specified count is invalid');\n    }\n    if (this._selectionCount === count) {\n      return;\n    }\n    this._selectionCount = count;\n    const polygons = this.polygons;\n    for (let max = this.polygons.length - 1, i = max; i >= 0; --i) {\n      polygons[i].isSelected = max - i < count;\n    }\n  }\n\n  /**\n   * Gets the translation associated with the group.\n   *\n   * @returns {Translation}         The translation of the group.\n   */\n  get translation(): Translation {\n    return this._translation;\n  }\n\n  /**\n   * Reshapes the group based on the starting position.\n   *\n   * @param [startingPosition]    The starting position to use to reshape the group.\n   *                              By default, the starting position is 0.\n   */\n  abstract reshape(startingPosition?);\n\n  /**\n   * Translates the group of the offset specified.\n   *\n   * @param {number} offset       The offset to use to do translation.\n   */\n  translate(offset: number) {\n    if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n      this._translation.x = 0;\n      this._translation.y = offset;\n    } else {\n      this._translation.x = offset;\n      this._translation.y = 0;\n    }\n  }\n\n  /**\n   * Computes the boundary of a polygons group.\n   */\n  protected updateBoundary() {\n    /* Boundary model\n                 (1) *----->----* (2)\n                     |          |\n      (7) *----->----* (8)      |\n          |                     |\n          |             (4) *---* (3)\n          |                 |\n      (6) *--------<--------* (5)\n     */\n    const boundingBox = this.getBoundingBox({ x: 0, y: 0 }, false);\n    const count = this.count + this._startingPosition || 1;\n    const padding = 0;\n    const hasMoreThanSingleLine = Math.ceil(count / this._maxCountPerLine) > 1;\n    this._boundary = [];\n\n    if (hasMoreThanSingleLine) {\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n        // Point (1)\n        this._boundary.push({\n          x: boundingBox.x + this._startingPosition * this._sideLength - padding,\n          y: boundingBox.y - padding\n        });\n      } else {\n        // Point (1)\n        this._boundary.push({\n          x: boundingBox.x - padding,\n          y: boundingBox.y + this._startingPosition * this._sideLength - padding\n        });\n      }\n    } else {\n      // Point (1)\n      this._boundary.push({\n        x: boundingBox.x - padding,\n        y: boundingBox.y - padding\n      });\n    }\n\n    // Point (2)\n    this._boundary.push({\n      x: boundingBox.x + boundingBox.width + padding,\n      y: boundingBox.y - padding\n    });\n\n    if (count % this._maxCountPerLine !== 0 && hasMoreThanSingleLine) {\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n        // Point (3)\n        this._boundary.push({\n          x: boundingBox.x + boundingBox.width + padding,\n          y: boundingBox.y + boundingBox.height - this._sideLength + padding\n        });\n        const width = (count % this._maxCountPerLine) * this._sideLength;\n\n        // Point (4)\n        this._boundary.push({\n          x: boundingBox.x + width + padding,\n          y: boundingBox.y + boundingBox.height - this._sideLength + padding\n        });\n        // Point (5)\n        this._boundary.push({\n          x: boundingBox.x + width + padding,\n          y: boundingBox.y + boundingBox.height + padding\n        });\n      } else {\n        const height = (count % this._maxCountPerLine) * this._sideLength;\n\n        // Point (3)\n        this._boundary.push({\n          x: boundingBox.x + boundingBox.width + padding,\n          y: boundingBox.y + height + padding\n        });\n        // Point (4)\n        this._boundary.push({\n          x: boundingBox.x + boundingBox.width - this._sideLength + padding,\n          y: boundingBox.y + height + padding\n        });\n        // Point (5)\n        this._boundary.push({\n          x: boundingBox.x + boundingBox.width - this._sideLength + padding,\n          y: boundingBox.y + boundingBox.height + padding\n        });\n      }\n    } else {\n      // Point (5)\n      this._boundary.push({\n        x: boundingBox.x + boundingBox.width + padding,\n        y: boundingBox.y + boundingBox.height + padding\n      });\n    }\n    // Point (6)\n    this._boundary.push({\n      x: boundingBox.x - padding,\n      y: boundingBox.y + boundingBox.height + padding\n    });\n    if (this._startingPosition !== 0 && hasMoreThanSingleLine) {\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n        // Point (7)\n        this._boundary.push({\n          x: boundingBox.x - padding,\n          y: boundingBox.y + this._sideLength - padding\n        });\n        // Point (8)\n        this._boundary.push({\n          x: boundingBox.x + this._startingPosition * this._sideLength - padding,\n          y: boundingBox.y + this._sideLength - padding\n        });\n      } else {\n        // Point (7)\n        this._boundary.push({\n          x: boundingBox.x + this._sideLength - padding,\n          y: boundingBox.y - padding\n        });\n        // Point (8)\n        this._boundary.push({\n          x: boundingBox.x + this._sideLength - padding,\n          y: boundingBox.y + this._startingPosition * this._sideLength - padding\n        });\n      }\n    }\n  }\n\n  protected getBoundingBox(position: { x, y }, isIncludedTemporaryCount = true) {\n    let count = this.count;\n    if (isIncludedTemporaryCount && this.temporaryCount > 0) {\n      count += this.temporaryCount;\n    }\n    let countPerLine = this._maxCountPerLine;\n    if (this.count > 0 && (this._startingPosition + count) / this._maxCountPerLine <= 1) {\n      countPerLine = count;\n      const offset = this._startingPosition * this._sideLength;\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n        position.x += offset;\n      } else {\n        position.y += offset;\n      }\n    }\n    const lineLength = (count > 0) ? countPerLine * this._sideLength : this._sideLength;\n    const columnLength = (count > 0)\n      ? Math.ceil((this._startingPosition + count) / this._maxCountPerLine) * this._sideLength : this._sideLength;\n\n    if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n      return new BoundingBox(position, lineLength, columnLength);\n    }\n    return new BoundingBox(position, columnLength, lineLength);\n  }\n}\n","import * as d3 from 'd3';\n\nimport { AbstractPolygonsGroup } from './abstract-polygons-group';\nimport { Polygon } from './polygon';\nimport { PolygonsGroupConfig, PolygonsGroupOrientation } from './polygons-group-configs';\n\nenum PolygonsSuperGroupState {\n  COLLAPSED,\n  EXPANDED\n}\n\nexport class PolygonsSuperGroup extends AbstractPolygonsGroup {\n  private readonly _children: AbstractPolygonsGroup[];\n  private _spacing: number;\n  private _state: PolygonsSuperGroupState;\n  private _temporaryCount: number;\n\n  /**\n   * Initializes a new instance of the PolygonsSuperGroup class.\n   *\n   * @param {PolygonsGroupConfig} config      The configuration to use.\n   * @param {number} spacing                  The spacing to use between groups.\n   */\n  constructor(config: PolygonsGroupConfig, spacing: number) {\n    super(config);\n    this._children = [];\n    this._spacing = spacing;\n    this._state = PolygonsSuperGroupState.COLLAPSED;\n    this._temporaryCount = 0;\n  }\n\n  /**\n   * Gets the polygons count of the super group.\n   *\n   * @returns {number}              The polygons count into the super group.\n   */\n  get count(): number {\n    return this._children.reduce((total, child) => total + child.count, 0);\n  }\n\n  /**\n   * Sets the polygons count into the super group.\n   *\n   * @param {number} count          The polygons count to set.\n   */\n  set count(count: number) {\n    if (this.count === count) {\n      return;\n    }\n    if (count < 0) {\n      throw new RangeError('Invalid count specified.');\n    }\n    if (this.temporaryCount !== 0) {\n      throw new Error('You should not have temporary element before to set a new count.');\n    }\n    let diffCount = 0;\n    const children = this.children;\n    const currentCount = this.count;\n    children.forEach(c => {\n      let ratio;\n      if (currentCount === 0) {\n        ratio = 1 / children.length;\n      } else {\n        ratio = c.count / currentCount;\n      }\n      const countToApply = Math.round(ratio * count);\n      diffCount += Math.abs(c.count - countToApply);\n      c.count = countToApply;\n    });\n    // Adjust the total count to correct the imprecision of the ratio computations.\n    const delta = count - currentCount;\n    if (children.length > 0 && Math.abs(delta) !== diffCount) {\n      let adjustment = (delta > 0 ? 1 : -1 ) * (Math.abs(delta) - diffCount);\n      children.some(c => {\n        let countToApply = c.count + adjustment;\n        if (countToApply < 0) {\n          countToApply = 0;\n        }\n        if (adjustment < 0) {\n          adjustment += c.count - countToApply;\n        }\n        c.count = countToApply;\n        return adjustment >= 0;\n      });\n    }\n  }\n\n  /**\n   * Gets the children associated with the super group.\n   *\n   * @returns {Polygon[]}     The children of the super group.\n   */\n  get polygons(): Polygon[] {\n    return [].concat.apply([], this.children.map(c => c.polygons));\n  }\n\n  get temporaryCount(): number {\n    return this._temporaryCount;\n  }\n\n  set temporaryCount(count: number) {\n    if (this.temporaryCount === count) {\n      return;\n    }\n    const children = this.children;\n    if (children.length <= 0) {\n      return;\n    }\n    count = Math.max(-this.count, count);\n\n    // Create new elements\n    if (count > 0) {\n      if (this.count > 0) {\n        children[children.length - 1].temporaryCount = count; // Put temporary element to last element of the group.\n      } else {\n        children[0].temporaryCount = count; // If there is no element, put it in the first.\n      }\n    } else {\n      if (this._temporaryCount > 0) {\n        children.forEach(c => c.temporaryCount = 0);\n      }\n      let remainingCount = count;\n      for (let i = children.length - 1; i >= 0; --i) {\n        const child = children[i];\n        if (Math.abs(remainingCount) - child.count >= 0) {\n          child.temporaryCount = -child.count;\n          remainingCount += child.count;\n        } else {\n          child.temporaryCount = remainingCount;\n          remainingCount = 0;\n        }\n      }\n    }\n    this._temporaryCount = count;\n  }\n\n  /**\n   * Gets the children associated with the super group.\n   *\n   * @returns {AbstractPolygonsGroup[]}     The children of the super group.\n   */\n  get children(): AbstractPolygonsGroup[] {\n    return this._children.sort((a, b) => d3.descending(a.count, b.count));\n  }\n\n  /**\n   * Gets the spacing to use between the groups.\n   *\n   * @returns {number}            The spacing used between the groups.\n   */\n  get spacing(): number {\n    return this._spacing;\n  }\n\n  /**\n   * Sets the spacing to use between the groups.\n   *\n   * @param {number} spacing      The spacing to use.\n   */\n  set spacing(spacing: number) {\n    this._spacing = spacing;\n  }\n\n  reshape(startingPosition = 0) {\n    this._startingPosition = startingPosition;\n    this.update();\n  }\n\n  addGroup(group: AbstractPolygonsGroup) {\n    this._children.push(group);\n  }\n\n  removeGroup(group: AbstractPolygonsGroup) {\n    this._children.splice(this._children.findIndex(c => c === group), 1);\n  }\n\n  collapse() {\n    this._state = PolygonsSuperGroupState.COLLAPSED;\n  }\n\n  expand() {\n    this._state = PolygonsSuperGroupState.EXPANDED;\n  }\n\n  update() {\n    const children = this.children;\n    switch (this._state) {\n      case PolygonsSuperGroupState.COLLAPSED: {\n        let count = this._startingPosition;\n        let cumulative = 0;\n        children.forEach((c, i) => {\n          const adjustment = (count % this._maxCountPerLine === 0 || i === 0) ? 0 : this._sideLength;\n          c.translate(cumulative - adjustment);\n          c.reshape(count % this._maxCountPerLine);\n          count += c.count;\n\n          if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n            cumulative += c.boundingBox.height - adjustment;\n          } else {\n            cumulative += c.boundingBox.width - adjustment;\n          }\n        });\n        break;\n      }\n      case PolygonsSuperGroupState.EXPANDED: {\n        this._startingPosition = 0;\n        let cumulative = 0;\n        children.forEach(c => {\n          c.translate(cumulative);\n          c.reshape(0);\n\n          if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n            cumulative += c.boundingBox.height + this._spacing;\n          } else {\n            cumulative += c.boundingBox.width + this._spacing;\n          }\n        });\n      }\n    }\n    this.updateBoundingBox();\n  }\n\n  private updateBoundingBox() {\n    const count = this.count + this.temporaryCount;\n    const maximums = {\n      height: this._sideLength,\n      width: this._sideLength\n    };\n    if (count > 0) {\n      this._children.forEach(c => {\n        let height = c.translation.y + c.boundingBox.y + c.boundingBox.height;\n        let width = c.translation.x + c.boundingBox.x + c.boundingBox.width;\n        if (maximums.height < height) {\n          maximums.height = height;\n        }\n        if (maximums.width < width) {\n          maximums.width = width;\n        }\n      });\n    }\n    this._boundingBox.height = maximums.height;\n    this._boundingBox.width = maximums.width;\n    this.updateBoundary();\n  }\n}\n","import * as d3 from 'd3';\n\nimport { Config } from '../config';\nimport { PolygonsGroupConfig } from '../geometry/polygons-group-configs';\nimport { PolygonsSuperGroup } from '../geometry/polygons-super-group';\n\nimport { BudgetElement, BudgetElementType } from './budget-element';\nimport { BudgetElementVisitor } from './visitors/budget-element-visitor';\n\nexport class BudgetElementGroup extends BudgetElement {\n  private readonly _children: BudgetElement[];\n  private readonly _group: PolygonsSuperGroup;\n\n  private _hasFocus: boolean;\n  private _svgElement: any;\n\n  constructor(name = '', description: '', type: BudgetElementType = BudgetElementType.SPENDING,\n              polygonsGroupConfig: PolygonsGroupConfig = Config.DEFAULT_POLYGONS_GROUP_CONFIG) {\n    super(name, description, type);\n    this._children = [];\n    this._group = new PolygonsSuperGroup(polygonsGroupConfig, Config.BUDGET_SUB_ELEMENTS_SPACING);\n    this._hasFocus = false;\n  }\n\n  get activeLevel(): number {\n    return Math.min(this._level + 1, this._activeLevel);\n  }\n\n  set activeLevel(level: number) {\n    if (level < 0) {\n      throw new RangeError('Invalid level specified.');\n    }\n    if (this._activeLevel === level) {\n      return;\n    }\n    this._activeLevel = level;\n    this._hasFocus = false;\n    this._group.selectionCount = 0;\n    this._children.forEach(c => c.activeLevel = level);\n    if (this.level + 1 <= this.activeLevel) {\n      if (this.level > 0 && this.activeLevel > 1) {\n        (this.root.polygonsGroup as PolygonsSuperGroup).spacing = 3 * Config.BUDGET_SUB_ELEMENTS_SPACING;\n      } else {\n        this.polygonsGroup.spacing = Config.BUDGET_SUB_ELEMENTS_SPACING;\n      }\n      this._group.expand();\n    } else {\n      this._group.collapse();\n    }\n  }\n\n  get hasFocus(): boolean {\n    return this._hasFocus;\n  }\n\n  set hasFocus(hasFocus: boolean) {\n    this._hasFocus = hasFocus;\n    this.selectedAmount = 0;\n    this.children.forEach(c => c.hasFocus = hasFocus);\n  }\n\n  get level(): number {\n    return this._level;\n  }\n\n  set level(level: number) {\n    if (level < 0) {\n      throw new RangeError('Invalid level specified.');\n    }\n    this._level = level;\n    this._children.forEach(c => c.level = level + 1);\n  }\n\n  get svgElement(): any {\n    return this._svgElement;\n  }\n\n  set svgElement(svgElement: any) {\n    if (!svgElement) {\n      throw ReferenceError('The specified element is undefined.');\n    }\n    this._svgElement = svgElement;\n    const levelGroup = svgElement.append('g')\n      .attr('class', 'level-group');\n\n    levelGroup.append('rect')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', 0)\n      .attr('height', 0);\n\n    levelGroup.append('line')\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', 0)\n      .attr('y2', 0);\n\n    this.children.forEach(c => {\n      c.svgElement = svgElement.append('g');\n    });\n    this._svgElement.append('polygon')\n      .attr('class', `boundary boundary${this.level}`);\n  }\n\n  get polygonsGroup(): PolygonsSuperGroup {\n    return this._group;\n  }\n\n  get children() {\n    // TODO: If all the elements are equals, sort by id or name?\n    return this._children.sort((a, b) => d3.descending(a.amount, b.amount));\n  }\n\n  accept(visitor: BudgetElementVisitor) {\n    visitor.visitBudgetElementGroup(this);\n  }\n\n  addChild(element: BudgetElement) {\n    element.activeLevel = this._activeLevel;\n    element.level = this._level + 1;\n    element.parent = this;\n\n    this._children.push(element);\n    this._group.addGroup(element.polygonsGroup);\n  }\n\n  removeChild(element: BudgetElement) {\n    this._children.splice(this._children.findIndex(c => c === element), 1);\n\n    element.activeLevel = 0;\n    element.level = 0;\n    element.parent = undefined;\n  }\n}\n","import * as d3 from 'd3';\n\nimport { BoundingBox } from './bounding-box';\nimport { Point } from './point';\nimport { Polygon } from './polygon';\n\n/**\n * Defines a square.\n */\nexport class Square implements Polygon {\n  isSelected: boolean;\n  isTemporary: boolean;\n\n  private static _currentId = 0;\n\n  private readonly _boundingBox: BoundingBox;\n  private readonly _id: number;\n\n  private _sideLength: number;\n  private _points: Point[];\n  private _position: Point;\n\n  /**\n   * Initializes a new instance of the Square class.\n   *\n   * @param position          The top-left position of the square.\n   * @param sideLength        The side length of the square.\n   */\n  constructor(position: Point, sideLength: number) {\n    if (sideLength < 0) {\n      throw new RangeError('The specified side length is invalid.');\n    }\n    this._id = Square._currentId++;\n    this._position = position;\n    this._sideLength = sideLength;\n    this._boundingBox = new BoundingBox(this._position, this._sideLength, this._sideLength);\n    this.update();\n  }\n\n  /**\n   * Gets the bounding box associated with the square.\n   *\n   * @return {BoundingBox}  The bounding box associated with the square.\n   */\n  get boundingBox(): BoundingBox {\n    return this._boundingBox;\n  }\n\n  /**\n   * Gets the unique ID associated with the square.\n   *\n   * @returns {number}     The ID of the square.\n   */\n  get id(): number {\n    return this._id;\n  }\n\n  /**\n   * Gets the points associated with the square in clockwise order.\n   *\n   * @return {Point[]}      The points in clockwise order.\n   */\n  get points(): Point[] {\n    return this._points;\n  }\n\n  /**\n   * Gets the top-left position of the square.\n   *\n   * @return {Point}        The top-left position of the square.\n   */\n  get position(): Point {\n    return this._position;\n  }\n\n  /**\n   * Sets the top-left position of the square.\n   *\n   * @param position        The new top-left position of the square.\n   */\n  set position(position: Point) {\n    this._position = position;\n    this._boundingBox.position.x = position.x;\n    this._boundingBox.position.y = position.y;\n    this.update();\n  }\n\n  /**\n   * Gets the side length of the square.\n   *\n   * @returns {number}            The side length of the square.\n   */\n  get sideLength(): number {\n    return this._sideLength;\n  }\n\n  /**\n   * Sets the side length of the square.\n   *\n   * @param {number} sideLength   The side length to set.\n   */\n  set sideLength(sideLength: number) {\n    if (sideLength < 0) {\n      throw new RangeError('The specified side length is invalid.');\n    }\n    this._sideLength = sideLength;\n    this._boundingBox.height = sideLength;\n    this._boundingBox.width = sideLength;\n    this.update();\n  }\n\n  /**\n   * Updates the square points.\n   */\n  private update() {\n    const center = {\n      x: this._position.x + this._sideLength / 2,\n      y: this._position.y + this._sideLength / 2\n    };\n    this._points = d3.range(4).map(d => {\n      const i = (d < 2) ? d % 2 : (d + 1) % 2;\n      const j = Math.floor(d / 2);\n      return {\n        x: center.x - ((i === 0) ? 1 : -1) * this._sideLength / 2,\n        y: center.y - ((j === 0) ? 1 : -1) * this._sideLength / 2\n      };\n    });\n  }\n}\n","import * as d3 from 'd3';\n\nimport { AbstractPolygonsGroup } from './abstract-polygons-group';\nimport { Point } from './point';\nimport { PolygonsGroupConfig, PolygonsGroupOrientation } from './polygons-group-configs';\nimport { Square } from './square';\n\n/**\n * Defines a group of squares.\n */\nexport class SquaresGroup extends AbstractPolygonsGroup {\n  private readonly _position: Point;\n  private _count: number;\n  private _squares: Square[];\n  private _temporaryCount: number;\n\n  /**\n   * Initializes a new instance of the SquaresGroup class.\n   *\n   * @param count     The squares count of the group.\n   * @param config    The parameters to use to initialize the group.\n   */\n  constructor(count: number, config: PolygonsGroupConfig) {\n    super(config);\n    this._count = count;\n    this._position = { x: 0, y: 0 };\n    this._squares = d3.range(this._startingPosition, this._count + this._startingPosition)\n      .map(i => new Square(this.getSquarePosition(i), this._sideLength));\n    this._temporaryCount = 0;\n    this.updateBoundingBox();\n  }\n\n  /**\n   * Gets the configuration of the group.\n   *\n   * @returns {PolygonsGroupConfig}         The configuration of the group.\n   */\n  get config(): PolygonsGroupConfig {\n    return super.config;\n  }\n\n  /**\n   * Sets the configuration of the group.\n   *\n   * @param {PolygonsGroupConfig} config    The configuration to set.\n   */\n  set config(config: PolygonsGroupConfig) {\n    super.config = config;\n    if (this._squares) {\n      this._squares.forEach((square, i) => {\n        square.position = this.getSquarePosition(i + this._startingPosition);\n        square.sideLength = this._sideLength;\n      });\n      this.updateBoundingBox();\n    }\n  }\n\n  /**\n   * Gets the squares count.\n   *\n   * @returns {number}        The squares count.\n   */\n  get count(): number {\n    return this._count;\n  }\n\n  /**\n   * Sets the polygons count.\n   *\n   * @param {number} count    The polygons count to set.\n   */\n  set count(count: number) {\n    if (this._count === count) {\n      return;\n    }\n    if (count < 0) {\n      throw new RangeError(`Invalid count specified (${count}).`);\n    }\n    if (this._temporaryCount !== 0) {\n      throw new Error('You should not have temporary element before to set a new count.');\n    }\n    this.updateCount(this._count, count);\n    this._count = count;\n    this.updateBoundingBox();\n  }\n\n  /**\n   * Gets the polygons associated with the group.\n   *\n   * @returns {Square[]}      A list of squares.\n   */\n  get polygons(): Square[] {\n    return this._squares;\n  }\n\n  get temporaryCount(): number {\n    return this._temporaryCount;\n  }\n\n  set temporaryCount(count: number) {\n    if (this._temporaryCount === count) {\n      return;\n    }\n    count = Math.max(-this._count, count);\n    if (count >= 0) {\n      if (this._temporaryCount <= 0) {\n        this._temporaryCount = 0;\n        this._squares.forEach(s => s.isTemporary = false);\n      }\n      this.updateCount(this._count + this._temporaryCount, this._count + count, true);\n    } else {\n      if (this._temporaryCount > 0) {\n        this.updateCount(this._count + this._temporaryCount, this._count, true);\n      }\n      this._squares.forEach((s, i) => s.isTemporary = i >= this._count + count);\n    }\n    this._temporaryCount = count;\n    this.updateBoundingBox();\n  }\n\n  /**\n   * Reshapes the group based on the starting position specified.\n   *\n   * @param {number} startingPosition   The starting position to use. By default, the starting position is 0.\n   */\n  reshape(startingPosition = 0) {\n    if (this._startingPosition === startingPosition) {\n      return;\n    }\n    if (startingPosition < 0 || startingPosition >= this._maxCountPerLine) {\n      throw new RangeError('Invalid starting position specified.');\n    }\n    const delta = this._startingPosition - startingPosition;\n    const count = Math.min(Math.abs(delta), this._count);\n\n    if (delta > 0) { // Add squares on the first line.\n      const othersSquares = this._squares.slice(0, this._squares.length - count);\n      const squaresToModify = this._squares.slice(this._squares.length - count);\n      squaresToModify.forEach((square, i) => {\n        square.position = this.getSquarePosition(i + startingPosition);\n      });\n      this._squares = squaresToModify.concat(othersSquares);\n    } else { // Remove squares on the first line.\n      const othersSquares = this._squares.slice(count);\n      const squaresToModify = this._squares.slice(0, count);\n      squaresToModify.forEach((square, i) => {\n        square.position = this.getSquarePosition(i + startingPosition + othersSquares.length);\n      });\n      this._squares = othersSquares.concat(squaresToModify);\n    }\n    this._startingPosition = startingPosition;\n    this.updateBoundingBox();\n  }\n\n  /**\n   * Gets a square position.\n   *\n   * @param {number} index    The index of the square.\n   * @returns {Point}         The position of square.\n   */\n  private getSquarePosition(index: number): Point {\n    const currentPoint = {\n      x: this._position.x,\n      y: this._position.y\n    };\n\n    // If this is a change of line...\n    if (Math.floor(index / this._maxCountPerLine) > 0) {\n      const lineOffset = this._sideLength * Math.floor(index / this._maxCountPerLine);\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n        currentPoint.y += lineOffset;\n      } else {\n        currentPoint.x += lineOffset;\n      }\n    }\n    const offset = this._sideLength * (index % this._maxCountPerLine);\n    if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n      currentPoint.x += offset;\n    } else {\n      currentPoint.y += offset;\n    }\n    return currentPoint;\n  }\n\n  private updateCount(currentCount, newCount, isTemporary = false) {\n    if (currentCount > newCount) { // Remove extra squares.\n      this._squares = this._squares.slice(0, newCount);\n    } else { // Add new squares.\n      this._squares = this._squares.concat(\n        d3.range(currentCount + this._startingPosition,\n          newCount + this._startingPosition)\n          .map(i => {\n            const square = new Square(this.getSquarePosition(i), this._sideLength);\n            square.isTemporary = isTemporary;\n            return square;\n          })\n      );\n    }\n  }\n\n  /**\n   * Updates the bounding box.\n   */\n  private updateBoundingBox() {\n    this._boundingBox = this.getBoundingBox({\n      x: this._position.x,\n      y: this._position.y\n    });\n    this.updateBoundary();\n  }\n}\n","import { Config } from '../config';\nimport { PolygonsGroupConfig } from '../geometry/polygons-group-configs';\nimport { SquaresGroup } from '../geometry/squares-group';\n\nimport { BudgetElement, BudgetElementType } from './budget-element';\nimport { BudgetElementVisitor } from './visitors/budget-element-visitor';\n\nexport class SimpleBudgetElement extends BudgetElement {\n  private readonly _group: SquaresGroup;\n  private _hasFocus: boolean;\n  private _svgElement: any;\n\n  constructor(amount = 0, name = '', description = '', type: BudgetElementType = BudgetElementType.SPENDING,\n              polygonsGroupConfig: PolygonsGroupConfig = Config.DEFAULT_POLYGONS_GROUP_CONFIG) {\n    super(name, description, type);\n    this._group = new SquaresGroup(Math.round(amount / Config.MIN_AMOUNT), polygonsGroupConfig);\n    this._hasFocus = false;\n  }\n\n  get activeLevel(): number {\n    return Math.min(this._level, this._activeLevel);\n  }\n\n  set activeLevel(level: number) {\n    if (level < 0) {\n      throw new RangeError('Invalid level specified.');\n    }\n    if (this._activeLevel === level) {\n      return;\n    }\n    this._activeLevel = level;\n    this._hasFocus = false;\n  }\n\n  get hasFocus(): boolean {\n    return this._hasFocus;\n  }\n\n  set hasFocus(hasFocus: boolean) {\n    this._hasFocus = hasFocus;\n    this._group.selectionCount = 0;\n  }\n\n  get level(): number {\n    return this._level;\n  }\n\n  set level(level: number) {\n    if (level < 0) {\n      level = 0;\n    }\n    this._level = level;\n  }\n\n  get svgElement(): any {\n    return this._svgElement;\n  }\n\n  set svgElement(svgElement: any) {\n    if (!svgElement) {\n      throw ReferenceError('The specified element is undefined.');\n    }\n    this._svgElement = svgElement;\n    this._svgElement.append('g')\n      .attr('class', 'squares');\n    this._svgElement.append('polygon')\n      .attr('class', `boundary boundary${this.level}`);\n  }\n\n  get polygonsGroup(): SquaresGroup {\n    return this._group;\n  }\n\n  accept(visitor: BudgetElementVisitor) {\n    visitor.visitSimpleBudgetElement(this);\n  }\n}\n","import { Config } from '../config';\nimport { AbstractPolygonsGroup } from '../geometry/abstract-polygons-group';\n\nimport { BudgetElementVisitor } from './visitors/budget-element-visitor';\n\n/**\n * Defines the possible types for a budget element.\n */\nexport enum BudgetElementType {\n  DEFICIT = 'deficit',\n  INCOME = 'income',\n  SPENDING = 'spending'\n}\n\n /**\n * Defines an abstract budget element.\n */\nexport abstract class BudgetElement {\n  protected _activeLevel = 0;\n  protected _level = 0;\n\n  readonly id: string;\n  readonly name: string;\n  readonly description: string;\n  readonly type: BudgetElementType;\n  parent: BudgetElement;\n\n  /**\n   * Initializes a new instance of the BudgetElement class.\n   *\n   * @param name          The name of the element.\n   * @param description   The element description.\n   * @param [type]        The element type. By default, the element is a spending.\n   */\n  protected constructor(name: string, description = '', type: BudgetElementType = BudgetElementType.SPENDING) {\n    this.id = Formatter.formatId(name);\n    this.name = name;\n    this.description = description;\n    this.type = type;\n  }\n\n  /**\n   * Gets the active level.\n   */\n  abstract get activeLevel(): number;\n\n  /**\n   * Sets the active level of the element.\n   *\n   * @param level       The level to set as active.\n   */\n  abstract set activeLevel(level: number);\n\n  abstract get hasFocus(): boolean;\n\n  abstract set hasFocus(hasFocus: boolean);\n\n  /**\n   * Gets the level of the element.\n   *\n   * @return {number}   The level of the element.\n   */\n  abstract get level(): number;\n\n  /**\n   * Sets the level of the element.\n   *\n   * @param level       The level to set.\n   */\n  abstract set level(level: number);\n\n  /**\n   * Gets the element associated with the element.\n   *\n   * @returns {any}     The element associated.\n   */\n  abstract get svgElement(): any; // TODO: Check if the svg element is at the right place...\n\n  /**\n   * Sets the element associated with the element.\n   *\n   * @param element     The element to set.\n   */\n  abstract set svgElement(element: any);\n\n  /**\n   * Gets the polygons group associated with the element.\n   *\n   * @returns {AbstractPolygonsGroup}   The polygons group associated with the element.\n   */\n  abstract get polygonsGroup(): AbstractPolygonsGroup;\n\n  /**\n   * Gets the amount of the element.\n   */\n  get amount(): number {\n    return this.polygonsGroup.count * Config.MIN_AMOUNT;\n  }\n\n  /**\n   * Sets the amount of the element.\n   *\n   * @param amount        The amount to set.\n   */\n  set amount(amount: number) {\n    if (amount < 0) {\n      throw new TypeError('Invalid amount specified.');\n    }\n    this.polygonsGroup.count = Math.ceil(amount / Config.MIN_AMOUNT);\n  }\n\n   /**\n   * Indicates if the current element is active.\n   *\n   * @return {boolean}  TRUE if the current element is active. FALSE otherwise.\n   */\n  get isActive(): boolean {\n    return this._level === this.activeLevel;\n  }\n\n  get root(): BudgetElement {\n    let element: BudgetElement = this;\n    while (element.parent !== undefined) {\n      element = element.parent;\n    }\n    return element;\n  }\n\n  get selectedAmount(): number {\n    return this.polygonsGroup.selectionCount * Config.MIN_AMOUNT;\n  }\n\n  set selectedAmount(selectedAmount: number) {\n    if (selectedAmount < 0) {\n      selectedAmount = 0;\n    }\n    if (this.selectedAmount === selectedAmount) {\n      return;\n    }\n    selectedAmount = Math.min(selectedAmount, this.amount);\n    this.polygonsGroup.selectionCount = Math.ceil(selectedAmount / Config.MIN_AMOUNT);\n  }\n\n  get temporaryAmount(): number {\n    return this.polygonsGroup.temporaryCount * Config.MIN_AMOUNT;\n  }\n\n  set temporaryAmount(temporaryAmount: number) {\n    this.polygonsGroup.temporaryCount = Math.ceil(temporaryAmount / Config.MIN_AMOUNT);\n  }\n\n  abstract accept(visitor: BudgetElementVisitor);\n}\n","import { BudgetElement } from './budget-element';\n\n/**\n * Defines a budget element configuration\n */\ninterface BudgetElementConfig {\n  amount?: number;\n  children?: BudgetElement[];\n  name: string;\n}\n\n/**\n * Defines a budget configuration.\n */\nexport interface BudgetConfig {\n  incomes: BudgetElementConfig[];\n  spendings: BudgetElementConfig[];\n  year: number;\n}\n\n/**\n * Validates if the element specified is a budget element.\n *\n * @param budgetElement     The element to validate.\n * @returns {boolean}       TRUE if the element specified is a budget element. FALSE otherwise.\n */\nfunction isBudgetElement(budgetElement: any): budgetElement is BudgetElement {\n  let isValid = false;\n  if (budgetElement.children && budgetElement.children.length > 0) {\n    isValid = budgetElement.children.every(c => isBudgetElement(c));\n  } else if (budgetElement.amount && !isNaN(budgetElement.amount)){\n    isValid = true;\n  }\n  return isValid && budgetElement.name;\n}\n\n/**\n * Validates if the element specified is a valid budget configuration.\n *\n * @param budgetConfig      The configuration to validate.\n * @returns {boolean}       TRUE if the configuration specified is valid. FALSE otherwise.\n */\nexport function isBudgetConfig(budgetConfig: any): budgetConfig is BudgetConfig {\n  return !isNaN(budgetConfig.year) && budgetConfig.incomes.length > 0 &&\n    budgetConfig.incomes.every(s => isBudgetElement(s)) &&\n    budgetConfig.spendings.length > 0 &&\n    budgetConfig.spendings.every(s => isBudgetElement(s));\n}\n","import * as d3 from 'd3';\n\nimport { Config } from '../config';\n\nimport { isBudgetConfig, BudgetConfig } from './budget-config';\nimport { BudgetElement, BudgetElementType } from './budget-element';\nimport { BudgetElementGroup } from './budget-element-group';\nimport { SimpleBudgetElement } from './simple-budget-element';\n\n/**\n * The possible state of a budget.\n */\nexport enum BudgetState {\n  BALANCED = 'balanced',\n  DEFICIT = 'deficit',\n  SURPLUS = 'surplus'\n}\n\n/**\n * The budget summary.\n */\nexport interface BudgetSummary {\n  delta: number;\n  incomesAmount: number;\n  spendingsAmount: number;\n  state: BudgetState;\n}\n\n/**\n * Defines a budget.\n */\nexport class Budget {\n  readonly year: number;\n  readonly incomes: BudgetElement[] = [];\n  readonly spendings: BudgetElement[] = [];\n\n  private static _amountStack = [];\n\n  /**\n   * Initializes a new instance of the Budget class.\n   *\n   * @param {BudgetConfig} budgetConfig   The budget configuration to use to initialize a budget.\n   */\n  constructor(budgetConfig: BudgetConfig) {\n    if (!isBudgetConfig(budgetConfig)) {\n      throw new TypeError('Invalid configuration specified.');\n    }\n\n    function initialize(e, type, elements){\n      if (e.children && e.children.length > 0) {\n        const group = new BudgetElementGroup(e.name, e.description || '', type);\n        e.children.forEach(c => Budget.initializeBudgetElement(c, type, group));\n        elements.push(group);\n      } else if (Budget.isAcceptableAmount(e.amount)) {\n        elements.push(new SimpleBudgetElement(e.amount, e.name, e.description || '', type));\n      }\n      elements.sort((a, b) => d3.descending(a.amount, b.amount));\n    }\n    budgetConfig.incomes.forEach(e => initialize(e, BudgetElementType.INCOME, this.incomes));\n    budgetConfig.spendings.forEach(e => initialize(e, BudgetElementType.SPENDING, this.spendings));\n    this.year = budgetConfig.year;\n  }\n\n  /**\n   * Gets the elements of the budgets sorted in descending order.\n   *\n   * @returns {BudgetElement[]}   An array that contains the incomes and the spendings of the budget.\n   */\n  get elements(): BudgetElement[] {\n   return this.incomes.concat(this.spendings)\n     .sort((a, b) => d3.descending(a.amount, b.amount));\n  }\n\n  /**\n   * Gets the the budget summary (include the temporary amounts).\n   *\n   * @returns {BudgetSummary}       The summary of the budget.\n   */\n  get summary(): BudgetSummary {\n    const incomesAmount = this.incomes.reduce(\n      (total, income) => total + income.amount + income.temporaryAmount, 0);\n    const spendingsAmount = this.spendings.reduce(\n      (total, spending) => total + spending.amount + spending.temporaryAmount, 0);\n    const delta = incomesAmount - spendingsAmount;\n    let state = BudgetState.BALANCED;\n    if (delta < 0) {\n      state = BudgetState.DEFICIT;\n    } else if (delta > 0) {\n       state = BudgetState.SURPLUS;\n    }\n    return {\n      delta: delta,\n      incomesAmount: incomesAmount,\n      spendingsAmount: spendingsAmount,\n      state: state\n    };\n  }\n\n  /**\n   * Initialize a budget element.\n   *\n   * @param data                            The data to use to initialize the element.\n   * @param {BudgetElementType} type        The budget element type to use.\n   * @param {BudgetElementGroup} parent     The parent of the element to initialize.\n   */\n  private static initializeBudgetElement(data: any, type: BudgetElementType, parent: BudgetElementGroup) {\n    if (data.children && data.children.length > 0) {\n      Budget._amountStack.push(0);\n      const group = new BudgetElementGroup(data.name, data.description || '', type);\n      data.children.forEach(c => Budget.initializeBudgetElement(c, type, group));\n\n      const totalAmount = Budget._amountStack[Budget._amountStack.length - 1];\n      if (parent) {\n       if (Budget.isAcceptableAmount(group.amount) && group.children.length > 1) {\n         parent.addChild(group);\n       } else if (Budget.isAcceptableAmount(totalAmount)) {\n         parent.addChild(new SimpleBudgetElement(totalAmount, data.name, data.description || '', type));\n       }\n      }\n      Budget._amountStack.pop();\n      if (Budget._amountStack.length > 0) {\n        Budget._amountStack[Budget._amountStack.length - 1] += totalAmount;\n      }\n    } else if (parent && Budget.isAcceptableAmount(data.amount)) {\n      if (Budget._amountStack.length > 0) {\n        Budget._amountStack[Budget._amountStack.length - 1] += data.amount;\n      }\n      parent.addChild(new SimpleBudgetElement(data.amount, data.name, data.description || '', type));\n    }\n  }\n\n  private static isAcceptableAmount(amount: number) {\n    return Math.round(amount / Config.MIN_AMOUNT) > 0;\n  }\n}\n","import * as d3 from 'd3';\n\nimport { SimpleGauge } from '../../../node_modules/d3-simple-gauge/dist/d3-simple-gauge';\nimport { Config } from '../../config';\nimport { Budget } from '../budget';\nimport { BudgetElement } from '../budget-element';\n\nexport abstract class Layout {\n  protected readonly _budget: Budget;\n  protected readonly _svgElement: any;\n\n  protected _layout: any;\n  protected _budgetGroup: any;\n  protected _incomeGroups: any;\n  protected _spendingGroups: any;\n  protected _gaugeGroup: any;\n\n  protected _height: number;\n  protected _width: number;\n\n  protected constructor(budget: Budget, svgElement: any) {\n    this._budget = budget;\n    this._svgElement = svgElement;\n\n    const element = this._svgElement.node();\n    this._width = element.clientWidth;\n    this._height = element.clientHeight;\n  }\n\n  initialize() {\n    this._svgElement.attr('viewBox', `0 0 ${this._width} ${this._height}`);\n    this._layout = this._svgElement.select('#layout');\n    if (!this._layout.size()) {\n      this._layout = this._svgElement.append('g')\n        .attr('id', 'layout');\n    }\n    let separator = this._layout.select('.separator');\n    if (separator.size() <= 0) {\n      this._layout.append('line')\n        .attr('class', 'separator');\n    }\n    this._gaugeGroup = this._layout.select('#budget-gauge-group');\n    if (this._gaugeGroup.size() <= 0) {\n      this._gaugeGroup = this._layout.append('g')\n        .attr('id', 'budget-gauge-group');\n\n      this._gaugeGroup.append('rect')\n        .attr('width', Config.GAUGE_CONFIG.width)\n        .attr('height', Config.GAUGE_CONFIG.height + 45)\n        .attr('fill', '#fff');\n\n      this._gaugeGroup.append('text')\n        .attr('text-anchor', 'middle')\n        .attr('x', Config.GAUGE_CONFIG.width / 2)\n        .attr('y', 95);\n\n      // Associate the gauge with the group.\n      this._gaugeGroup.datum(new SimpleGauge({\n        barWidth: Config.GAUGE_CONFIG.barWidth,\n        el: this._gaugeGroup.append('g'),\n        height: Config.GAUGE_CONFIG.height,\n        interval: Config.GAUGE_CONFIG.interval,\n        needleRadius: Config.GAUGE_CONFIG.needleRadius,\n        sectionsCount: 2,\n        width: Config.GAUGE_CONFIG.width\n      }));\n    }\n\n    if (this._layout.select('#budget-group')) {\n      this._budgetGroup = this._layout.append('svg')\n        .attr('id', 'budget-group')\n        .attr('height', this._height - Config.GAUGE_CONFIG.height);\n    }\n    this._budgetGroup.attr('viewBox', `0 0 ${this._width} ${this._height}`);\n\n    function initializeBudgetElement(d) {\n      const g = d3.select(this);\n      const textGroup = g.append('g')\n        .attr('class', 'text-group');\n\n      textGroup.append('text')\n        .attr('class', 'amount')\n        .text(Formatter.formatAmount(d.amount));\n\n      textGroup.append('text')\n        .attr('class', 'label');\n\n      d.svgElement = g.append('g')\n        .attr('class', 'polygons-group');\n    }\n    const createGroups = (budgetElements: BudgetElement[], id: string) => {\n      let group = this._budgetGroup.select(`#${id}`);\n      if (!group.size()) {\n        group = this._budgetGroup.append('g')\n          .attr('id', id);\n      }\n      const groups = group.selectAll('g')\n        .data(budgetElements, d => d.id);\n\n      const groupsCreated = groups.enter()\n        .append('g')\n        .each(initializeBudgetElement);\n\n      return groups.merge(groupsCreated);\n    };\n\n    this._incomeGroups = createGroups(this._budget.incomes, 'incomes-group');\n    this._spendingGroups = createGroups(this._budget.spendings, 'spendings-group');\n    this.initializeLayout();\n  }\n\n  render() {\n    function updateAmount(d) {\n      d3.select(this)\n        .select('.amount')\n        .text(Formatter.formatAmount(d.amount + d.temporaryAmount));\n    }\n    this._incomeGroups = this._incomeGroups.sort((a, b) => d3.descending(a.amount, b.amount))\n      .each(updateAmount);\n    this._spendingGroups = this._spendingGroups.sort((a, b) => d3.descending(a.amount, b.amount))\n      .each(updateAmount);\n\n    const delta = this._budget.summary.delta;\n    this._gaugeGroup.datum().value = delta;\n    this._layout.select('#budget-gauge-group')\n      .select('text')\n      .text(Formatter.formatAmount(delta));\n\n    this.renderLayout();\n  }\n\n  protected abstract initializeLayout();\n  protected abstract renderLayout();\n}\n","import { Config } from '../../config';\nimport { BudgetElement } from '../budget-element';\nimport { BudgetElementGroup } from '../budget-element-group';\nimport { SimpleBudgetElement } from '../simple-budget-element';\n\nimport { BudgetElementVisitor } from './budget-element-visitor';\n\nexport class RenderingVisitor implements BudgetElementVisitor {\n  private readonly _defaultTransitionDuration: number;\n  private readonly _levelStack = [];\n  private _transitionDuration: number;\n\n  constructor(defaultTransitionDuration: number) {\n    this._defaultTransitionDuration = this.transitionDuration = defaultTransitionDuration;\n  }\n\n  get transitionDuration(): number {\n    return this._transitionDuration;\n  }\n\n  set transitionDuration(duration: number) {\n    if (duration < 0) {\n      throw new RangeError('The transition duration must be greater or equal to 0.');\n    }\n    this._transitionDuration = duration;\n  }\n\n  resetTransitionDuration() {\n    this._transitionDuration = this._defaultTransitionDuration;\n  }\n\n  visitBudgetElementGroup(group: BudgetElementGroup) {\n    if (this._levelStack.length === 0) {\n      group.polygonsGroup.update();\n    }\n    this._levelStack.push(0);\n    group.svgElement.selectAll('.empty')\n      .remove();\n\n    RenderingVisitor.updateBoundary(group);\n    group.children.forEach((c, i) => {\n      c.accept(this);\n      c.svgElement.transition()\n        .duration(this._transitionDuration)\n        .attr('class', (c.level - 1 === c.activeLevel && Config.IS_USING_DISTINCT_COLORS) ? `group${i}` : '')\n        .attr('transform',\n          `translate(${c.polygonsGroup.translation.x}, ${c.polygonsGroup.translation.y})`);\n    });\n\n    if (group.activeLevel - group.level === 1) {\n      const offset = this._levelStack[this._levelStack.length - 1] >= 1 ? 14 : 7;\n      const halfOffset = offset / 2;\n\n      const levelGroup = group.svgElement.select('.level-group');\n      levelGroup.select('rect')\n        .transition()\n        .duration(this._transitionDuration)\n        .attr('x', -offset)\n        .attr('y', -halfOffset)\n        .attr('height', group.polygonsGroup.boundingBox.height + offset)\n        .attr('width', offset);\n\n      levelGroup.select('line')\n        .transition()\n        .duration(this._transitionDuration)\n        .attr('x1', -offset)\n        .attr('y1', -halfOffset)\n        .attr('x2', -offset)\n        .attr('y2', group.polygonsGroup.boundingBox.height + halfOffset);\n\n      this._levelStack[this._levelStack.length - 1] = 1;\n    } else {\n      const levelGroup = group.svgElement.select('.level-group');\n      levelGroup.select('rect')\n        .transition()\n        .duration(this._transitionDuration)\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 0)\n        .attr('width', 0);\n\n      levelGroup.select('line')\n        .transition()\n        .duration(this._transitionDuration)\n        .attr('x1', 0)\n        .attr('y1', 0)\n        .attr('x2', 0)\n        .attr('y2', 0);\n    }\n    if (group.isActive && group.amount === 0) {\n      RenderingVisitor.createEmptyElement(group);\n    }\n\n    const count = this._levelStack.pop();\n    if (this._levelStack.length >= 1) {\n      this._levelStack[this._levelStack.length - 1] += count;\n    }\n  }\n\n  visitSimpleBudgetElement(element: SimpleBudgetElement) {\n    const polygons = element.svgElement.select('.squares').selectAll('.square')\n      .data(element.polygonsGroup.polygons, d => d.id);\n\n    RenderingVisitor.updateBoundary(element);\n    polygons.enter()\n      .append('polygon')\n      .on('animationend', function() {\n        if (!element.hasFocus) {\n          this.classList.remove('selected');\n          element.selectedAmount = 0;\n        }\n      })\n      .merge(polygons)\n      .attr('class', `square ${element.type}`)\n      .classed('focused', element.hasFocus)\n      .classed('selected', d => d.isSelected)\n      .classed('temporary', d => d.isTemporary)\n      .classed('added', d => d.isTemporary && element.temporaryAmount > 0)\n      .classed('removed', d => d.isTemporary && element.temporaryAmount < 0)\n      .transition()\n      .duration(this._transitionDuration)\n      .attr('points', d => d.points.map(e => `${e.x} ${e.y}`).join(', '));\n\n    polygons.exit()\n      .remove();\n\n    if (element.isActive && element.amount === 0) {\n      RenderingVisitor.createEmptyElement(element);\n    }\n  }\n\n  private static createEmptyElement(element: BudgetElement) {\n    const sideLength = element.polygonsGroup.config.sideLength;\n    element.svgElement.append('rect')\n      .attr('class', 'square empty')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', sideLength)\n      .attr('height', sideLength);\n  }\n\n  private static updateBoundary(element: BudgetElement) {\n    element.svgElement.select(`.boundary${element.level}`)\n      .attr('points', (element.level - 1 <= element.activeLevel)\n        ? element.polygonsGroup.boundary.map(e => `${e.x} ${e.y}`).join(', ')\n        : '');\n  }\n}\n","export interface Command {\n  execute();\n}\n\nexport interface UndoableCommand extends Command {\n  undo();\n}\n\nexport function isCommand(command: any): command is Command {\n  return command !== undefined && command.execute !== undefined;\n}\n\nexport function isUndoableCommand(command: any): command is UndoableCommand {\n  return isCommand(command) && (command as any).undo !== undefined;\n}\n","import { BudgetElement } from '../budget-element';\nimport { Layout } from '../layouts/layout';\nimport { RenderingVisitor } from '../visitors/rendering-visitor';\n\nimport { UndoableCommand } from './command';\n\nexport class AddCommand implements UndoableCommand {\n  private readonly _element: BudgetElement;\n  private readonly _amount: number;\n  private readonly _rendering: RenderingVisitor;\n  private readonly _layout: Layout;\n  private _isFirstTime = true;\n\n  constructor(element: BudgetElement, rendering: RenderingVisitor, layout: Layout) {\n    this._amount = element.temporaryAmount;\n    this._element = element;\n    this._rendering = rendering;\n    this._layout = layout;\n  }\n\n  execute() {\n    this._element.temporaryAmount = 0;\n    this._element.amount += this._amount;\n    this.update();\n  }\n\n  undo() {\n    this._element.amount -= this._amount;\n    this.update();\n  }\n\n  private update() {\n    this._element.selectedAmount = 0;\n    this._rendering.transitionDuration = 0;\n    this._element.accept(this._rendering);\n    this._rendering.resetTransitionDuration();\n\n    if (this._isFirstTime) {\n      this._element.selectedAmount = this._amount;\n    }\n    const root = this._element.root;\n    if (this._isFirstTime || root !== this._element) {\n      root.accept(this._rendering);\n    }\n    this._layout.render();\n    this._isFirstTime = false;\n  }\n}\n","/**\n * Defines an event.\n *\n * @see http://stackoverflow.com/questions/12881212/does-typescript-support-events-on-classes\n */\nexport class Event<T> {\n  private _handlers: { handler: {(data?: T): void}, context: any }[] = [];\n\n  /**\n   * Registers an handler.\n   *\n   * @param handler       Handler to register.\n   * @param [context]     The context to use with the handler.\n   */\n  register(handler: { (data?: T): void }, context?: any) {\n    if (!context) {\n      context = this;\n    }\n    this._handlers.push({ handler: handler, context: context });\n  }\n\n  /**\n   * Unregisters an handler.\n   *\n   * @param handler       Handler to unregister.\n   * @param [context]     The context associated with the handler to unregister.\n   */\n  unregister(handler: { (data?: T): void }, context?: any) {\n    if (!context) {\n      context = this;\n    }\n    this._handlers = this._handlers.filter(h => h.handler !== handler && h.context !== context);\n  }\n\n  /**\n   * Invokes the event.\n   *\n   * @param [data]        The data to pass to the handlers.\n   */\n   invoke(data?: T) {\n    this._handlers.slice(0).forEach(h => h.handler.call(h.context, data));\n  }\n}\n","import { Event } from '../../utils/event';\n\nimport { isUndoableCommand, Command, UndoableCommand } from './command';\n\nexport class CommandInvoker {\n  onCommandInvoked: Event<void> = new Event<void>();\n\n  private _commands: UndoableCommand[] = [];\n  private _currentIndex = -1;\n\n  get canUndo(): boolean {\n    return this._commands.length >= 1 && this._currentIndex >= 0;\n  }\n\n  get canRedo(): boolean {\n    return this._commands.length >= 1 && this._currentIndex < this._commands.length - 1;\n  }\n\n  undo() {\n    if (this.canUndo) {\n      this._commands[this._currentIndex--].undo();\n      this.onCommandInvoked.invoke();\n    }\n  }\n\n  redo() {\n    if (this.canRedo) {\n      this._commands[++this._currentIndex].execute();\n      this.onCommandInvoked.invoke();\n    }\n  }\n\n  invoke(command: Command, isSavingCommand = true) {\n    if (isSavingCommand && isUndoableCommand(command)) {\n      this._commands = this._commands.slice(0, ++this._currentIndex);\n      this._commands.push(command);\n    }\n    command.execute();\n    this.onCommandInvoked.invoke();\n  }\n}\n","import { BudgetElement } from '../budget-element';\nimport { Layout } from '../layouts/layout';\nimport { RenderingVisitor } from '../visitors/rendering-visitor';\n\nimport { UndoableCommand } from './command';\n\nexport class DeleteCommand implements UndoableCommand {\n  private readonly _amount: number;\n  private readonly _element: BudgetElement;\n  private readonly _rendering: RenderingVisitor;\n  private readonly _layout: Layout;\n\n  constructor(element: BudgetElement, rendering: RenderingVisitor, layout: Layout) {\n    this._amount = Math.abs(element.temporaryAmount);\n    this._element = element;\n    this._rendering = rendering;\n    this._layout = layout;\n  }\n\n  execute() {\n    this._element.temporaryAmount = 0;\n    this._element.amount -= this._amount;\n    this.update();\n  }\n\n  undo() {\n    this._element.amount += this._amount;\n    this.update();\n  }\n\n  private update() {\n    this._rendering.transitionDuration = 0;\n    this._element.accept(this._rendering);\n    this._rendering.resetTransitionDuration();\n\n    const root = this._element.root;\n    if (this._element !== root) {\n      root.accept(this._rendering);\n    }\n    this._layout.render();\n  }\n}\n","import * as d3 from 'd3';\nimport * as d3Tip from 'd3-tip';\n\nimport { Config } from '../config';\nimport { PolygonsGroupConfig } from '../geometry/polygons-group-configs';\n\nimport { Budget } from './budget';\nimport { BudgetElement } from './budget-element';\nimport { BudgetElementGroup } from './budget-element-group';\nimport { AddCommand } from './commands/add-command';\nimport { CommandInvoker } from './commands/command-invoker';\nimport { Layout } from './layouts/layout';\nimport { SimpleBudgetElement } from './simple-budget-element';\nimport { BudgetElementVisitor } from './visitors/budget-element-visitor';\nimport { RenderingVisitor } from './visitors/rendering-visitor';\nimport { DeleteCommand } from './commands/delete-command';\n\nexport class BudgetVisualization {\n  private readonly _budget: Budget;\n  private readonly _commandInvoker: CommandInvoker;\n  private readonly _svgElement: any;\n  private readonly _rendering: RenderingVisitor;\n\n  private _layout: Layout;\n  private _isInitialized = false;\n\n  constructor(budget: Budget, svgElement: any, layout: Layout,\n              commandInvoker: CommandInvoker = new CommandInvoker(),\n              rendering: RenderingVisitor = new RenderingVisitor(Config.TRANSITION_DURATION)) {\n    this._budget = budget;\n    this._svgElement = svgElement;\n    this._layout = layout;\n    this._commandInvoker = commandInvoker;\n    this._rendering = rendering;\n  }\n\n  get budget(): Budget {\n    return this._budget;\n  }\n\n  set activeLevel(activeLevel: number) {\n    this._budget.elements.forEach(e => {\n      e.activeLevel = activeLevel;\n      e.accept(this._rendering);\n    });\n    this._layout.render();\n  }\n\n  initialize() {\n    if (this._isInitialized) {\n      throw new Error('The visualization is already initialized.');\n    }\n    const self = this;\n    let hoveredElement: BudgetElement = undefined;\n    let selectedElement: BudgetElement = undefined;\n\n    this._layout.initialize();\n\n    // Tooltip initialization\n    const tip = d3Tip()\n      .html(d => {\n        // TODO: Remove H1\n        let str = `<h1>${d.name} (${Formatter.formatAmount(d.amount)})</h1>`;\n        str += d.description ? `<p>${d.description}</p>` : '';\n        return str;\n      });\n\n    this._svgElement.call(tip);\n\n    const executeCommand = () => {\n      if (selectedElement !== undefined) {\n        if (selectedElement.temporaryAmount > 0) {\n          this._commandInvoker.invoke(new AddCommand(selectedElement, this._rendering, this._layout));\n        } else {\n          this._commandInvoker.invoke(new DeleteCommand(selectedElement, this._rendering, this._layout));\n        }\n      }\n    };\n\n    // Creation / Deletion\n    d3.select('body')\n      .on('wheel', () => {\n        if (selectedElement) {\n          const delta = d3.event.deltaY;\n          selectedElement.temporaryAmount += delta / 100 * Config.MIN_AMOUNT; // TODO: Put min amount in variable.\n          this._rendering.transitionDuration = 0;\n          selectedElement.root.accept(this._rendering);\n          this._rendering.resetTransitionDuration();\n          this._layout.render();\n        }\n      })\n      .on('click', () => {\n        if (selectedElement && selectedElement.hasFocus) {\n          selectedElement.hasFocus = false;\n          selectedElement.accept(this._rendering);\n        }\n        if (selectedElement && selectedElement.temporaryAmount !== 0) {\n          executeCommand();\n        }\n        selectedElement = undefined;\n      });\n\n    // Events\n    const events = new (class implements BudgetElementVisitor {\n      visitBudgetElementGroup(group: BudgetElementGroup) {\n        this.subscribe(group);\n\n        group.svgElement.select('.level-group')\n          .on('mouseenter', () => {\n            hoveredElement = group;\n            tip.direction('w')\n              .offset([0, -8])\n              .attr('class', 'd3-tip level-tip')\n              .show.call(group.svgElement.node(), group);\n          })\n          .on('mouseleave', () => {\n            hoveredElement = undefined;\n            tip.hide();\n          })\n          .on('click', () => {\n            d3.event.stopPropagation();\n            if (selectedElement.temporaryAmount !== 0) {\n              executeCommand();\n            }\n            tip.hide();\n            group.activeLevel = group.level;\n            group.root.accept(self._rendering);\n            self._layout.render();\n          });\n        group.children.forEach(c => c.accept(this));\n      }\n\n      visitSimpleBudgetElement(element: SimpleBudgetElement) {\n        this.subscribe(element);\n      }\n\n      subscribe(element: BudgetElement) {\n        if (!element.svgElement) {\n          throw new TypeError('The SVG element is undefined.');\n        }\n\n        function showTooltip() {\n          if (element.level > 0) {\n            tip.direction('e')\n              .offset([0, 8])\n              .attr('class', 'd3-tip element-tip')\n              .show.call(element.svgElement.node(), element);\n          }\n        }\n\n        element.svgElement.on('click', () => {\n          if (element.isActive) {\n            d3.event.stopPropagation();\n            if (selectedElement && selectedElement !== element && selectedElement.hasFocus) {\n              selectedElement.hasFocus = false;\n              selectedElement.accept(self._rendering);\n              if (selectedElement.temporaryAmount !== 0) {\n                executeCommand();\n              }\n            }\n            selectedElement = element;\n            element.hasFocus = true;\n            element.accept(self._rendering);\n          }\n        });\n        element.svgElement.on('mouseenter', () => {\n          if (element.isActive) {\n            hoveredElement = element;\n            hoveredElement.svgElement.classed('hovered', true);\n            showTooltip();\n          }\n        });\n        element.svgElement.on('mouseover', () => {\n          if (element.isActive) {\n            hoveredElement = element;\n            hoveredElement.svgElement.classed('hovered', true);\n            showTooltip();\n          }\n        });\n        element.svgElement.on('mouseleave', () => {\n          if (element.isActive && hoveredElement) {\n            hoveredElement.svgElement.classed('hovered', false);\n            hoveredElement = undefined;\n            tip.hide();\n          }\n        });\n        element.svgElement.on('dblclick', () => {\n          if (element.isActive) {\n            if (selectedElement.temporaryAmount !== 0) {\n              executeCommand();\n            }\n            selectedElement = undefined;\n            element.activeLevel += 1;\n            element.root.accept(self._rendering);\n            self._layout.render();\n\n            hoveredElement.svgElement.classed('hovered', false);\n            hoveredElement = undefined;\n            tip.hide();\n          }\n        });\n      }\n    });\n\n    // Events subscription\n    this._budget.elements.forEach(e => {\n      e.accept(events);\n      e.accept(this._rendering);\n    });\n\n    // Layout initialisation\n    this._layout.render();\n    this._isInitialized = true;\n  }\n\n  update(layout: Layout, polygonsGroupConfig?: PolygonsGroupConfig) {\n    if (!this._isInitialized) {\n      throw new Error('The visualization is not initialized. Please initialize the visualization first.');\n    }\n    if (polygonsGroupConfig) {\n      const polygonsConfigs = new (class implements BudgetElementVisitor {\n        visitBudgetElementGroup(group: BudgetElementGroup) {\n          group.polygonsGroup.config = polygonsGroupConfig;\n          group.children.forEach(c => c.accept(this));\n        }\n\n        visitSimpleBudgetElement(element: SimpleBudgetElement) {\n          element.polygonsGroup.config = polygonsGroupConfig;\n        }\n      });\n      this._budget.elements.forEach(e => {\n        e.accept(polygonsConfigs);\n        e.accept(this._rendering);\n      });\n    }\n    this._layout = layout;\n    this._layout.initialize();\n    this._layout.render();\n  }\n}\n","export class LayoutConfig {\n  averageCharSize: number;\n  horizontalMinSpacing: number;\n  horizontalPadding: number;\n  polygonLength: number;\n  transitionDuration: number;\n  verticalMinSpacing: number;\n  verticalPadding: number;\n}\n\nexport function isLayoutConfig(config: any): config is LayoutConfig {\n  return !isNaN(config.averageCharSize) && config.averageCharSize > 0 &&\n    !isNaN(config.horizontalMinSpacing) && config.horizontalMinSpacing >= 0 &&\n    !isNaN(config.horizontalPadding) && config.horizontalPadding >= 0 &&\n    !isNaN(config.polygonLength) && config.polygonLength > 0 &&\n    !isNaN(config.transitionDuration) && config.transitionDuration >= 0 &&\n    !isNaN(config.verticalMinSpacing) && config.verticalMinSpacing >= 0 &&\n    !isNaN(config.verticalPadding) && config.verticalPadding >= 0;\n}\n","import * as d3 from 'd3';\n\nimport { Config } from '../../config';\nimport { Budget } from '../budget';\n\nimport { Layout } from './layout';\nimport { isLayoutConfig, LayoutConfig } from './layout-config';\n\nexport class BarsLayout extends Layout {\n  private readonly _config: LayoutConfig;\n\n  constructor(budget: Budget, svgElement: any, config: LayoutConfig) {\n    super(budget, svgElement);\n    if (!isLayoutConfig(config)) {\n      throw new TypeError('Invalid configuration specified.');\n    }\n    this._config = config;\n  }\n\n  protected initializeLayout() {\n    const self = this;\n    let maxLabelHeight = 0;\n\n    function initializeLabel(d) {\n      const g = d3.select(this);\n\n      let label = d.name;\n      const index = label.indexOf(',');\n      if (index !== -1) {\n        label = label.substring(0, index);\n      }\n\n      const labelWords = label.split(' ');\n      let line = '';\n      const lines = [];\n      labelWords.forEach(w => {\n        if (line.length * self._config.averageCharSize < self._config.polygonLength) {\n          line += (line.length === 0) ? w : ` ${w}`;\n        } else {\n          lines.push(line);\n          line = w;\n        }\n      });\n      lines.push(line);\n\n      const textGroup = g.select('.text-group')\n        .attr('transform', '');\n\n      textGroup.select('.amount')\n        .attr('text-anchor', 'middle')\n        .attr('x', self._config.polygonLength / 2)\n        .attr('y', 0);\n\n      const labelLines = textGroup.select('.label')\n        .attr('text-anchor', 'middle')\n        .attr('y', 5)\n        .selectAll('tspan')\n        .data(lines);\n\n      labelLines.exit()\n        .remove();\n\n      const labelLinesCreated = labelLines.enter()\n        .append('tspan');\n\n      labelLines.merge(labelLinesCreated)\n        .attr('x', self._config.polygonLength / 2)\n        .attr('dy', 11)\n        .text(d => d);\n\n      const height = (textGroup.node() as SVGGraphicsElement).getBBox().height;\n      if (maxLabelHeight < height) {\n        maxLabelHeight = height;\n      }\n    }\n\n    function adjustPolygonsGroup() {\n      d3.select(this).select('.polygons-group')\n        .attr('transform', `translate(0, ${maxLabelHeight})`);\n    }\n\n    this._incomeGroups.each(initializeLabel)\n      .each(adjustPolygonsGroup);\n    this._spendingGroups.each(initializeLabel)\n      .each(adjustPolygonsGroup);\n\n    // Compute min size of SVG viewBox.\n    const maxCount = Math.max(this._budget.incomes.length, this._budget.spendings.length);\n    const approxWidth = this._config.horizontalPadding * 2 + maxCount * this._config.polygonLength +\n      (maxCount - 1) * this._config.horizontalMinSpacing;\n\n    const maxElement = this._budget.elements[0];\n    const maxPolygonHeight = Math.ceil(maxElement.polygonsGroup.count / maxElement.polygonsGroup.config.maxCountPerLine)\n      * maxElement.polygonsGroup.config.sideLength;\n    const approxHeight = (this._config.verticalPadding * 2 + maxPolygonHeight + maxLabelHeight) * 2;\n\n    this._width = Math.max(approxWidth, this._width);\n    this._height = Math.max(approxHeight, this._height);\n    this._svgElement.attr('viewBox', `0 0 ${this._width} ${this._height}`);\n\n    const halfHeight = this._height / 2;\n    this._layout.select('.separator')\n      .attr('x1', 0)\n      .attr('y1', halfHeight)\n      .attr('x2', this._width)\n      .attr('y2', halfHeight);\n\n    this._gaugeGroup\n      .attr('transform', `translate(${this._width / 2 - Config.GAUGE_CONFIG.width / 2}, ${this._height - 110})`);\n\n    this._layout.select('#incomes-group')\n      .attr('transform', 'translate(0, 0)');\n\n    this._layout.select('#spendings-group')\n      .attr('transform', `translate(0, ${halfHeight})`);\n  }\n\n  protected renderLayout() {\n    const self = this;\n    let x;\n\n    function applyTransform(d, i) {\n      if (i === 0) {\n        x = self._config.horizontalPadding;\n      } else {\n        x += self._config.polygonLength + self._config.horizontalMinSpacing;\n      }\n      return `translate(${x}, ${self._config.verticalPadding})`;\n    }\n\n    this._incomeGroups.transition()\n      .duration(this._config.transitionDuration)\n      .attr('transform', applyTransform);\n\n    this._spendingGroups.transition()\n      .duration(this._config.transitionDuration)\n      .attr('transform', applyTransform);\n  }\n}\n","import * as d3 from 'd3';\n\nimport { Config } from '../../config';\nimport { Budget } from '../budget';\n\nimport { Layout } from './layout';\nimport { isLayoutConfig, LayoutConfig } from './layout-config';\n\nexport class GridLayout extends Layout {\n  private readonly _config: LayoutConfig;\n\n  constructor(budget: Budget, svgElement: any, config: LayoutConfig) {\n    super(budget, svgElement);\n    if (!isLayoutConfig(config)) {\n      throw new TypeError('Invalid configuration specified.');\n    }\n    this._config = config;\n  }\n\n  protected initializeLayout() {\n    const self = this;\n    const halfWidth = this._width / 2;\n\n    this._layout.select('.separator')\n      .attr('x1', halfWidth)\n      .attr('y1', 0)\n      .attr('x2', halfWidth)\n      .attr('y2', this._height);\n\n    this._gaugeGroup\n      .attr('transform', `translate(${this._width / 2 - Config.GAUGE_CONFIG.width / 2}, ${this._height - 110})`);\n\n    function initializeLabel(d) {\n      const g = d3.select(this);\n\n      let label = d.name;\n      const index = label.indexOf(',');\n      if (index !== -1) {\n        label = label.substring(0, index);\n      }\n\n      const labelWords = label.split(' ');\n      let line = '';\n      const lines = [];\n      labelWords.forEach(w => {\n        if (line.length * self._config.averageCharSize < self._config.polygonLength) {\n          line += (line.length === 0) ? w : ` ${w}`;\n        } else {\n          lines.push(line);\n          line = w;\n        }\n      });\n      lines.push(line);\n\n      const textGroup = g.select('.text-group')\n        .attr('transform', '');\n\n      textGroup.select('.amount')\n        .attr('text-anchor', 'middle')\n        .attr('x', self._config.polygonLength / 2)\n        .attr('y', 0);\n\n      const labelLines = textGroup.select('.label')\n        .attr('text-anchor', 'middle')\n        .attr('y', 5)\n        .selectAll('tspan')\n        .data(lines);\n\n      labelLines.exit()\n        .remove();\n\n      const labelLinesCreated = labelLines.enter()\n        .append('tspan');\n\n      labelLines.merge(labelLinesCreated)\n        .attr('x', self._config.polygonLength / 2)\n        .attr('dy', 11)\n        .text(d => d);\n    }\n    this._layout.select('#incomes-group')\n      .attr('transform', 'translate(0, 0)');\n\n    this._layout.select('#spendings-group')\n      .attr('transform', `translate(${this._width / 2}, 0)`);\n\n    this._incomeGroups.each(initializeLabel);\n    this._spendingGroups.each(initializeLabel);\n  }\n\n  protected renderLayout() {\n    const self = this;\n    const halfWidth = this._width / 2;\n\n    const count = Math.floor((halfWidth - 2 * this._config.horizontalPadding) /\n      (this._config.polygonLength + this._config.horizontalMinSpacing));\n\n    const spacing = (halfWidth - 2 * this._config.horizontalPadding -\n      count * this._config.polygonLength) / (count - 1);\n\n    let maxTextHeights = [];\n    function findMaxTextHeights(d, i) {\n      const textGroup = d3.select(this).select('.text-group');\n      if (i === 0) {\n        maxTextHeights = [];\n      }\n      if (i % count === 0) {\n        maxTextHeights.push(0);\n      }\n      const index = Math.floor(i / count);\n      const height = (textGroup.node() as SVGGraphicsElement).getBBox().height;\n      if (maxTextHeights[index] < height) {\n        maxTextHeights[index] = height;\n      }\n    }\n\n    let x, y, maxHeight, maxHeights = [];\n    function applyTransform(d, i) {\n      if (i === 0) {\n        maxHeights = [];\n        y = self._config.verticalPadding;\n        maxHeight = 0;\n      }\n      if (i % count === 0) {\n        maxHeights.push(0);\n        x = self._config.horizontalPadding;\n        if (i !== 0) {\n          y += maxHeight + self._config.verticalMinSpacing;\n        }\n        maxHeight = 0;\n      } else {\n        x += self._config.polygonLength + spacing;\n      }\n      const maxTextHeight = maxTextHeights[Math.floor(i / count)];\n      d3.select(this)\n        .select('.polygons-group')\n        .attr('transform', `translate(0, ${maxTextHeight})`);\n\n      if (d.polygonsGroup.boundingBox.height > maxHeight) {\n        maxHeight = d.polygonsGroup.boundingBox.height + maxTextHeight;\n        maxHeights[Math.floor(i / count)] = maxHeight;\n      }\n      return `translate(${x}, ${y})`;\n    }\n\n    this._incomeGroups.each(findMaxTextHeights)\n      .transition()\n      .duration(this._config.transitionDuration)\n      .attr('transform', applyTransform);\n\n    this._spendingGroups.each(findMaxTextHeights)\n      .transition()\n      .duration(this._config.transitionDuration)\n      .attr('transform', applyTransform);\n\n    this._budgetGroup\n      .transition()\n      .duration(this._config.transitionDuration)\n      .attr('viewBox', () => {\n        const computedHeight = d3.sum(maxHeights) + 2 * self._config.verticalPadding +\n          (maxHeights.length - 1) * self._config.verticalMinSpacing + 100;\n\n        const ratio = computedHeight / this._height;\n        const computedWidth = this._width /** ratio*/;\n\n        /*this._height = d3.sum(maxHeights) + 2 * self._config.verticalPadding +\n          (maxHeights.length - 1) * self._config.verticalMinSpacing + 100;*/\n        //this._width = this._height * this._ratio;\n\n        return `0 0 ${computedWidth} ${computedHeight}`;\n      });\n  }\n}\n","import d3 = require('d3');\n\nimport { Budget } from '../budget';\n\nimport { Layout } from './layout';\nimport { isLayoutConfig, LayoutConfig } from './layout-config';\nimport { Config } from '../../config';\n\nexport class HorizontalBarsLayout extends Layout {\n  private readonly _config: LayoutConfig;\n\n  constructor(budget: Budget, svgElement: any, config: LayoutConfig) {\n    super(budget, svgElement);\n    if (!isLayoutConfig(config)) {\n      throw new TypeError('Invalid configuration specified.');\n    }\n    this._config = config;\n  }\n\n  protected initializeLayout() {\n    const self = this;\n    const maxLengthName = d3.max(this._budget.elements, d => d.name.length);\n    let maxLabelWidth = 0;\n\n    function initializeLabel(d) {\n      const g = d3.select(this);\n\n      let label = d.name;\n      const index = label.indexOf(',');\n      if (index !== -1) {\n        label = label.substring(0, index);\n      }\n\n      const labelWords = label.split(' ');\n      let line = '';\n      const lines = [];\n      labelWords.forEach(w => {\n        if (line.length * self._config.averageCharSize < maxLengthName * self._config.averageCharSize / 4) {\n          line += (line.length === 0) ? w : ` ${w}`;\n        } else {\n          lines.push(line);\n          line = w;\n        }\n      });\n      lines.push(line);\n\n      const textGroup = g.select('.text-group');\n      textGroup.select('.amount')\n        .attr('text-anchor', 'end')\n        .attr('x', 0)\n        .attr('y', 7);\n\n      const labelLines = textGroup.select('.label')\n        .attr('text-anchor', 'end')\n        .attr('y', 10)\n        .selectAll('tspan')\n        .data(lines);\n\n      labelLines.exit()\n        .remove();\n\n      const labelLinesCreated = labelLines.enter()\n        .append('tspan');\n\n      labelLines.merge(labelLinesCreated)\n        .attr('x', 0)\n        .attr('dy', 11)\n        .text(d => d);\n\n      g.select('.polygons-group')\n        .attr('transform', '');\n\n      const labelWidth = (textGroup.node() as SVGGraphicsElement).getBBox().width;\n      if (maxLabelWidth < labelWidth) {\n        maxLabelWidth = labelWidth;\n      }\n    }\n\n    function adjustGroup() {\n      const g = d3.select(this);\n      g.select('.text-group')\n        .attr('transform', `translate(${maxLabelWidth}, 0)`);\n\n      g.select('.polygons-group')\n        .attr('transform', `translate(${maxLabelWidth + self._config.horizontalPadding}, 0)`);\n    }\n\n    this._incomeGroups.each(initializeLabel)\n      .each(adjustGroup);\n    this._spendingGroups.each(initializeLabel)\n      .each(adjustGroup);\n\n    // Compute min size of SVG viewBox.\n    const maxCount = Math.max(this._budget.incomes.length, this._budget.spendings.length);\n    const approxHeight = this._config.verticalPadding * 2 + maxCount * this._config.polygonLength +\n      (maxCount - 1) * this._config.verticalMinSpacing;\n\n    const maxElement = this._budget.elements[0];\n    const maxPolygonHeight = Math.ceil(maxElement.polygonsGroup.count /\n      maxElement.polygonsGroup.config.maxCountPerLine) * maxElement.polygonsGroup.config.sideLength;\n    const approxWidth = (this._config.horizontalPadding * 2 + maxPolygonHeight + maxLabelWidth +\n      self._config.horizontalPadding) * 2;\n\n    this._width = Math.max(approxWidth, this._width);\n    this._height = Math.max(approxHeight, this._height);\n    this._svgElement.attr('viewBox', `0 0 ${this._width} ${this._height}`);\n\n    const halfWidth = this._width / 2;\n    this._layout.select('.separator')\n      .attr('x1', halfWidth)\n      .attr('y1', 0)\n      .attr('x2', halfWidth)\n      .attr('y2', this._height);\n\n    this._gaugeGroup\n      .attr('transform', `translate(${this._width / 2 - Config.GAUGE_CONFIG.width / 2}, ${this._height - 110})`);\n\n    this._layout.select('#incomes-group')\n      .attr('transform', `translate(${halfWidth}, 0)`);\n    this._layout.select('#spendings-group')\n      .attr('transform', 'translate(0, 0)');\n  }\n\n  protected renderLayout() {\n    const self = this;\n    let y;\n\n    function applyTransform(d, i) {\n      if (i === 0) {\n        y = self._config.verticalPadding;\n      } else {\n        y += self._config.polygonLength + self._config.verticalMinSpacing;\n      }\n      return `translate(${self._config.horizontalPadding}, ${y})`;\n    }\n\n    this._incomeGroups.transition()\n      .duration(this._config.transitionDuration)\n      .attr('transform', applyTransform);\n\n    this._spendingGroups.transition()\n      .duration(this._config.transitionDuration)\n      .attr('transform', applyTransform);\n  }\n}\n","import * as d3 from 'd3';\n\nimport { Budget } from './budget/budget';\nimport { BudgetConfig } from './budget/budget-config';\nimport { BudgetVisualization } from './budget/budget-visualization';\nimport { CommandInvoker } from './budget/commands/command-invoker';\nimport { BarsLayout } from './budget/layouts/bars-layout';\nimport { GridLayout } from './budget/layouts/grid-layout';\nimport { HorizontalBarsLayout } from './budget/layouts/horizontal-bars-layout';\nimport { Config } from './config';\nimport { PolygonsGroupOrientation } from './geometry/polygons-group-configs';\n\nd3.json('./data/2018/2018.json').then((config: BudgetConfig) => {\n  const svg = d3.select('svg');\n  const budget = new Budget(config);\n  const visualizationConfigs = [\n    {\n      layout: new GridLayout(budget, svg, {\n        averageCharSize: Config.AVERAGE_CHAR_SIZE,\n        horizontalMinSpacing: 30,\n        horizontalPadding: 40,\n        polygonLength: Config.SIDE_LENGTH * Config.MAX_COUNT_PER_LINE,\n        transitionDuration: 500,\n        verticalMinSpacing: 30,\n        verticalPadding: 30\n      }),\n      polygonsGroupConfig: Config.DEFAULT_POLYGONS_GROUP_CONFIG\n    },\n    {\n      layout: new HorizontalBarsLayout(budget, svg, {\n        averageCharSize: Config.AVERAGE_CHAR_SIZE,\n        horizontalMinSpacing: 30,\n        horizontalPadding: 20,\n        polygonLength: 5 * 5,\n        transitionDuration: 500,\n        verticalMinSpacing: 20,\n        verticalPadding: 30\n      }),\n      polygonsGroupConfig: {\n        maxCountPerLine: 5,\n        orientation: PolygonsGroupOrientation.VERTICAL,\n        sideLength: 5\n      }\n    },\n    {\n      layout: new BarsLayout(budget, svg, {\n        averageCharSize: Config.AVERAGE_CHAR_SIZE,\n        horizontalMinSpacing: 30,\n        horizontalPadding: 40,\n        polygonLength: 12 * 5,\n        transitionDuration: 500,\n        verticalMinSpacing: 30,\n        verticalPadding: 30\n      }),\n      polygonsGroupConfig: {\n        maxCountPerLine: 12,\n        orientation: PolygonsGroupOrientation.HORIZONTAL,\n        sideLength: 5\n      }\n    }\n  ];\n\n  const layoutButtons = d3.select('#layouts')\n    .selectAll('button')\n    .data(visualizationConfigs);\n\n  let activeIndex = 0;\n  layoutButtons.on('click', function(d, i) {\n    if (activeIndex === i) {\n      return;\n    }\n    activeIndex = i;\n    layoutButtons.classed('selected', false);\n    d3.select(this).classed('selected', true);\n    budgetVisualization.update(d.layout, d.polygonsGroupConfig);\n  });\n\n  const commandInvoker = new CommandInvoker();\n  commandInvoker.onCommandInvoked.register(() => {\n    console.log(`Budget state: ${budget.summary.state}`);\n    undoButton.property('disabled', !commandInvoker.canUndo);\n    redoButton.property('disabled', !commandInvoker.canRedo);\n  });\n  const undoButton = d3.select('#undo')\n    .on('click', () => commandInvoker.undo());\n  const redoButton = d3.select('#redo')\n    .on('click', () => commandInvoker.redo());\n\n  let activeLevel = 0;\n  const upButton = d3.select('#up')\n    .on('click', () => {\n      if (activeLevel > 0) {\n       budgetVisualization.activeLevel = --activeLevel;\n      }\n      upButton.property('disabled', activeLevel <= 0);\n      downButton.property('disabled', activeLevel >= 2);\n    });\n  const downButton = d3.select('#down')\n    .on('click', () => {\n      if (activeLevel < 2) {\n        budgetVisualization.activeLevel = ++activeLevel;\n      }\n      upButton.property('disabled', activeLevel <= 0);\n      downButton.property('disabled', activeLevel >= 2);\n    });\n\n  const budgetVisualization = new BudgetVisualization(budget, svg, visualizationConfigs[0].layout, commandInvoker);\n  budgetVisualization.initialize();\n});\n","import { BudgetElement } from '../budget-element';\nimport { Layout } from '../layouts/layout';\nimport { RenderingVisitor } from '../visitors/rendering-visitor';\n\nimport { UndoableCommand } from './command';\n\nexport class TransferCommand implements UndoableCommand {\n  private readonly _amount: number;\n  private readonly _source: BudgetElement;\n  private readonly _destination: BudgetElement;\n  private readonly _renderingVisitor: RenderingVisitor;\n  private readonly _layout: Layout;\n  private _isFirstTime = true;\n\n  constructor(source: BudgetElement, destination: BudgetElement, renderingVisitor: RenderingVisitor, layout: Layout) {\n    if (source.type !== destination.type) {\n      throw new Error('Invalid transfer. The transfer must be done between same type elements.');\n    }\n    this._amount = source.selectedAmount;\n    this._source = source;\n    this._destination = destination;\n    this._renderingVisitor = renderingVisitor;\n    this._layout = layout;\n  }\n\n  execute() {\n    this._source.selectedAmount = 0;\n    this._source.amount -= this._amount;\n    this._destination.amount += this._amount;\n    this.update();\n  }\n\n  undo() {\n    this._source.amount += this._amount;\n    this._destination.amount -= this._amount;\n    this.update();\n  }\n\n  private update() {\n    this._destination.selectedAmount = 0;\n    this._renderingVisitor.transitionDuration = 0;\n    this._source.accept(this._renderingVisitor);\n    this._destination.accept(this._renderingVisitor);\n    this._renderingVisitor.resetTransitionDuration();\n\n    if (this._isFirstTime) {\n      this._destination.selectedAmount = this._amount;\n    }\n    const root1 = this._source.root;\n    const root2 = this._destination.root;\n    if (root1 !== root2 && root1 !== this._source) {\n      root1.accept(this._renderingVisitor);\n    }\n    if (this._isFirstTime || root2 !== this._destination) {\n      root2.accept(this._renderingVisitor);\n    }\n    this._layout.render();\n    this._isFirstTime = false;\n  }\n}\n","class Formatter {\n  static formatAmount(amount: number): string {\n    let result = amount / Math.pow(10, 6);\n    if (Math.abs(result) >= 1) {\n      return `${result.toFixed(2).replace('.', ',')} G$`;\n    }\n    result = amount / Math.pow(10, 3);\n    return `${result.toFixed(0).replace('.', ',')} M$`;\n  }\n\n  /**\n   * Formats the specified name to retrieve the ID associated.\n   *\n   * @param {string} name             The name to transform.\n   * @param {string} spaceCharacter   The space character to use. By default, the character is dash (-).\n   * @returns {string}                The ID associated with the name specified.\n   */\n  static formatId(name: string, spaceCharacter = '-'): string {\n    return name.trim().toLowerCase().replace(/[^a-zA-Z ]/g, '').replace(/\\s/g, spaceCharacter);\n  }\n}\n","/**\n * Provides some useful functions for the random.\n *\n * All the following code comes from MDN.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n */\nexport class Random {\n  /**\n   * Returns a random number between 0 (inclusive) and 1 (exclusive).\n   *\n   * @returns {number}    The generated number.\n   */\n  public static getRandom(): number {\n    return Math.random();\n  }\n\n  /**\n   * Returns a random number between min (inclusive) and max (exclusive).\n   *\n   * @param min           The minimum bound.\n   * @param max           The maximum bound.\n   * @returns {number}    The generated number.\n   */\n  public static getRandomArbitrary(min: number, max: number): number {\n    return Math.random() * (max - min) + min;\n  }\n\n  /**\n   * Returns a random integer between min (included) and max (excluded).\n   *\n   * @param min           The minimum bound.\n   * @param max           The maximum bound.\n   * @returns {number}    The generated number.\n   */\n  public static getRandomInt(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  /**\n   * Returns a random integer between min (included) and max (included).\n   *\n   * @param min           The minimum bound.\n   * @param max           The maximum bound.\n   * @returns {number}    The generated number.\n   */\n  public static getRandomIntInclusive(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","class SvgUtils {\n  static getRootBoundingBox(element: any, rootId?: string) {\n    const transform = {\n      x: 0,\n      y: 0\n    };\n    let current = element;\n    while ((rootId && current.id !== rootId) || (!rootId && current.nodeName !== 'svg')) {\n      if (current.transform.baseVal.length > 0) {\n        const matrix = current.transform.baseVal[0].matrix;\n        transform.x += matrix.e;\n        transform.y += matrix.f;\n      }\n      current = current.parentNode;\n    }\n    const bBox = element.getBBox();\n    return {\n      height: bBox.height,\n      width: bBox.width,\n      x: transform.x + bBox.x,\n      y: transform.y + bBox.y\n    };\n  }\n}\n","import { BoundingBox } from './bounding-box';\nimport { Point } from './point';\n\n/**\n * Defines the base methods of a polygon.\n */\nexport interface Polygon {\n  /**\n   * The bounding box associated with the polygon.\n   */\n  readonly boundingBox: BoundingBox;\n\n  /**\n   * The unique ID of the polygon.\n   */\n  readonly id: number;\n\n  /**\n   * Indicates if the polygon is selected.\n   */\n  isSelected: boolean;\n\n  /**\n   * Indicates if the polygon is temporary.\n   */\n  isTemporary: boolean;\n\n  /**\n   * The points associated with the polygon in clockwise order.\n   */\n  readonly points: Point[];\n\n  /**\n   * The top-left position of the polygon.\n   */\n  position: Point;\n}\n","export interface Translation {\n  x: number;\n  y: number;\n}\n","import { BudgetElementGroup } from '../budget-element-group';\nimport { SimpleBudgetElement } from '../simple-budget-element';\n\nexport interface BudgetElementVisitor {\n  visitBudgetElementGroup(group: BudgetElementGroup);\n  visitSimpleBudgetElement(element: SimpleBudgetElement);\n}\n",""],"sourceRoot":"../src"}