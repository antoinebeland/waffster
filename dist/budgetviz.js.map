{"version":3,"file":"budgetviz.js","sources":["../src/geometry/polygons-group-configs.ts","../src/config.ts","../src/budget/budget-config.ts","../src/utils/formatter.ts","../src/budget/budget-element.ts","../src/geometry/bounding-box.ts","../src/geometry/abstract-polygons-group.ts","../src/geometry/polygons-super-group.ts","../src/budget/budget-element-group.ts","../src/geometry/square.ts","../src/geometry/squares-group.ts","../src/budget/simple-budget-element.ts","../src/budget/budget.ts","../node_modules/d3-tip/dist/index.js","../src/budget/commands/add-command.ts","../src/utils/event.ts","../src/budget/commands/command.ts","../src/budget/commands/command-invoker.ts","../src/budget/commands/delete-command.ts","../src/budget/visitors/rendering-visitor.ts","../src/budget/budget-visualization.ts","../node_modules/d3-simple-gauge/dist/d3-simple-gauge.js","../src/budget/layouts/layout.ts","../src/budget/layouts/layout-config.ts","../src/budget/layouts/bars-layout.ts","../src/budget/layouts/grid-layout.ts","../src/budget/layouts/horizontal-bars-layout.ts"],"sourcesContent":["/**\n * Defines the possible orientation of a polygons group.\n */\nexport enum PolygonsGroupOrientation {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical'\n}\n\n/**\n * Defines the base of a polygons group configuration.\n */\nexport interface PolygonsGroupConfig {\n  /**\n   * The maximum polygons count per line.\n   */\n  maxCountPerLine: number;\n\n  /**\n   * The orientation of the group. By default, the orientation is HORIZONTAL.\n   */\n  orientation?: PolygonsGroupOrientation;\n\n  /**\n   * The length of a polygon side.\n   */\n  sideLength: number;\n\n  /**\n   * The starting position of the group. By default, the starting position is 0.\n   */\n  startingPosition?: number;\n}\n\n/**\n * Checks if the specified configuration has all the base properties.\n *\n * @param config        The configuration to validate.\n * @return {boolean}    TRUE of the configuration has all the base properties. FALSE otherwise.\n */\nexport function isPolygonsGroupConfig(config: any): boolean {\n  return config !== undefined &&\n    config.maxCountPerLine !== undefined && !isNaN(config.maxCountPerLine) && config.maxCountPerLine > 0 &&\n    (config.orientation === undefined || (<any>Object).values(PolygonsGroupOrientation).includes(config.orientation)) &&\n    config.sideLength !== undefined && !isNaN(config.sideLength) && config.sideLength > 0 &&\n    (config.startingPosition === undefined ||\n      config.startingPosition >= 0 && config.startingPosition < config.maxCountPerLine);\n}\n","import { PolygonsGroupConfig, PolygonsGroupOrientation } from './geometry/polygons-group-configs';\n\n/**\n * Defines the configuration values of the application.\n */\nexport class Config {\n  /**\n   * The average character size.\n   */\n  static readonly AVERAGE_CHAR_SIZE = 7.5;\n\n  /**\n   * The orientation og the budget elements.\n   */\n  static readonly BUDGET_ELEMENTS_ORIENTATION = PolygonsGroupOrientation.HORIZONTAL;\n\n  /**\n   * The spacing to use for the sub elements of the budget when these elements are active.\n   */\n  static readonly BUDGET_SUB_ELEMENTS_SPACING = 3;\n\n  /**\n   * The configuration of the gauge.\n   */\n  static readonly GAUGE_CONFIG = {\n    barWidth: 15,\n    height: 60,\n    interval: [-26000000, 26000000],\n    needleRadius: 6,\n    width: 120,\n  };\n\n  /**\n   * Indicates if the groups of an element must used different colors.\n   */\n  static readonly IS_USING_DISTINCT_COLORS = false;\n\n  /**\n   * The delay before the active level is changed when an element is hovered.\n   */\n  static readonly LEVEL_CHANGE_DELAY = 1000;\n\n  /**\n   * The minimum amount to show.\n   */\n  static readonly MIN_AMOUNT = 50000;\n\n  /**\n   * The maximum polygons count per line for a group.\n   */\n  static readonly MAX_COUNT_PER_LINE = 20;\n\n  /**\n   * The side length of a square.\n   */\n  static readonly SIDE_LENGTH = 6;\n\n  /**\n   * The transition duration in ms.\n   */\n  static readonly TRANSITION_DURATION = 350;\n\n  /**\n   * The default polygons group configuration to use.\n   */\n  static readonly DEFAULT_POLYGONS_GROUP_CONFIG: PolygonsGroupConfig = {\n    maxCountPerLine: Config.MAX_COUNT_PER_LINE,\n    orientation: Config.BUDGET_ELEMENTS_ORIENTATION,\n    sideLength: Config.SIDE_LENGTH\n  };\n}\n","import { BudgetElement } from './budget-element';\n\n/**\n * Defines a budget element configuration\n */\ninterface BudgetElementConfig {\n  amount?: number;\n  children?: BudgetElement[];\n  name: string;\n}\n\n/**\n * Defines a budget configuration.\n */\nexport interface BudgetConfig {\n  incomes: BudgetElementConfig[];\n  spendings: BudgetElementConfig[];\n  year: number;\n}\n\n/**\n * Validates if the element specified is a budget element.\n *\n * @param budgetElement     The element to validate.\n * @returns {boolean}       TRUE if the element specified is a budget element. FALSE otherwise.\n */\nfunction isBudgetElement(budgetElement: any): budgetElement is BudgetElement {\n  let isValid = false;\n  if (budgetElement.children && budgetElement.children.length > 0) {\n    isValid = budgetElement.children.every(c => isBudgetElement(c));\n  } else if (budgetElement.amount && !isNaN(budgetElement.amount)){\n    isValid = true;\n  }\n  return isValid && budgetElement.name;\n}\n\n/**\n * Validates if the element specified is a valid budget configuration.\n *\n * @param budgetConfig      The configuration to validate.\n * @returns {boolean}       TRUE if the configuration specified is valid. FALSE otherwise.\n */\nexport function isBudgetConfig(budgetConfig: any): budgetConfig is BudgetConfig {\n  return !isNaN(budgetConfig.year) && budgetConfig.incomes.length > 0 &&\n    budgetConfig.incomes.every(s => isBudgetElement(s)) &&\n    budgetConfig.spendings.length > 0 &&\n    budgetConfig.spendings.every(s => isBudgetElement(s));\n}\n","export class Formatter {\n  static formatAmount(amount: number): string {\n    let result = amount / Math.pow(10, 6);\n    if (Math.abs(result) >= 1) {\n      return `${result.toFixed(2).replace('.', ',')} G$`;\n    }\n    result = amount / Math.pow(10, 3);\n    return `${result.toFixed(0).replace('.', ',')} M$`;\n  }\n\n  /**\n   * Formats the specified name to retrieve the ID associated.\n   *\n   * @param {string} name             The name to transform.\n   * @param {string} spaceCharacter   The space character to use. By default, the character is dash (-).\n   * @returns {string}                The ID associated with the name specified.\n   */\n  static formatId(name: string, spaceCharacter = '-'): string {\n    return name.trim().toLowerCase().replace(/[^a-zA-Z ]/g, '').replace(/\\s/g, spaceCharacter);\n  }\n}\n","import { Config } from '../config';\nimport { AbstractPolygonsGroup } from '../geometry/abstract-polygons-group';\nimport { Formatter } from '../utils/formatter';\n\nimport { BudgetElementVisitor } from './visitors/budget-element-visitor';\n\n/**\n * Defines the possible types for a budget element.\n */\nexport enum BudgetElementType {\n  DEFICIT = 'deficit',\n  INCOME = 'income',\n  SPENDING = 'spending'\n}\n\n /**\n * Defines an abstract budget element.\n */\nexport abstract class BudgetElement {\n  protected _activeLevel = 0;\n  protected _level = 0;\n\n  readonly id: string;\n  readonly name: string;\n  readonly description: string;\n  readonly type: BudgetElementType;\n  parent: BudgetElement;\n\n  /**\n   * Initializes a new instance of the BudgetElement class.\n   *\n   * @param name          The name of the element.\n   * @param description   The element description.\n   * @param [type]        The element type. By default, the element is a spending.\n   */\n  protected constructor(name: string, description = '', type: BudgetElementType = BudgetElementType.SPENDING) {\n    this.id = Formatter.formatId(name);\n    this.name = name;\n    this.description = description;\n    this.type = type;\n  }\n\n  /**\n   * Gets the active level.\n   */\n  abstract get activeLevel(): number;\n\n  /**\n   * Sets the active level of the element.\n   *\n   * @param level       The level to set as active.\n   */\n  abstract set activeLevel(level: number);\n\n  abstract get hasFocus(): boolean;\n\n  abstract set hasFocus(hasFocus: boolean);\n\n  /**\n   * Gets the level of the element.\n   *\n   * @return {number}   The level of the element.\n   */\n  abstract get level(): number;\n\n  /**\n   * Sets the level of the element.\n   *\n   * @param level       The level to set.\n   */\n  abstract set level(level: number);\n\n  /**\n   * Gets the element associated with the element.\n   *\n   * @returns {any}     The element associated.\n   */\n  abstract get svgElement(): any; // TODO: Check if the svg element is at the right place...\n\n  /**\n   * Sets the element associated with the element.\n   *\n   * @param element     The element to set.\n   */\n  abstract set svgElement(element: any);\n\n  /**\n   * Gets the polygons group associated with the element.\n   *\n   * @returns {AbstractPolygonsGroup}   The polygons group associated with the element.\n   */\n  abstract get polygonsGroup(): AbstractPolygonsGroup;\n\n  /**\n   * Gets the amount of the element.\n   */\n  get amount(): number {\n    return this.polygonsGroup.count * Config.MIN_AMOUNT;\n  }\n\n  /**\n   * Sets the amount of the element.\n   *\n   * @param amount        The amount to set.\n   */\n  set amount(amount: number) {\n    if (amount < 0) {\n      throw new TypeError('Invalid amount specified.');\n    }\n    this.polygonsGroup.count = Math.ceil(amount / Config.MIN_AMOUNT);\n  }\n\n   /**\n   * Indicates if the current element is active.\n   *\n   * @return {boolean}  TRUE if the current element is active. FALSE otherwise.\n   */\n  get isActive(): boolean {\n    return this._level === this.activeLevel;\n  }\n\n  get root(): BudgetElement {\n    let element: BudgetElement = this;\n    while (element.parent !== undefined) {\n      element = element.parent;\n    }\n    return element;\n  }\n\n  get selectedAmount(): number {\n    return this.polygonsGroup.selectionCount * Config.MIN_AMOUNT;\n  }\n\n  set selectedAmount(selectedAmount: number) {\n    if (selectedAmount < 0) {\n      selectedAmount = 0;\n    }\n    if (this.selectedAmount === selectedAmount) {\n      return;\n    }\n    selectedAmount = Math.min(selectedAmount, this.amount);\n    this.polygonsGroup.selectionCount = Math.ceil(selectedAmount / Config.MIN_AMOUNT);\n  }\n\n  get temporaryAmount(): number {\n    return this.polygonsGroup.temporaryCount * Config.MIN_AMOUNT;\n  }\n\n  set temporaryAmount(temporaryAmount: number) {\n    this.polygonsGroup.temporaryCount = Math.ceil(temporaryAmount / Config.MIN_AMOUNT);\n  }\n\n  abstract accept(visitor: BudgetElementVisitor);\n}\n","import { Point } from './point';\n\n/**\n * Defines a bounding box.\n */\nexport class BoundingBox {\n  position: Point;\n  width: number;\n  height: number;\n\n  /**\n   * Initializes a new instance of the BoundingBox class.\n   *\n   * @param position    The top-left position of the bounding box.\n   * @param width       The width of the bounding box.\n   * @param height      The height of the bounding box.\n   */\n  constructor(position: Point = { x: 0, y: 0 }, width = 0, height = 0) {\n    if (width < 0) {\n      throw new RangeError('Invalid width specified.');\n    }\n    if (height < 0) {\n      throw new RangeError('Invalid height specified.');\n    }\n    this.position = position;\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Gets the X position of the bounding box.\n   *\n   * @return {number}   The X position.\n   */\n  get x(): number {\n    return this.position.x;\n  }\n\n  /**\n   * Gets the Y position of the bounding box.\n   *\n   * @return {number}   The Y position.\n   */\n  get y(): number {\n    return this.position.y;\n  }\n\n  /**\n   * Checks if the current point is into the bounding box.\n   *\n   * @param point       The point to check.\n   * @return {boolean}  TRUE if the specified point is into the bounding box. FALSE otherwise.\n   */\n  isInto(point: Point): boolean {\n    return this.position.x <= point.x && this.position.x + this.width >= point.x &&\n      this.position.y <= point.y && this.position.y + this.height >= point.y;\n  }\n\n  /**\n   * Converts the bounding box to a string representation.\n   *\n   * @return {string}   The string associated with the properties of the bounding box.\n   */\n  toString(): string {\n    return `x: ${this.position.x} y: ${this.position.y} width: ${this.width} height: ${this.height}`;\n  }\n}\n","import { BoundingBox } from './bounding-box';\nimport { Point } from './point';\nimport { Polygon } from './polygon';\nimport { isPolygonsGroupConfig, PolygonsGroupConfig, PolygonsGroupOrientation } from './polygons-group-configs';\nimport { Translation } from './translation';\n\n/**\n * Defines the base of a polygons group.\n */\nexport abstract class AbstractPolygonsGroup {\n  private readonly _translation: Translation;\n  private _boundary = [];\n  private _selectionCount = 0;\n\n  // TODO: Put variable private and use public accessors.\n  protected _boundingBox: BoundingBox;\n  protected _maxCountPerLine: number;\n  protected _orientation: PolygonsGroupOrientation;\n  protected _sideLength: number;\n  protected _startingPosition;\n\n  protected constructor(config: PolygonsGroupConfig) {\n    this.config = config;\n    this._boundary = [];\n    this._boundingBox = new BoundingBox();\n    this._translation = { x: 0, y: 0 };\n  }\n\n  /**\n   * Gets the polygons count of the group.\n   *\n   * @returns {number}              The polygons count into the group.\n   */\n  abstract get count(): number;\n\n  /**\n   * Sets the polygons count into the group.\n   *\n   * @param {number} count          The polygons count to set.\n   */\n  abstract set count(count: number);\n\n  /**\n   * Gets the polygons of the group.\n   *\n   * @returns {Polygon[]}     The polygons of the group.\n   */\n  abstract get polygons(): Polygon[];\n\n  abstract get temporaryCount(): number;\n\n  abstract set temporaryCount(count: number);\n\n  /**\n   * Gets the boundary of the polygons group.\n   */\n  get boundary(): Point[] {\n    return this._boundary;\n  }\n\n  /**\n   * Gets the bounding box associated with the group.\n   *\n   * @returns {BoundingBox}                 The bounding box of the group.\n   */\n  get boundingBox(): BoundingBox {\n    return this._boundingBox;\n  }\n\n  /**\n   * Gets the configuration of the group.\n   *\n   * @returns {PolygonsGroupConfig}         The configuration of the group.\n   */\n  get config(): PolygonsGroupConfig {\n    return this.getBaseConfig();\n  }\n\n  /**\n   * Sets the configuration of the group.\n   *\n   * @param {PolygonsGroupConfig} config    The configuration to set.\n   */\n  set config(config: PolygonsGroupConfig) {\n    this.setBaseConfig(config);\n  }\n\n  get selectionCount(): number {\n    return this._selectionCount;\n  }\n\n  set selectionCount(count: number) {\n    if (count < 0 || count > this.count) {\n      throw new TypeError('The specified count is invalid');\n    }\n    if (this._selectionCount === count) {\n      return;\n    }\n    this._selectionCount = count;\n    const polygons = this.polygons;\n    for (let max = this.polygons.length - 1, i = max; i >= 0; --i) {\n      polygons[i].isSelected = max - i < count;\n    }\n  }\n\n  /**\n   * Gets the translation associated with the group.\n   *\n   * @returns {Translation}         The translation of the group.\n   */\n  get translation(): Translation {\n    return this._translation;\n  }\n\n  /**\n   * Reshapes the group based on the starting position.\n   *\n   * @param [startingPosition]    The starting position to use to reshape the group.\n   *                              By default, the starting position is 0.\n   */\n  abstract reshape(startingPosition?);\n\n  /**\n   * Translates the group of the offset specified.\n   *\n   * @param {number} offset       The offset to use to do translation.\n   */\n  translate(offset: number) {\n    if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n      this._translation.x = 0;\n      this._translation.y = offset;\n    } else {\n      this._translation.x = offset;\n      this._translation.y = 0;\n    }\n  }\n\n  protected getBaseConfig(): PolygonsGroupConfig {\n    return {\n      maxCountPerLine: this._maxCountPerLine,\n      orientation: this._orientation,\n      sideLength: this._sideLength,\n      startingPosition: this._startingPosition\n    };\n  }\n\n  protected setBaseConfig(config: PolygonsGroupConfig) {\n    if (!isPolygonsGroupConfig(config)) {\n      throw new TypeError('Invalid configuration specified.');\n    }\n    this._maxCountPerLine = config.maxCountPerLine;\n    this._orientation = config.orientation || PolygonsGroupOrientation.HORIZONTAL;\n    this._sideLength = config.sideLength;\n    this._startingPosition = config.startingPosition || 0;\n  }\n\n  /**\n   * Computes the boundary of a polygons group.\n   */\n  protected updateBoundary() {\n    /* Boundary model\n                 (1) *----->----* (2)\n                     |          |\n      (7) *----->----* (8)      |\n          |                     |\n          |             (4) *---* (3)\n          |                 |\n      (6) *--------<--------* (5)\n     */\n    const boundingBox = this.getBoundingBox({ x: 0, y: 0 }, false);\n    const count = this.count + this._startingPosition || 1;\n    const padding = 0;\n    const hasMoreThanSingleLine = Math.ceil(count / this._maxCountPerLine) > 1;\n    this._boundary = [];\n\n    if (hasMoreThanSingleLine) {\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n        // Point (1)\n        this._boundary.push({\n          x: boundingBox.x + this._startingPosition * this._sideLength - padding,\n          y: boundingBox.y - padding\n        });\n      } else {\n        // Point (1)\n        this._boundary.push({\n          x: boundingBox.x - padding,\n          y: boundingBox.y + this._startingPosition * this._sideLength - padding\n        });\n      }\n    } else {\n      // Point (1)\n      this._boundary.push({\n        x: boundingBox.x - padding,\n        y: boundingBox.y - padding\n      });\n    }\n\n    // Point (2)\n    this._boundary.push({\n      x: boundingBox.x + boundingBox.width + padding,\n      y: boundingBox.y - padding\n    });\n\n    if (count % this._maxCountPerLine !== 0 && hasMoreThanSingleLine) {\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n        // Point (3)\n        this._boundary.push({\n          x: boundingBox.x + boundingBox.width + padding,\n          y: boundingBox.y + boundingBox.height - this._sideLength + padding\n        });\n        const width = (count % this._maxCountPerLine) * this._sideLength;\n\n        // Point (4)\n        this._boundary.push({\n          x: boundingBox.x + width + padding,\n          y: boundingBox.y + boundingBox.height - this._sideLength + padding\n        });\n        // Point (5)\n        this._boundary.push({\n          x: boundingBox.x + width + padding,\n          y: boundingBox.y + boundingBox.height + padding\n        });\n      } else {\n        const height = (count % this._maxCountPerLine) * this._sideLength;\n\n        // Point (3)\n        this._boundary.push({\n          x: boundingBox.x + boundingBox.width + padding,\n          y: boundingBox.y + height + padding\n        });\n        // Point (4)\n        this._boundary.push({\n          x: boundingBox.x + boundingBox.width - this._sideLength + padding,\n          y: boundingBox.y + height + padding\n        });\n        // Point (5)\n        this._boundary.push({\n          x: boundingBox.x + boundingBox.width - this._sideLength + padding,\n          y: boundingBox.y + boundingBox.height + padding\n        });\n      }\n    } else {\n      // Point (5)\n      this._boundary.push({\n        x: boundingBox.x + boundingBox.width + padding,\n        y: boundingBox.y + boundingBox.height + padding\n      });\n    }\n    // Point (6)\n    this._boundary.push({\n      x: boundingBox.x - padding,\n      y: boundingBox.y + boundingBox.height + padding\n    });\n    if (this._startingPosition !== 0 && hasMoreThanSingleLine) {\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n        // Point (7)\n        this._boundary.push({\n          x: boundingBox.x - padding,\n          y: boundingBox.y + this._sideLength - padding\n        });\n        // Point (8)\n        this._boundary.push({\n          x: boundingBox.x + this._startingPosition * this._sideLength - padding,\n          y: boundingBox.y + this._sideLength - padding\n        });\n      } else {\n        // Point (7)\n        this._boundary.push({\n          x: boundingBox.x + this._sideLength - padding,\n          y: boundingBox.y - padding\n        });\n        // Point (8)\n        this._boundary.push({\n          x: boundingBox.x + this._sideLength - padding,\n          y: boundingBox.y + this._startingPosition * this._sideLength - padding\n        });\n      }\n    }\n  }\n\n  protected getBoundingBox(position: { x, y }, isIncludedTemporaryCount = true) {\n    let count = this.count;\n    if (isIncludedTemporaryCount && this.temporaryCount > 0) {\n      count += this.temporaryCount;\n    }\n    let countPerLine = this._maxCountPerLine;\n    if (this.count > 0 && (this._startingPosition + count) / this._maxCountPerLine <= 1) {\n      countPerLine = count;\n      const offset = this._startingPosition * this._sideLength;\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n        position.x += offset;\n      } else {\n        position.y += offset;\n      }\n    }\n    const lineLength = (count > 0) ? countPerLine * this._sideLength : this._sideLength;\n    const columnLength = (count > 0)\n      ? Math.ceil((this._startingPosition + count) / this._maxCountPerLine) * this._sideLength : this._sideLength;\n\n    if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n      return new BoundingBox(position, lineLength, columnLength);\n    }\n    return new BoundingBox(position, columnLength, lineLength);\n  }\n}\n","import { descending } from 'd3-array';\n\nimport { AbstractPolygonsGroup } from './abstract-polygons-group';\nimport { Polygon } from './polygon';\nimport { PolygonsGroupConfig, PolygonsGroupOrientation } from './polygons-group-configs';\n\nenum PolygonsSuperGroupState {\n  COLLAPSED,\n  EXPANDED\n}\n\nexport class PolygonsSuperGroup extends AbstractPolygonsGroup {\n  private readonly _children: AbstractPolygonsGroup[];\n  private _spacing: number;\n  private _state: PolygonsSuperGroupState;\n\n  /**\n   * Initializes a new instance of the PolygonsSuperGroup class.\n   *\n   * @param {PolygonsGroupConfig} config      The configuration to use.\n   * @param {number} spacing                  The spacing to use between groups.\n   */\n  constructor(config: PolygonsGroupConfig, spacing: number) {\n    super(config);\n    this._children = [];\n    this._spacing = spacing;\n    this._state = PolygonsSuperGroupState.COLLAPSED;\n  }\n\n  /**\n   * Gets the polygons count of the super group.\n   *\n   * @returns {number}              The polygons count into the super group.\n   */\n  get count(): number {\n    return this._children.reduce((total, child) => total + child.count, 0);\n  }\n\n  /**\n   * Sets the polygons count into the super group.\n   *\n   * @param {number} count          The polygons count to set.\n   */\n  set count(count: number) {\n    if (this.count === count) {\n      return;\n    }\n    if (count < 0) {\n      throw new RangeError('Invalid count specified.');\n    }\n    if (this.temporaryCount !== 0) {\n      throw new Error('You should not have temporary element before to set a new count.');\n    }\n    let diffCount = 0;\n    const children = this.children;\n    const currentCount = this.count;\n    children.forEach(c => {\n      let ratio;\n      if (currentCount === 0) {\n        ratio = 1 / children.length;\n      } else {\n        ratio = c.count / currentCount;\n      }\n      const countToApply = Math.round(ratio * count);\n      diffCount += Math.abs(c.count - countToApply);\n      c.count = countToApply;\n    });\n    // Adjust the total count to correct the imprecision of the ratio computations.\n    const delta = count - currentCount;\n    if (children.length > 0 && Math.abs(delta) !== diffCount) {\n      let adjustment = (delta > 0 ? 1 : -1 ) * (Math.abs(delta) - diffCount);\n      children.some(c => {\n        let countToApply = c.count + adjustment;\n        if (countToApply < 0) {\n          countToApply = 0;\n        }\n        if (adjustment < 0) {\n          adjustment += c.count - countToApply;\n        }\n        c.count = countToApply;\n        return adjustment >= 0;\n      });\n    }\n  }\n\n  /**\n   * Gets the children associated with the super group.\n   *\n   * @returns {Polygon[]}     The children of the super group.\n   */\n  get polygons(): Polygon[] {\n    return [].concat.apply([], this.children.map(c => c.polygons));\n  }\n\n  get temporaryCount(): number {\n    return this._children.reduce((total, child) => total + child.temporaryCount, 0);\n  }\n\n  set temporaryCount(count: number) {\n    const temporaryCount = this.temporaryCount;\n    if (this.temporaryCount === count) {\n      return;\n    }\n    const children = this.children;\n    if (children.length <= 0) {\n      return;\n    }\n    count = Math.max(-this.count, count);\n\n    // Create new elements\n    if (count > 0) {\n      if (this.count > 0) {\n        children[children.length - 1].temporaryCount = count; // Put temporary element to last element of the group.\n      } else {\n        children[0].temporaryCount = count; // If there is no element, put it in the first.\n      }\n    } else {\n      if (this.temporaryCount > 0) {\n        children.forEach(c => c.temporaryCount = 0);\n      }\n      let remainingCount = count;\n      for (let i = children.length - 1; i >= 0; --i) {\n        const child = children[i];\n        if (Math.abs(remainingCount) - child.count >= 0) {\n          child.temporaryCount = -child.count;\n          remainingCount += child.count;\n        } else {\n          child.temporaryCount = remainingCount;\n          remainingCount = 0;\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets the children associated with the super group.\n   *\n   * @returns {AbstractPolygonsGroup[]}     The children of the super group.\n   */\n  get children(): AbstractPolygonsGroup[] {\n    return this._children.sort((a, b) => descending(a.count, b.count));\n  }\n\n  /**\n   * Gets the spacing to use between the groups.\n   *\n   * @returns {number}            The spacing used between the groups.\n   */\n  get spacing(): number {\n    return this._spacing;\n  }\n\n  /**\n   * Sets the spacing to use between the groups.\n   *\n   * @param {number} spacing      The spacing to use.\n   */\n  set spacing(spacing: number) {\n    this._spacing = spacing;\n  }\n\n  reshape(startingPosition = 0) {\n    this._startingPosition = startingPosition;\n    this.update();\n  }\n\n  addGroup(group: AbstractPolygonsGroup) {\n    this._children.push(group);\n  }\n\n  removeGroup(group: AbstractPolygonsGroup) {\n    this._children.splice(this._children.findIndex(c => c === group), 1);\n  }\n\n  collapse() {\n    this._state = PolygonsSuperGroupState.COLLAPSED;\n  }\n\n  expand() {\n    this._state = PolygonsSuperGroupState.EXPANDED;\n  }\n\n  update() {\n    const children = this.children;\n    switch (this._state) {\n      case PolygonsSuperGroupState.COLLAPSED: {\n        let count = this._startingPosition;\n        let cumulative = 0;\n        children.forEach((c, i) => {\n          const adjustment = (count % this._maxCountPerLine === 0 || i === 0) ? 0 : this._sideLength;\n          c.translate(cumulative - adjustment);\n          c.reshape(count % this._maxCountPerLine);\n          count += c.count;\n\n          if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n            cumulative += c.boundingBox.height - adjustment;\n          } else {\n            cumulative += c.boundingBox.width - adjustment;\n          }\n        });\n        break;\n      }\n      case PolygonsSuperGroupState.EXPANDED: {\n        this._startingPosition = 0;\n        let cumulative = 0;\n        children.forEach(c => {\n          c.translate(cumulative);\n          c.reshape(0);\n\n          if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n            cumulative += c.boundingBox.height + this._spacing;\n          } else {\n            cumulative += c.boundingBox.width + this._spacing;\n          }\n        });\n      }\n    }\n    this.updateBoundingBox();\n  }\n\n  private updateBoundingBox() {\n    const count = this.count + Math.max(0, this.temporaryCount);\n    const maximums = {\n      height: this._sideLength,\n      width: this._sideLength\n    };\n    if (count > 0) {\n      this._children.forEach(c => {\n        let height = c.translation.y + c.boundingBox.y + c.boundingBox.height;\n        let width = c.translation.x + c.boundingBox.x + c.boundingBox.width;\n        if (maximums.height < height) {\n          maximums.height = height;\n        }\n        if (maximums.width < width) {\n          maximums.width = width;\n        }\n      });\n    }\n    this._boundingBox.height = maximums.height;\n    this._boundingBox.width = maximums.width;\n    this.updateBoundary();\n  }\n}\n","import { descending } from 'd3-array';\n\nimport { Config } from '../config';\nimport { PolygonsGroupConfig } from '../geometry/polygons-group-configs';\nimport { PolygonsSuperGroup } from '../geometry/polygons-super-group';\n\nimport { BudgetElement, BudgetElementType } from './budget-element';\nimport { BudgetElementVisitor } from './visitors/budget-element-visitor';\n\nexport class BudgetElementGroup extends BudgetElement {\n  private readonly _children: BudgetElement[];\n  private readonly _group: PolygonsSuperGroup;\n\n  private _hasFocus: boolean;\n  private _svgElement: any;\n\n  constructor(name = '', description: '', type: BudgetElementType = BudgetElementType.SPENDING,\n              polygonsGroupConfig: PolygonsGroupConfig = Config.DEFAULT_POLYGONS_GROUP_CONFIG) {\n    super(name, description, type);\n    this._children = [];\n    this._group = new PolygonsSuperGroup(polygonsGroupConfig, Config.BUDGET_SUB_ELEMENTS_SPACING);\n    this._hasFocus = false;\n  }\n\n  get activeLevel(): number {\n    return Math.min(this._level + 1, this._activeLevel);\n  }\n\n  set activeLevel(level: number) {\n    if (level < 0) {\n      throw new RangeError('Invalid level specified.');\n    }\n    if (this._activeLevel === level) {\n      return;\n    }\n    this._activeLevel = level;\n    this._hasFocus = false;\n    this._group.selectionCount = 0;\n    this._children.forEach(c => c.activeLevel = level);\n    if (this.level + 1 <= this.activeLevel) {\n      if (this.level > 0 && this.activeLevel > 1) {\n        (this.root.polygonsGroup as PolygonsSuperGroup).spacing = 3 * Config.BUDGET_SUB_ELEMENTS_SPACING;\n      } else {\n        this.polygonsGroup.spacing = Config.BUDGET_SUB_ELEMENTS_SPACING;\n      }\n      this._group.expand();\n    } else {\n      this._group.collapse();\n    }\n  }\n\n  get hasFocus(): boolean {\n    return this._hasFocus;\n  }\n\n  set hasFocus(hasFocus: boolean) {\n    this._hasFocus = hasFocus;\n    this.selectedAmount = 0;\n    this.children.forEach(c => c.hasFocus = hasFocus);\n  }\n\n  get level(): number {\n    return this._level;\n  }\n\n  set level(level: number) {\n    if (level < 0) {\n      throw new RangeError('Invalid level specified.');\n    }\n    this._level = level;\n    this._children.forEach(c => c.level = level + 1);\n  }\n\n  get svgElement(): any {\n    return this._svgElement;\n  }\n\n  set svgElement(svgElement: any) {\n    if (!svgElement) {\n      throw ReferenceError('The specified element is undefined.');\n    }\n    this._svgElement = svgElement;\n    const levelGroup = svgElement.append('g')\n      .attr('class', 'level-group');\n\n    levelGroup.append('rect')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', 0)\n      .attr('height', 0);\n\n    levelGroup.append('line')\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', 0)\n      .attr('y2', 0);\n\n    this.children.forEach(c => {\n      c.svgElement = svgElement.append('g');\n    });\n    this._svgElement.append('polygon')\n      .attr('class', `boundary boundary${this.level}`);\n  }\n\n  get polygonsGroup(): PolygonsSuperGroup {\n    return this._group;\n  }\n\n  get children() {\n    // TODO: If all the elements are equals, sort by id or name?\n    return this._children.sort((a, b) => descending(a.amount, b.amount));\n  }\n\n  accept(visitor: BudgetElementVisitor) {\n    visitor.visitBudgetElementGroup(this);\n  }\n\n  addChild(element: BudgetElement) {\n    element.activeLevel = this._activeLevel;\n    element.level = this._level + 1;\n    element.parent = this;\n\n    this._children.push(element);\n    this._group.addGroup(element.polygonsGroup);\n  }\n\n  removeChild(element: BudgetElement) {\n    this._children.splice(this._children.findIndex(c => c === element), 1);\n\n    element.activeLevel = 0;\n    element.level = 0;\n    element.parent = undefined;\n  }\n}\n","import { range } from 'd3-array';\n\nimport { BoundingBox } from './bounding-box';\nimport { Point } from './point';\nimport { Polygon } from './polygon';\n\n/**\n * Defines a square.\n */\nexport class Square implements Polygon {\n  isSelected: boolean;\n  isTemporary: boolean;\n\n  private static _currentId = 0;\n\n  private readonly _boundingBox: BoundingBox;\n  private readonly _id: number;\n\n  private _sideLength: number;\n  private _points: Point[];\n  private _position: Point;\n\n  /**\n   * Initializes a new instance of the Square class.\n   *\n   * @param position          The top-left position of the square.\n   * @param sideLength        The side length of the square.\n   */\n  constructor(position: Point, sideLength: number) {\n    if (sideLength < 0) {\n      throw new RangeError('The specified side length is invalid.');\n    }\n    this._id = Square._currentId++;\n    this._position = position;\n    this._sideLength = sideLength;\n    this._boundingBox = new BoundingBox(this._position, this._sideLength, this._sideLength);\n    this.update();\n  }\n\n  /**\n   * Gets the bounding box associated with the square.\n   *\n   * @return {BoundingBox}  The bounding box associated with the square.\n   */\n  get boundingBox(): BoundingBox {\n    return this._boundingBox;\n  }\n\n  /**\n   * Gets the unique ID associated with the square.\n   *\n   * @returns {number}     The ID of the square.\n   */\n  get id(): number {\n    return this._id;\n  }\n\n  /**\n   * Gets the points associated with the square in clockwise order.\n   *\n   * @return {Point[]}      The points in clockwise order.\n   */\n  get points(): Point[] {\n    return this._points;\n  }\n\n  /**\n   * Gets the top-left position of the square.\n   *\n   * @return {Point}        The top-left position of the square.\n   */\n  get position(): Point {\n    return this._position;\n  }\n\n  /**\n   * Sets the top-left position of the square.\n   *\n   * @param position        The new top-left position of the square.\n   */\n  set position(position: Point) {\n    this._position = position;\n    this._boundingBox.position.x = position.x;\n    this._boundingBox.position.y = position.y;\n    this.update();\n  }\n\n  /**\n   * Gets the side length of the square.\n   *\n   * @returns {number}            The side length of the square.\n   */\n  get sideLength(): number {\n    return this._sideLength;\n  }\n\n  /**\n   * Sets the side length of the square.\n   *\n   * @param {number} sideLength   The side length to set.\n   */\n  set sideLength(sideLength: number) {\n    if (sideLength < 0) {\n      throw new RangeError('The specified side length is invalid.');\n    }\n    this._sideLength = sideLength;\n    this._boundingBox.height = sideLength;\n    this._boundingBox.width = sideLength;\n    this.update();\n  }\n\n  /**\n   * Updates the square points.\n   */\n  private update() {\n    const center = {\n      x: this._position.x + this._sideLength / 2,\n      y: this._position.y + this._sideLength / 2\n    };\n    this._points = range(4).map(d => {\n      const i = (d < 2) ? d % 2 : (d + 1) % 2;\n      const j = Math.floor(d / 2);\n      return {\n        x: center.x - ((i === 0) ? 1 : -1) * this._sideLength / 2,\n        y: center.y - ((j === 0) ? 1 : -1) * this._sideLength / 2\n      };\n    });\n  }\n}\n","import { range } from 'd3-array';\n\nimport { AbstractPolygonsGroup } from './abstract-polygons-group';\nimport { Point } from './point';\nimport { PolygonsGroupConfig, PolygonsGroupOrientation } from './polygons-group-configs';\nimport { Square } from './square';\n\n/**\n * Defines a group of squares.\n */\nexport class SquaresGroup extends AbstractPolygonsGroup {\n  private readonly _position: Point;\n  private _count: number;\n  private _squares: Square[];\n  private _temporaryCount: number;\n\n  /**\n   * Initializes a new instance of the SquaresGroup class.\n   *\n   * @param count     The squares count of the group.\n   * @param config    The parameters to use to initialize the group.\n   */\n  constructor(count: number, config: PolygonsGroupConfig) {\n    if (count < 0) {\n      throw new RangeError('Invalid count specified.');\n    }\n    super(config);\n    this._count = count;\n    this._position = { x: 0, y: 0 };\n    this._squares = range(this._startingPosition, this._count + this._startingPosition)\n      .map(i => new Square(this.getSquarePosition(i), this._sideLength));\n    this._temporaryCount = 0;\n    this.updateBoundingBox();\n  }\n\n  /**\n   * Gets the configuration of the group.\n   *\n   * @returns {PolygonsGroupConfig}         The configuration of the group.\n   */\n  get config(): PolygonsGroupConfig {\n    return super.getBaseConfig();\n  }\n\n  /**\n   * Sets the configuration of the group.\n   *\n   * @param {PolygonsGroupConfig} config    The configuration to set.\n   */\n  set config(config: PolygonsGroupConfig) {\n    super.setBaseConfig(config);\n    if (this._squares) {\n      this._squares.forEach((square, i) => {\n        square.position = this.getSquarePosition(i + this._startingPosition);\n        square.sideLength = this._sideLength;\n      });\n      this.updateBoundingBox();\n    }\n  }\n\n  /**\n   * Gets the squares count.\n   *\n   * @returns {number}        The squares count.\n   */\n  get count(): number {\n    return this._count;\n  }\n\n  /**\n   * Sets the polygons count.\n   *\n   * @param {number} count    The polygons count to set.\n   */\n  set count(count: number) {\n    if (this._count === count) {\n      return;\n    }\n    if (count < 0) {\n      throw new RangeError(`Invalid count specified (${count}).`);\n    }\n    if (this._temporaryCount !== 0) {\n      throw new Error('You should not have temporary element before to set a new count.');\n    }\n    this.updateCount(this._count, count);\n    this._count = count;\n    this.updateBoundingBox();\n  }\n\n  /**\n   * Gets the polygons associated with the group.\n   *\n   * @returns {Square[]}      A list of squares.\n   */\n  get polygons(): Square[] {\n    return this._squares;\n  }\n\n  get temporaryCount(): number {\n    return this._temporaryCount;\n  }\n\n  set temporaryCount(count: number) {\n    if (this._temporaryCount === count) {\n      return;\n    }\n    count = Math.max(-this._count, count);\n    if (count >= 0) {\n      if (this._temporaryCount <= 0) {\n        this._temporaryCount = 0;\n        this._squares.forEach(s => s.isTemporary = false);\n      }\n      this.updateCount(this._count + this._temporaryCount, this._count + count, true);\n    } else {\n      if (this._temporaryCount > 0) {\n        this.updateCount(this._count + this._temporaryCount, this._count, true);\n      }\n      this._squares.forEach((s, i) => s.isTemporary = i >= this._count + count);\n    }\n    this._temporaryCount = count;\n    this.updateBoundingBox();\n  }\n\n  /**\n   * Reshapes the group based on the starting position specified.\n   *\n   * @param {number} startingPosition   The starting position to use. By default, the starting position is 0.\n   */\n  reshape(startingPosition = 0) {\n    if (this._startingPosition === startingPosition) {\n      return;\n    }\n    if (startingPosition < 0 || startingPosition >= this._maxCountPerLine) {\n      throw new RangeError('Invalid starting position specified.');\n    }\n    const delta = this._startingPosition - startingPosition;\n    const count = Math.min(Math.abs(delta), this._count);\n\n    if (delta > 0) { // Add squares on the first line.\n      const othersSquares = this._squares.slice(0, this._squares.length - count);\n      const squaresToModify = this._squares.slice(this._squares.length - count);\n      squaresToModify.forEach((square, i) => {\n        square.position = this.getSquarePosition(i + startingPosition);\n      });\n      this._squares = squaresToModify.concat(othersSquares);\n    } else { // Remove squares on the first line.\n      const othersSquares = this._squares.slice(count);\n      const squaresToModify = this._squares.slice(0, count);\n      squaresToModify.forEach((square, i) => {\n        square.position = this.getSquarePosition(i + startingPosition + othersSquares.length);\n      });\n      this._squares = othersSquares.concat(squaresToModify);\n    }\n    this._startingPosition = startingPosition;\n    this.updateBoundingBox();\n  }\n\n  /**\n   * Gets a square position.\n   *\n   * @param {number} index    The index of the square.\n   * @returns {Point}         The position of square.\n   */\n  private getSquarePosition(index: number): Point {\n    const currentPoint = {\n      x: this._position.x,\n      y: this._position.y\n    };\n\n    // If this is a change of line...\n    if (Math.floor(index / this._maxCountPerLine) > 0) {\n      const lineOffset = this._sideLength * Math.floor(index / this._maxCountPerLine);\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n        currentPoint.y += lineOffset;\n      } else {\n        currentPoint.x += lineOffset;\n      }\n    }\n    const offset = this._sideLength * (index % this._maxCountPerLine);\n    if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\n      currentPoint.x += offset;\n    } else {\n      currentPoint.y += offset;\n    }\n    return currentPoint;\n  }\n\n  private updateCount(currentCount, newCount, isTemporary = false) {\n    if (currentCount > newCount) { // Remove extra squares.\n      this._squares = this._squares.slice(0, newCount);\n    } else { // Add new squares.\n      this._squares = this._squares.concat(\n        range(currentCount + this._startingPosition,\n          newCount + this._startingPosition)\n          .map(i => {\n            const square = new Square(this.getSquarePosition(i), this._sideLength);\n            square.isTemporary = isTemporary;\n            return square;\n          })\n      );\n    }\n  }\n\n  /**\n   * Updates the bounding box.\n   */\n  private updateBoundingBox() {\n    this._boundingBox = this.getBoundingBox({\n      x: this._position.x,\n      y: this._position.y\n    });\n    this.updateBoundary();\n  }\n}\n","import { Config } from '../config';\nimport { PolygonsGroupConfig } from '../geometry/polygons-group-configs';\nimport { SquaresGroup } from '../geometry/squares-group';\n\nimport { BudgetElement, BudgetElementType } from './budget-element';\nimport { BudgetElementVisitor } from './visitors/budget-element-visitor';\n\nexport class SimpleBudgetElement extends BudgetElement {\n  private readonly _group: SquaresGroup;\n  private _hasFocus: boolean;\n  private _svgElement: any;\n\n  constructor(amount = 0, name = '', description = '', type: BudgetElementType = BudgetElementType.SPENDING,\n              polygonsGroupConfig: PolygonsGroupConfig = Config.DEFAULT_POLYGONS_GROUP_CONFIG) {\n    super(name, description, type);\n    this._group = new SquaresGroup(Math.round(amount / Config.MIN_AMOUNT), polygonsGroupConfig);\n    this._hasFocus = false;\n  }\n\n  get activeLevel(): number {\n    return Math.min(this._level, this._activeLevel);\n  }\n\n  set activeLevel(level: number) {\n    if (level < 0) {\n      throw new RangeError('Invalid level specified.');\n    }\n    if (this._activeLevel === level) {\n      return;\n    }\n    this._activeLevel = level;\n    this._hasFocus = false;\n  }\n\n  get hasFocus(): boolean {\n    return this._hasFocus;\n  }\n\n  set hasFocus(hasFocus: boolean) {\n    this._hasFocus = hasFocus;\n    this._group.selectionCount = 0;\n  }\n\n  get level(): number {\n    return this._level;\n  }\n\n  set level(level: number) {\n    if (level < 0) {\n      level = 0;\n    }\n    this._level = level;\n  }\n\n  get svgElement(): any {\n    return this._svgElement;\n  }\n\n  set svgElement(svgElement: any) {\n    if (!svgElement) {\n      throw ReferenceError('The specified element is undefined.');\n    }\n    this._svgElement = svgElement;\n    this._svgElement.append('g')\n      .attr('class', 'squares');\n    this._svgElement.append('polygon')\n      .attr('class', `boundary boundary${this.level}`);\n  }\n\n  get polygonsGroup(): SquaresGroup {\n    return this._group;\n  }\n\n  accept(visitor: BudgetElementVisitor) {\n    visitor.visitSimpleBudgetElement(this);\n  }\n}\n","import { descending } from 'd3-array';\n\nimport { Config } from '../config';\n\nimport { isBudgetConfig, BudgetConfig } from './budget-config';\nimport { BudgetElement, BudgetElementType } from './budget-element';\nimport { BudgetElementGroup } from './budget-element-group';\nimport { SimpleBudgetElement } from './simple-budget-element';\n\n/**\n * The possible state of a budget.\n */\nexport enum BudgetState {\n  BALANCED = 'balanced',\n  DEFICIT = 'deficit',\n  SURPLUS = 'surplus'\n}\n\n/**\n * The budget summary.\n */\nexport interface BudgetSummary {\n  delta: number;\n  incomesAmount: number;\n  spendingsAmount: number;\n  state: BudgetState;\n}\n\n/**\n * Defines a budget.\n */\nexport class Budget {\n  readonly year: number;\n  readonly incomes: BudgetElement[] = [];\n  readonly spendings: BudgetElement[] = [];\n\n  private static _amountStack = [];\n\n  /**\n   * Initializes a new instance of the Budget class.\n   *\n   * @param {BudgetConfig} budgetConfig   The budget configuration to use to initialize a budget.\n   */\n  constructor(budgetConfig: BudgetConfig) {\n    if (!isBudgetConfig(budgetConfig)) {\n      throw new TypeError('Invalid configuration specified.');\n    }\n\n    function initialize(e, type, elements){\n      if (e.children && e.children.length > 0) {\n        const group = new BudgetElementGroup(e.name, e.description || '', type);\n        e.children.forEach(c => Budget.initializeBudgetElement(c, type, group));\n        elements.push(group);\n      } else if (Budget.isAcceptableAmount(e.amount)) {\n        elements.push(new SimpleBudgetElement(e.amount, e.name, e.description || '', type));\n      }\n      elements.sort((a, b) => descending(a.amount, b.amount));\n    }\n    budgetConfig.incomes.forEach(e => initialize(e, BudgetElementType.INCOME, this.incomes));\n    budgetConfig.spendings.forEach(e => initialize(e, BudgetElementType.SPENDING, this.spendings));\n    this.year = budgetConfig.year;\n  }\n\n  /**\n   * Gets the elements of the budgets sorted in descending order.\n   *\n   * @returns {BudgetElement[]}   An array that contains the incomes and the spendings of the budget.\n   */\n  get elements(): BudgetElement[] {\n   return this.incomes.concat(this.spendings)\n     .sort((a, b) => descending(a.amount, b.amount));\n  }\n\n  /**\n   * Gets the the budget summary (include the temporary amounts).\n   *\n   * @returns {BudgetSummary}       The summary of the budget.\n   */\n  get summary(): BudgetSummary {\n    const incomesAmount = this.incomes.reduce(\n      (total, income) => total + income.amount + income.temporaryAmount, 0);\n    const spendingsAmount = this.spendings.reduce(\n      (total, spending) => total + spending.amount + spending.temporaryAmount, 0);\n    const delta = incomesAmount - spendingsAmount;\n    let state = BudgetState.BALANCED;\n    if (delta < 0) {\n      state = BudgetState.DEFICIT;\n    } else if (delta > 0) {\n       state = BudgetState.SURPLUS;\n    }\n    return {\n      delta: delta,\n      incomesAmount: incomesAmount,\n      spendingsAmount: spendingsAmount,\n      state: state\n    };\n  }\n\n  /**\n   * Initialize a budget element.\n   *\n   * @param data                            The data to use to initialize the element.\n   * @param {BudgetElementType} type        The budget element type to use.\n   * @param {BudgetElementGroup} parent     The parent of the element to initialize.\n   */\n  private static initializeBudgetElement(data: any, type: BudgetElementType, parent: BudgetElementGroup) {\n    if (data.children && data.children.length > 0) {\n      Budget._amountStack.push(0);\n      const group = new BudgetElementGroup(data.name, data.description || '', type);\n      data.children.forEach(c => Budget.initializeBudgetElement(c, type, group));\n\n      const totalAmount = Budget._amountStack[Budget._amountStack.length - 1];\n      if (parent) {\n       if (Budget.isAcceptableAmount(group.amount) && group.children.length > 1) {\n         parent.addChild(group);\n       } else if (Budget.isAcceptableAmount(totalAmount)) {\n         parent.addChild(new SimpleBudgetElement(totalAmount, data.name, data.description || '', type));\n       }\n      }\n      Budget._amountStack.pop();\n      if (Budget._amountStack.length > 0) {\n        Budget._amountStack[Budget._amountStack.length - 1] += totalAmount;\n      }\n    } else if (parent && Budget.isAcceptableAmount(data.amount)) {\n      if (Budget._amountStack.length > 0) {\n        Budget._amountStack[Budget._amountStack.length - 1] += data.amount;\n      }\n      parent.addChild(new SimpleBudgetElement(data.amount, data.name, data.description || '', type));\n    }\n  }\n\n  private static isAcceptableAmount(amount: number) {\n    return Math.round(amount / Config.MIN_AMOUNT) > 0;\n  }\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('d3-collection'), require('d3-selection')) :\n  typeof define === 'function' && define.amd ? define(['d3-collection', 'd3-selection'], factory) :\n  (global.d3 = global.d3 || {}, global.d3.tip = factory(global.d3,global.d3));\n}(this, (function (d3Collection,d3Selection) { 'use strict';\n\n  /**\n   * d3.tip\n   * Copyright (c) 2013-2017 Justin Palmer\n   *\n   * Tooltips for d3.js SVG visualizations\n   */\n  // Public - constructs a new tooltip\n  //\n  // Returns a tip\n  function index() {\n    var direction   = d3TipDirection,\n        offset      = d3TipOffset,\n        html        = d3TipHTML,\n        rootElement = document.body,\n        node        = initNode(),\n        svg         = null,\n        point       = null,\n        target      = null;\n\n    function tip(vis) {\n      svg = getSVGNode(vis);\n      if (!svg) return\n      point = svg.createSVGPoint();\n      rootElement.appendChild(node);\n    }\n\n    // Public - show the tooltip on the screen\n    //\n    // Returns a tip\n    tip.show = function() {\n      var args = Array.prototype.slice.call(arguments);\n      if (args[args.length - 1] instanceof SVGElement) target = args.pop();\n\n      var content = html.apply(this, args),\n          poffset = offset.apply(this, args),\n          dir     = direction.apply(this, args),\n          nodel   = getNodeEl(),\n          i       = directions.length,\n          coords,\n          scrollTop  = document.documentElement.scrollTop ||\n        rootElement.scrollTop,\n          scrollLeft = document.documentElement.scrollLeft ||\n        rootElement.scrollLeft;\n\n      nodel.html(content)\n        .style('opacity', 1).style('pointer-events', 'all');\n\n      while (i--) nodel.classed(directions[i], false);\n      coords = directionCallbacks.get(dir).apply(this);\n      nodel.classed(dir, true)\n        .style('top', (coords.top + poffset[0]) + scrollTop + 'px')\n        .style('left', (coords.left + poffset[1]) + scrollLeft + 'px');\n\n      return tip\n    };\n\n    // Public - hide the tooltip\n    //\n    // Returns a tip\n    tip.hide = function() {\n      var nodel = getNodeEl();\n      nodel.style('opacity', 0).style('pointer-events', 'none');\n      return tip\n    };\n\n    // Public: Proxy attr calls to the d3 tip container.\n    // Sets or gets attribute value.\n    //\n    // n - name of the attribute\n    // v - value of the attribute\n    //\n    // Returns tip or attribute value\n    // eslint-disable-next-line no-unused-vars\n    tip.attr = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().attr(n)\n      }\n\n      var args =  Array.prototype.slice.call(arguments);\n      d3Selection.selection.prototype.attr.apply(getNodeEl(), args);\n      return tip\n    };\n\n    // Public: Proxy style calls to the d3 tip container.\n    // Sets or gets a style value.\n    //\n    // n - name of the property\n    // v - value of the property\n    //\n    // Returns tip or style property value\n    // eslint-disable-next-line no-unused-vars\n    tip.style = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().style(n)\n      }\n\n      var args = Array.prototype.slice.call(arguments);\n      d3Selection.selection.prototype.style.apply(getNodeEl(), args);\n      return tip\n    };\n\n    // Public: Set or get the direction of the tooltip\n    //\n    // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n    //     sw(southwest), ne(northeast) or se(southeast)\n    //\n    // Returns tip or direction\n    tip.direction = function(v) {\n      if (!arguments.length) return direction\n      direction = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: Sets or gets the offset of the tip\n    //\n    // v - Array of [x, y] offset\n    //\n    // Returns offset or\n    tip.offset = function(v) {\n      if (!arguments.length) return offset\n      offset = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: sets or gets the html value of the tooltip\n    //\n    // v - String value of the tip\n    //\n    // Returns html value or tip\n    tip.html = function(v) {\n      if (!arguments.length) return html\n      html = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: sets or gets the root element anchor of the tooltip\n    //\n    // v - root element of the tooltip\n    //\n    // Returns root node of tip\n    tip.rootElement = function(v) {\n      if (!arguments.length) return rootElement\n      rootElement = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: destroys the tooltip and removes it from the DOM\n    //\n    // Returns a tip\n    tip.destroy = function() {\n      if (node) {\n        getNodeEl().remove();\n        node = null;\n      }\n      return tip\n    };\n\n    function d3TipDirection() { return 'n' }\n    function d3TipOffset() { return [0, 0] }\n    function d3TipHTML() { return ' ' }\n\n    var directionCallbacks = d3Collection.map({\n          n:  directionNorth,\n          s:  directionSouth,\n          e:  directionEast,\n          w:  directionWest,\n          nw: directionNorthWest,\n          ne: directionNorthEast,\n          sw: directionSouthWest,\n          se: directionSouthEast\n        }),\n        directions = directionCallbacks.keys();\n\n    function directionNorth() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.n.y - node.offsetHeight,\n        left: bbox.n.x - node.offsetWidth / 2\n      }\n    }\n\n    function directionSouth() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.s.y,\n        left: bbox.s.x - node.offsetWidth / 2\n      }\n    }\n\n    function directionEast() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.e.y - node.offsetHeight / 2,\n        left: bbox.e.x\n      }\n    }\n\n    function directionWest() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.w.y - node.offsetHeight / 2,\n        left: bbox.w.x - node.offsetWidth\n      }\n    }\n\n    function directionNorthWest() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.nw.y - node.offsetHeight,\n        left: bbox.nw.x - node.offsetWidth\n      }\n    }\n\n    function directionNorthEast() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.ne.y - node.offsetHeight,\n        left: bbox.ne.x\n      }\n    }\n\n    function directionSouthWest() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.sw.y,\n        left: bbox.sw.x - node.offsetWidth\n      }\n    }\n\n    function directionSouthEast() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.se.y,\n        left: bbox.se.x\n      }\n    }\n\n    function initNode() {\n      var div = d3Selection.select(document.createElement('div'));\n      div\n        .style('position', 'absolute')\n        .style('top', 0)\n        .style('opacity', 0)\n        .style('pointer-events', 'none')\n        .style('box-sizing', 'border-box');\n\n      return div.node()\n    }\n\n    function getSVGNode(element) {\n      var svgNode = element.node();\n      if (!svgNode) return null\n      if (svgNode.tagName.toLowerCase() === 'svg') return svgNode\n      return svgNode.ownerSVGElement\n    }\n\n    function getNodeEl() {\n      if (node == null) {\n        node = initNode();\n        // re-add node to DOM\n        rootElement.appendChild(node);\n      }\n      return d3Selection.select(node)\n    }\n\n    // Private - gets the screen coordinates of a shape\n    //\n    // Given a shape on the screen, will return an SVGPoint for the directions\n    // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n    // nw(northwest), sw(southwest).\n    //\n    //    +-+-+\n    //    |   |\n    //    +   +\n    //    |   |\n    //    +-+-+\n    //\n    // Returns an Object {n, s, e, w, nw, sw, ne, se}\n    function getScreenBBox(targetShape) {\n      var targetel   = target || targetShape;\n\n      while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n        targetel = targetel.parentNode;\n      }\n\n      var bbox       = {},\n          matrix     = targetel.getScreenCTM(),\n          tbbox      = targetel.getBBox(),\n          width      = tbbox.width,\n          height     = tbbox.height,\n          x          = tbbox.x,\n          y          = tbbox.y;\n\n      point.x = x;\n      point.y = y;\n      bbox.nw = point.matrixTransform(matrix);\n      point.x += width;\n      bbox.ne = point.matrixTransform(matrix);\n      point.y += height;\n      bbox.se = point.matrixTransform(matrix);\n      point.x -= width;\n      bbox.sw = point.matrixTransform(matrix);\n      point.y -= height / 2;\n      bbox.w = point.matrixTransform(matrix);\n      point.x += width;\n      bbox.e = point.matrixTransform(matrix);\n      point.x -= width / 2;\n      point.y -= height / 2;\n      bbox.n = point.matrixTransform(matrix);\n      point.y += height;\n      bbox.s = point.matrixTransform(matrix);\n\n      return bbox\n    }\n\n    // Private - replace D3JS 3.X d3.functor() function\n    function functor(v) {\n      return typeof v === 'function' ? v : function() {\n        return v\n      }\n    }\n\n    return tip\n  }\n\n  return index;\n\n})));\n","import { BudgetElement } from '../budget-element';\nimport { Layout } from '../layouts/layout';\nimport { RenderingVisitor } from '../visitors/rendering-visitor';\n\nimport { UndoableCommand } from './command';\n\nexport class AddCommand implements UndoableCommand {\n  private readonly _element: BudgetElement;\n  private readonly _amount: number;\n  private readonly _rendering: RenderingVisitor;\n  private readonly _layout: Layout;\n  private _isFirstTime = true;\n\n  constructor(element: BudgetElement, rendering: RenderingVisitor, layout: Layout) {\n    this._amount = element.temporaryAmount;\n    this._element = element;\n    this._rendering = rendering;\n    this._layout = layout;\n  }\n\n  execute() {\n    this._element.temporaryAmount = 0;\n    this._element.amount += this._amount;\n    this.update();\n  }\n\n  undo() {\n    this._element.amount -= this._amount;\n    this.update();\n  }\n\n  private update() {\n    this._element.selectedAmount = 0;\n    this._rendering.transitionDuration = 0;\n    this._element.accept(this._rendering);\n    this._rendering.resetTransitionDuration();\n\n    if (this._isFirstTime) {\n      this._element.selectedAmount = this._amount;\n    }\n    const root = this._element.root;\n    if (this._isFirstTime || root !== this._element) {\n      root.accept(this._rendering);\n    }\n    this._layout.render();\n    this._isFirstTime = false;\n  }\n}\n","/**\n * Defines an event.\n *\n * @see http://stackoverflow.com/questions/12881212/does-typescript-support-events-on-classes\n */\nexport class Event<T> {\n  private _handlers: { handler: {(data?: T): void}, context: any }[] = [];\n\n  /**\n   * Registers an handler.\n   *\n   * @param handler       Handler to register.\n   * @param [context]     The context to use with the handler.\n   */\n  register(handler: { (data?: T): void }, context?: any) {\n    if (!context) {\n      context = this;\n    }\n    this._handlers.push({ handler: handler, context: context });\n  }\n\n  /**\n   * Unregisters an handler.\n   *\n   * @param handler       Handler to unregister.\n   * @param [context]     The context associated with the handler to unregister.\n   */\n  unregister(handler: { (data?: T): void }, context?: any) {\n    if (!context) {\n      context = this;\n    }\n    this._handlers = this._handlers.filter(h => h.handler !== handler && h.context !== context);\n  }\n\n  /**\n   * Invokes the event.\n   *\n   * @param [data]        The data to pass to the handlers.\n   */\n   invoke(data?: T) {\n    this._handlers.slice(0).forEach(h => h.handler.call(h.context, data));\n  }\n}\n","export interface Command {\n  execute();\n}\n\nexport interface UndoableCommand extends Command {\n  undo();\n}\n\nexport function isCommand(command: any): command is Command {\n  return command !== undefined && command.execute !== undefined;\n}\n\nexport function isUndoableCommand(command: any): command is UndoableCommand {\n  return isCommand(command) && (command as any).undo !== undefined;\n}\n","import { Event } from '../../utils/event';\n\nimport { isUndoableCommand, Command, UndoableCommand } from './command';\n\nexport class CommandInvoker {\n  onCommandInvoked: Event<void> = new Event<void>();\n\n  private _commands: UndoableCommand[] = [];\n  private _currentIndex = -1;\n\n  get canUndo(): boolean {\n    return this._commands.length >= 1 && this._currentIndex >= 0;\n  }\n\n  get canRedo(): boolean {\n    return this._commands.length >= 1 && this._currentIndex < this._commands.length - 1;\n  }\n\n  undo() {\n    if (this.canUndo) {\n      this._commands[this._currentIndex--].undo();\n      this.onCommandInvoked.invoke();\n    }\n  }\n\n  redo() {\n    if (this.canRedo) {\n      this._commands[++this._currentIndex].execute();\n      this.onCommandInvoked.invoke();\n    }\n  }\n\n  invoke(command: Command, isSavingCommand = true) {\n    if (isSavingCommand && isUndoableCommand(command)) {\n      this._commands = this._commands.slice(0, ++this._currentIndex);\n      this._commands.push(command);\n    }\n    command.execute();\n    this.onCommandInvoked.invoke();\n  }\n}\n","import { BudgetElement } from '../budget-element';\nimport { Layout } from '../layouts/layout';\nimport { RenderingVisitor } from '../visitors/rendering-visitor';\n\nimport { UndoableCommand } from './command';\n\nexport class DeleteCommand implements UndoableCommand {\n  private readonly _amount: number;\n  private readonly _element: BudgetElement;\n  private readonly _rendering: RenderingVisitor;\n  private readonly _layout: Layout;\n\n  constructor(element: BudgetElement, rendering: RenderingVisitor, layout: Layout) {\n    this._amount = Math.abs(element.temporaryAmount);\n    this._element = element;\n    this._rendering = rendering;\n    this._layout = layout;\n  }\n\n  execute() {\n    this._element.temporaryAmount = 0;\n    this._element.amount -= this._amount;\n    this.update();\n  }\n\n  undo() {\n    this._element.amount += this._amount;\n    this.update();\n  }\n\n  private update() {\n    this._rendering.transitionDuration = 0;\n    this._element.accept(this._rendering);\n    this._rendering.resetTransitionDuration();\n\n    const root = this._element.root;\n    if (this._element !== root) {\n      root.accept(this._rendering);\n    }\n    this._layout.render();\n  }\n}\n","import 'd3-transition';\n\nimport { Config } from '../../config';\nimport { BudgetElement } from '../budget-element';\nimport { BudgetElementGroup } from '../budget-element-group';\nimport { SimpleBudgetElement } from '../simple-budget-element';\n\nimport { BudgetElementVisitor } from './budget-element-visitor';\n\nexport class RenderingVisitor implements BudgetElementVisitor {\n  private readonly _defaultTransitionDuration: number;\n  private readonly _levelStack = [];\n  private _transitionDuration: number;\n\n  constructor(defaultTransitionDuration: number) {\n    this._defaultTransitionDuration = this.transitionDuration = defaultTransitionDuration;\n  }\n\n  get transitionDuration(): number {\n    return this._transitionDuration;\n  }\n\n  set transitionDuration(duration: number) {\n    if (duration < 0) {\n      throw new RangeError('The transition duration must be greater or equal to 0.');\n    }\n    this._transitionDuration = duration;\n  }\n\n  resetTransitionDuration() {\n    this._transitionDuration = this._defaultTransitionDuration;\n  }\n\n  visitBudgetElementGroup(group: BudgetElementGroup) {\n    if (this._levelStack.length === 0) {\n      group.polygonsGroup.update();\n    }\n    this._levelStack.push(0);\n    group.svgElement.selectAll('.empty')\n      .remove();\n\n    RenderingVisitor.updateBoundary(group);\n    group.children.forEach((c, i) => {\n      c.accept(this);\n      c.svgElement.transition()\n        .duration(this._transitionDuration)\n        .attr('class', (c.level - 1 === c.activeLevel && Config.IS_USING_DISTINCT_COLORS) ? `group${i}` : '')\n        .attr('transform',\n          `translate(${c.polygonsGroup.translation.x}, ${c.polygonsGroup.translation.y})`);\n    });\n\n    if (group.activeLevel - group.level === 1) {\n      const offset = this._levelStack[this._levelStack.length - 1] >= 1 ? 14 : 7;\n      const halfOffset = offset / 2;\n\n      const levelGroup = group.svgElement.select('.level-group');\n      levelGroup.select('rect')\n        .transition()\n        .duration(this._transitionDuration)\n        .attr('x', -offset)\n        .attr('y', -halfOffset)\n        .attr('height', group.polygonsGroup.boundingBox.height + offset)\n        .attr('width', offset);\n\n      levelGroup.select('line')\n        .transition()\n        .duration(this._transitionDuration)\n        .attr('x1', -offset)\n        .attr('y1', -halfOffset)\n        .attr('x2', -offset)\n        .attr('y2', group.polygonsGroup.boundingBox.height + halfOffset);\n\n      this._levelStack[this._levelStack.length - 1] = 1;\n    } else {\n      const levelGroup = group.svgElement.select('.level-group');\n      levelGroup.select('rect')\n        .transition()\n        .duration(this._transitionDuration)\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 0)\n        .attr('width', 0);\n\n      levelGroup.select('line')\n        .transition()\n        .duration(this._transitionDuration)\n        .attr('x1', 0)\n        .attr('y1', 0)\n        .attr('x2', 0)\n        .attr('y2', 0);\n    }\n    if (group.isActive && group.amount === 0) {\n      RenderingVisitor.createEmptyElement(group);\n    }\n\n    const count = this._levelStack.pop();\n    if (this._levelStack.length >= 1) {\n      this._levelStack[this._levelStack.length - 1] += count;\n    }\n  }\n\n  visitSimpleBudgetElement(element: SimpleBudgetElement) {\n    const polygons = element.svgElement.select('.squares').selectAll('.square')\n      .data(element.polygonsGroup.polygons, d => d.id);\n\n    RenderingVisitor.updateBoundary(element);\n    polygons.enter()\n      .append('polygon')\n      .on('animationend', function() {\n        if (!element.hasFocus) {\n          this.classList.remove('selected');\n          element.selectedAmount = 0;\n        }\n      })\n      .merge(polygons)\n      .attr('class', `square ${element.type}`)\n      .classed('focused', element.hasFocus)\n      .classed('selected', d => d.isSelected)\n      .classed('temporary', d => d.isTemporary)\n      .classed('added', d => d.isTemporary && element.temporaryAmount > 0)\n      .classed('removed', d => d.isTemporary && element.temporaryAmount < 0)\n      .transition()\n      .duration(this._transitionDuration)\n      .attr('points', d => d.points.map(e => `${e.x} ${e.y}`).join(', '));\n\n    polygons.exit()\n      .remove();\n\n    if (element.isActive && element.amount === 0) {\n      RenderingVisitor.createEmptyElement(element);\n    }\n  }\n\n  private static createEmptyElement(element: BudgetElement) {\n    const sideLength = element.polygonsGroup.config.sideLength;\n    element.svgElement.append('rect')\n      .attr('class', 'square empty')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', sideLength)\n      .attr('height', sideLength);\n  }\n\n  private static updateBoundary(element: BudgetElement) {\n    element.svgElement.select(`.boundary${element.level}`)\n      .attr('points', (element.level - 1 <= element.activeLevel)\n        ? element.polygonsGroup.boundary.map(e => `${e.x} ${e.y}`).join(', ')\n        : '');\n  }\n}\n","import * as d3 from 'd3-selection';\nimport d3Tip from 'd3-tip';\n\nimport { Config } from '../config';\nimport { PolygonsGroupConfig } from '../geometry/polygons-group-configs';\nimport { Formatter } from '../utils/formatter';\n\nimport { Budget } from './budget';\nimport { BudgetElement } from './budget-element';\nimport { BudgetElementGroup } from './budget-element-group';\nimport { AddCommand } from './commands/add-command';\nimport { CommandInvoker } from './commands/command-invoker';\nimport { DeleteCommand } from './commands/delete-command';\nimport { Layout } from './layouts/layout';\nimport { SimpleBudgetElement } from './simple-budget-element';\nimport { BudgetElementVisitor } from './visitors/budget-element-visitor';\nimport { RenderingVisitor } from './visitors/rendering-visitor';\n\nexport class BudgetVisualization {\n  private readonly _budget: Budget;\n  private readonly _commandInvoker: CommandInvoker;\n  private readonly _svgElement: any;\n  private readonly _rendering: RenderingVisitor;\n\n  private _layout: Layout;\n  private _isInitialized = false;\n\n  constructor(budget: Budget, svgElement: any, layout: Layout,\n              commandInvoker: CommandInvoker = new CommandInvoker(),\n              rendering: RenderingVisitor = new RenderingVisitor(Config.TRANSITION_DURATION)) {\n    this._budget = budget;\n    this._svgElement = svgElement;\n    this._layout = layout;\n    this._commandInvoker = commandInvoker;\n    this._rendering = rendering;\n  }\n\n  get budget(): Budget {\n    return this._budget;\n  }\n\n  set activeLevel(activeLevel: number) {\n    this._budget.elements.forEach(e => {\n      e.activeLevel = activeLevel;\n      e.accept(this._rendering);\n    });\n    this._layout.render();\n  }\n\n  initialize() {\n    if (this._isInitialized) {\n      throw new Error('The visualization is already initialized.');\n    }\n    const self = this;\n    let hoveredElement: BudgetElement = undefined;\n    let selectedElement: BudgetElement = undefined;\n\n    this._svgElement.attr('class', 'budget-visualization');\n    this._layout.initialize();\n\n    // Tooltip initialization\n    const tip = d3Tip()\n      .html(d => {\n        // TODO: Remove H1\n        let str = `<h1>${d.name} (${Formatter.formatAmount(d.amount + d.temporaryAmount)})</h1>`;\n        str += d.description ? `<p>${d.description}</p>` : '';\n        return str;\n      });\n\n    this._svgElement.call(tip);\n\n    const executeCommand = () => {\n      if (selectedElement !== undefined && selectedElement.temporaryAmount !== 0) {\n        if (selectedElement.temporaryAmount > 0) {\n          this._commandInvoker.invoke(new AddCommand(selectedElement, this._rendering, this._layout));\n        } else {\n          this._commandInvoker.invoke(new DeleteCommand(selectedElement, this._rendering, this._layout));\n        }\n      }\n    };\n\n    // Creation / Deletion\n    d3.select('body')\n      .on('wheel', () => {\n        if (selectedElement) {\n          const delta = d3.event.deltaY;\n          selectedElement.temporaryAmount += delta / 100 * Config.MIN_AMOUNT; // TODO: Put min amount in variable.\n          this._rendering.transitionDuration = 0;\n          selectedElement.root.accept(this._rendering);\n          this._rendering.resetTransitionDuration();\n          this._layout.render();\n        }\n      })\n      .on('keydown', () => {\n        if (selectedElement) {\n          let isValidKey = false;\n          switch (d3.event.key) {\n            case 'ArrowUp':\n              isValidKey = true;\n              selectedElement.temporaryAmount -= Config.MIN_AMOUNT;\n              break;\n            case 'ArrowDown':\n              isValidKey = true;\n              selectedElement.temporaryAmount += Config.MIN_AMOUNT;\n              break;\n          }\n          if (!isValidKey) {\n            return;\n          }\n          this._rendering.transitionDuration = 0;\n          selectedElement.root.accept(this._rendering);\n          this._rendering.resetTransitionDuration();\n          this._layout.render();\n        }\n      })\n      .on('click', () => {\n        if (selectedElement && selectedElement.hasFocus) {\n          selectedElement.hasFocus = false;\n          selectedElement.accept(this._rendering);\n        }\n        executeCommand();\n        selectedElement = undefined;\n      });\n\n    // Events\n    const events = new (class implements BudgetElementVisitor {\n      visitBudgetElementGroup(group: BudgetElementGroup) {\n        this.subscribe(group);\n\n        group.svgElement.select('.level-group')\n          .on('mouseenter', () => {\n            hoveredElement = group;\n            tip.direction('w')\n              .offset([0, -8]) // TODO: Put in constant!\n              .attr('class', 'd3-tip level-tip')\n              .show.call(group.svgElement.node(), group);\n          })\n          .on('mouseleave', () => {\n            hoveredElement = undefined;\n            tip.hide();\n          })\n          .on('click', () => {\n            d3.event.stopPropagation();\n            executeCommand();\n            tip.hide();\n            group.activeLevel = group.level;\n            group.root.accept(self._rendering);\n            self._layout.render();\n          });\n        group.children.forEach(c => c.accept(this));\n      }\n\n      visitSimpleBudgetElement(element: SimpleBudgetElement) {\n        this.subscribe(element);\n      }\n\n      subscribe(element: BudgetElement) {\n        if (!element.svgElement) {\n          throw new TypeError('The SVG element is undefined.');\n        }\n\n        function showTooltip() {\n          if (element.level > 0) {\n            tip.direction('e')\n              .offset([0, 8])\n              .attr('class', 'd3-tip element-tip')\n              .show.call(element.svgElement.node(), element);\n          }\n        }\n\n        element.svgElement.on('click', () => {\n          if (element.isActive) {\n            d3.event.stopPropagation();\n            if (selectedElement && selectedElement !== element && selectedElement.hasFocus) {\n              selectedElement.hasFocus = false;\n              selectedElement.accept(self._rendering);\n              executeCommand();\n            }\n            selectedElement = element;\n            element.hasFocus = true;\n            element.accept(self._rendering);\n          }\n        });\n        element.svgElement.on('mouseenter', () => {\n          if (element.isActive) {\n            hoveredElement = element;\n            hoveredElement.svgElement.classed('hovered', true);\n            showTooltip();\n          }\n        });\n        element.svgElement.on('mouseover', () => {\n          if (element.isActive) {\n            hoveredElement = element;\n            hoveredElement.svgElement.classed('hovered', true);\n            showTooltip();\n          }\n        });\n        element.svgElement.on('mouseleave', () => {\n          if (element.isActive && hoveredElement) {\n            hoveredElement.svgElement.classed('hovered', false);\n            hoveredElement = undefined;\n            tip.hide();\n          }\n        });\n        element.svgElement.on('dblclick', () => {\n          if (element.isActive) {\n            executeCommand();\n            selectedElement = undefined;\n            element.activeLevel += 1;\n            element.root.accept(self._rendering);\n            self._layout.render();\n\n            hoveredElement.svgElement.classed('hovered', false);\n            hoveredElement = undefined;\n            tip.hide();\n          }\n        });\n      }\n    });\n\n    // Events subscription\n    this._budget.elements.forEach(e => {\n      e.accept(events);\n      e.accept(this._rendering);\n    });\n\n    // Layout initialisation\n    this._layout.render();\n    this._isInitialized = true;\n  }\n\n  reset() {\n    // ...\n  }\n\n  update(layout: Layout, polygonsGroupConfig?: PolygonsGroupConfig) {\n    if (!this._isInitialized) {\n      throw new Error('The visualization is not initialized. Please initialize the visualization first.');\n    }\n    if (polygonsGroupConfig) {\n      const polygonsConfigs = new (class implements BudgetElementVisitor {\n        visitBudgetElementGroup(group: BudgetElementGroup) {\n          group.polygonsGroup.config = polygonsGroupConfig;\n          group.children.forEach(c => c.accept(this));\n        }\n\n        visitSimpleBudgetElement(element: SimpleBudgetElement) {\n          element.polygonsGroup.config = polygonsGroupConfig;\n        }\n      });\n      this._budget.elements.forEach(e => {\n        e.accept(polygonsConfigs);\n        e.accept(this._rendering);\n      });\n    }\n    this._layout = layout;\n    this._layout.initialize();\n    this._layout.render();\n  }\n}\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', 'd3-shape', 'd3-ease', 'd3-array', 'd3-scale', 'd3-selection', 'd3-transition'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('d3-shape'), require('d3-ease'), require('d3-array'), require('d3-scale'), require('d3-selection'), require('d3-transition'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.d3, global.d3, global.d3, global.d3, global.d3, global.d3);\n    global.d3SimpleGauge = mod.exports;\n  }\n})(this, function (exports, _d3Shape, _d3Ease, _d3Array, _d3Scale, _d3Selection) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SimpleGauge = undefined;\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var CONSTANTS = {\n    BAR_WIDTH: 40,\n    CHAR_INSET: 10,\n    EASE_TYPE: _d3Ease.easeElastic,\n    NEEDLE_ANIMATION_DELAY: 0,\n    NEEDLE_ANIMATION_DURATION: 3000,\n    NEEDLE_RADIUS: 15,\n    PAD_RAD: 0.05\n  };\n\n  var percToDeg = function percToDeg(perc) {\n    return perc * 360;\n  };\n  var degToRad = function degToRad(deg) {\n    return deg * Math.PI / 180;\n  };\n  var percToRad = function percToRad(perc) {\n    return degToRad(percToDeg(perc));\n  };\n\n  /**\r\n   * Defines the needle used in the gauge.\r\n   */\n\n  var Needle = function () {\n    /**\r\n     * Initializes a new instance of the Needle class.\r\n     *\r\n     * @param config                      The configuration to use to initialize the needle.\r\n     * @param config.animationDelay       The delay in ms before to start the needle animation.\r\n     * @param config.animationDuration    The duration in ms of the needle animation.\r\n     * @param config.color                The color to use for the needle.\r\n     * @param config.easeType             The ease type to use for the needle animation.\r\n     * @param config.el                   The parent element of the needle.\r\n     * @param config.length               The length of the needle.\r\n     * @param config.percent              The initial percentage to use.\r\n     * @param config.radius               The radius of the needle.\r\n     */\n    function Needle(config) {\n      _classCallCheck(this, Needle);\n\n      this._animationDelay = config.animationDelay;\n      this._animationDuration = config.animationDuration;\n      this._color = config.color;\n      this._easeType = config.easeType;\n      this._el = config.el;\n      this._length = config.length;\n      this._percent = config.percent;\n      this._radius = config.radius;\n      this._initialize();\n    }\n\n    /**\r\n     * Updates the needle position based on the percentage specified.\r\n     *\r\n     * @param percent      The percentage to use.\r\n     */\n\n\n    _createClass(Needle, [{\n      key: 'update',\n      value: function update(percent) {\n        var self = this;\n        this._el.transition().delay(this._animationDelay).ease(this._easeType).duration(this._animationDuration).selectAll('.needle').tween('progress', function () {\n          var thisElement = this;\n          var delta = percent - self._percent;\n          var initialPercent = self._percent;\n          return function (progressPercent) {\n            self._percent = initialPercent + progressPercent * delta;\n            return (0, _d3Selection.select)(thisElement).attr('d', self._getPath(self._percent));\n          };\n        });\n      }\n    }, {\n      key: '_initialize',\n      value: function _initialize() {\n        this._el.append('circle').attr('class', 'needle-center').attr('cx', 0).attr('cy', 0).attr('r', this._radius);\n\n        this._el.append('path').attr('class', 'needle').attr('d', this._getPath(this._percent));\n\n        if (this._color) {\n          this._el.select('.needle-center').style('fill', this._color);\n\n          this._el.select('.needle').style('fill', this._color);\n        }\n      }\n    }, {\n      key: '_getPath',\n      value: function _getPath(percent) {\n        var halfPI = Math.PI / 2;\n        var thetaRad = percToRad(percent / 2); // half circle\n\n        var centerX = 0;\n        var centerY = 0;\n\n        var topX = centerX - this._length * Math.cos(thetaRad);\n        var topY = centerY - this._length * Math.sin(thetaRad);\n\n        var leftX = centerX - this._radius * Math.cos(thetaRad - halfPI);\n        var leftY = centerY - this._radius * Math.sin(thetaRad - halfPI);\n\n        var rightX = centerX - this._radius * Math.cos(thetaRad + halfPI);\n        var rightY = centerY - this._radius * Math.sin(thetaRad + halfPI);\n\n        return 'M ' + leftX + ' ' + leftY + ' L ' + topX + ' ' + topY + ' L ' + rightX + ' ' + rightY;\n      }\n    }]);\n\n    return Needle;\n  }();\n\n  var SimpleGauge = exports.SimpleGauge = function () {\n    /**\r\n     * Initializes a new instance of the SimpleGauge class.\r\n     *\r\n     * @param config                        The configuration to use to initialize the gauge.\r\n     * @param [config.animationDelay]       The delay in ms before to start the needle animation. By default, the value\r\n     *                                      is 0.\r\n     * @param [config.animationDuration]    The duration in ms of the needle animation. By default, the value is 3000.\r\n     * @param [config.barWidth]             The bar width of the gauge. By default, the value is 40.\r\n     * @param [config.chartInset]           The char inset to use. By default, the value is 10.\r\n     * @param [config.easeType]             The ease type to use for the needle animation. By default, the value is\r\n     *                                      \"d3.easeElastic\".\r\n     * @param config.el                     The D3 element to use to create the gauge (must be a group or an SVG element).\r\n     * @param config.height                 The height of the gauge.\r\n     * @param [config.interval]             The interval (min and max values) of the gauge. By default, the interval\r\n     *                                      ia [0, 1].\r\n     * @param [config.needleColor]          The needle color.\r\n     * @param [config.needleRadius]         The radius of the needle. By default, the radius is 15.\r\n     * @param [config.percent]              The percentage to use for the needle position. By default, the value is 0.\r\n     * @param config.sectionsCount          The number of sections in the gauge.\r\n     * @param [config.sectionsColors]       The color to use for each section.\r\n     * @param config.width                  The width of the gauge.\r\n     */\n    function SimpleGauge(config) {\n      _classCallCheck(this, SimpleGauge);\n\n      if (!config.el) {\n        throw new Error('The element must be valid.');\n      }\n      if (isNaN(config.height) || config.height <= 0) {\n        throw new RangeError('The height must be a positive number.');\n      }\n      if (isNaN(config.sectionsCount) || config.sectionsCount <= 0) {\n        throw new RangeError('The sections count must be a positive number.');\n      }\n      if (isNaN(config.width) || config.width <= 0) {\n        throw new RangeError('The width must be a positive number.');\n      }\n      if (config.animationDelay !== undefined && (isNaN(config.animationDelay) || config.animationDelay < 0)) {\n        throw new RangeError('The transition delay must be greater or equal to 0.');\n      }\n      if (config.animationDuration !== undefined && (isNaN(config.animationDuration) || config.animationDuration < 0)) {\n        throw new RangeError('The transition duration must be greater or equal to 0.');\n      }\n      if (config.barWidth !== undefined && (isNaN(config.barWidth) || config.barWidth <= 0)) {\n        throw new RangeError('The bar width must be a positive number.');\n      }\n      if (config.chartInset !== undefined && (isNaN(config.chartInset) || config.chartInset < 0)) {\n        throw new RangeError('The chart inset must be greater or equal to 0.');\n      }\n      if (config.needleRadius !== undefined && (isNaN(config.needleRadius) || config.needleRadius < 0)) {\n        throw new RangeError('The needle radius must be greater or equal to 0.');\n      }\n      if (config.sectionsColors !== undefined && config.sectionsColors.length !== config.sectionsCount) {\n        throw new RangeError('The sectionsColors length must match with the sectionsCount.');\n      }\n\n      this._animationDelay = config.animationDelay !== undefined ? config.animationDelay : CONSTANTS.NEEDLE_ANIMATION_DELAY;\n\n      this._animationDuration = config.animationDuration !== undefined ? config.animationDuration : CONSTANTS.NEEDLE_ANIMATION_DURATION;\n\n      this._chartInset = config.chartInset !== undefined ? config.chartInset : CONSTANTS.CHAR_INSET;\n\n      this._barWidth = config.barWidth || CONSTANTS.BAR_WIDTH;\n      this._easeType = config.easeType || CONSTANTS.EASE_TYPE;\n      this._el = config.el;\n      this._height = config.height;\n      this._needleRadius = config.needleRadius !== undefined ? config.needleRadius : CONSTANTS.NEEDLE_RADIUS;\n      this._sectionsCount = config.sectionsCount;\n      this._width = config.width;\n      this._sectionsColors = config.sectionsColors;\n      this._needleColor = config.needleColor;\n\n      this.interval = config.interval || [0, 1];\n      this.percent = config.percent !== undefined ? config.percent : 0;\n\n      this._initialize();\n    }\n\n    /**\r\n     * Gets the interval of the gauge.\r\n     *\r\n     * @returns {Array}   An array of two elements that represents the min and the max values of the gauge.\r\n     */\n\n\n    _createClass(SimpleGauge, [{\n      key: '_initialize',\n\n\n      /**\r\n       * Initializes the simple gauge.\r\n       *\r\n       * @private\r\n       */\n      value: function _initialize() {\n        var _this = this;\n\n        var sectionPercentage = 1 / this._sectionsCount / 2;\n        var padRad = CONSTANTS.PAD_RAD;\n\n        var totalPercent = 0.75; // Start at 270deg\n        var radius = Math.min(this._width, this._height * 2) / 2;\n\n        this._chart = this._el.append('g').attr('transform', 'translate(' + this._width / 2 + ', ' + this._height + ')');\n\n        this._arcs = this._chart.selectAll('.arc').data((0, _d3Array.range)(1, this._sectionsCount + 1)).enter().append('path').attr('class', function (sectionIndex) {\n          return 'arc chart-color' + sectionIndex;\n        }).attr('d', function (sectionIndex) {\n          var arcStartRad = percToRad(totalPercent);\n          var arcEndRad = arcStartRad + percToRad(sectionPercentage);\n          totalPercent += sectionPercentage;\n\n          var startPadRad = sectionIndex === 0 ? 0 : padRad / 2;\n          var endPadRad = sectionIndex === _this._sectionsCount ? 0 : padRad / 2;\n          var arc = (0, _d3Shape.arc)().outerRadius(radius - _this._chartInset).innerRadius(radius - _this._chartInset - _this._barWidth).startAngle(arcStartRad + startPadRad).endAngle(arcEndRad - endPadRad);\n\n          return arc(_this);\n        });\n\n        if (this._sectionsColors) {\n          this._arcs.style('fill', function (sectionIndex) {\n            return _this._sectionsColors[sectionIndex - 1];\n          });\n        }\n\n        this._needle = new Needle({\n          animationDelay: this._animationDelay,\n          animationDuration: this._animationDuration,\n          color: this._needleColor,\n          easeType: this._easeType,\n          el: this._chart,\n          length: this._height * 0.5,\n          percent: this._percent,\n          radius: this._needleRadius\n        });\n        this._update();\n      }\n\n      /**\r\n       * Updates the active arc and the gauge status (min or max) based on the current percent.\r\n       *\r\n       * @private\r\n       */\n\n    }, {\n      key: '_update',\n      value: function _update() {\n        var _this2 = this;\n\n        if (!this._arcs) {\n          return;\n        }\n        this._arcs.classed('active', function (d, i) {\n          return i === Math.floor(_this2._percent * _this2._sectionsCount) || i === _this2._arcs.size() - 1 && _this2._percent === 1;\n        });\n        this._chart.classed('min', this._percent === 0);\n        this._chart.classed('max', this._percent === 1);\n      }\n    }, {\n      key: 'interval',\n      get: function get() {\n        return this._scale.domain();\n      }\n\n      /**\r\n       * Sets the interval of the gauge (min and max values).\r\n       *\r\n       * @param interval\r\n       */\n      ,\n      set: function set(interval) {\n        if (!(interval instanceof Array) || interval.length !== 2 || isNaN(interval[0]) || isNaN(interval[1]) || interval[0] > interval[1]) {\n          throw new Error('The interval specified is invalid.');\n        }\n        this._scale = (0, _d3Scale.scaleLinear)().domain(interval).range([0, 1]).clamp(true);\n      }\n\n      /**\r\n       * Gets the needle percent.\r\n       *\r\n       * @returns {number|*}    The percentage position of the needle.\r\n       */\n\n    }, {\n      key: 'percent',\n      get: function get() {\n        return this._percent;\n      }\n\n      /**\r\n       * Sets the needle percent. The percent must be between 0 and 1.\r\n       *\r\n       * @param percent         The percentage to set.\r\n       */\n      ,\n      set: function set(percent) {\n        if (isNaN(percent) || percent < 0 || percent > 1) {\n          throw new RangeError('The percentage must be between 0 and 1.');\n        }\n        if (this._needle) {\n          this._needle.update(percent);\n        }\n        this._percent = percent;\n        this._update();\n      }\n\n      /**\r\n       * Sets the needle position based on the specified value inside the interval.\r\n       * If the value specified is outside the interval, the value will be\r\n       * clamped to fit inside the domain.\r\n       *\r\n       * @param value           The value to use to set the needle position.\r\n       */\n\n    }, {\n      key: 'value',\n      set: function set(value) {\n        if (isNaN(value)) {\n          throw new Error('The specified value must be a number.');\n        }\n        this.percent = this._scale(value);\n      }\n    }]);\n\n    return SimpleGauge;\n  }();\n});","import { descending } from 'd3-array';\nimport * as d3 from 'd3-selection';\nimport d3SimpleGauge from 'd3-simple-gauge';\n\nimport { Config } from '../../config';\nimport { Formatter } from '../../utils/formatter';\nimport { Budget } from '../budget';\nimport { BudgetElement } from '../budget-element';\n\nexport abstract class Layout {\n  protected readonly _budget: Budget;\n  protected readonly _svgElement: any;\n\n  protected _layout: any;\n  protected _budgetGroup: any;\n  protected _incomeGroups: any;\n  protected _spendingGroups: any;\n  protected _gaugeGroup: any;\n\n  protected _height: number;\n  protected _width: number;\n\n  protected constructor(budget: Budget, svgElement: any) {\n    this._budget = budget;\n    this._svgElement = svgElement;\n\n    // TODO: Bug with Firefox here. Client width and height return 0.\n    const element = this._svgElement.node();\n    this._width = element.clientWidth;\n    this._height = element.clientHeight;\n  }\n\n  initialize() {\n    this._svgElement.attr('viewBox', `0 0 ${this._width} ${this._height}`);\n    this._layout = this._svgElement.select('#layout');\n    if (!this._layout.size()) {\n      this._layout = this._svgElement.append('g')\n        .attr('id', 'layout');\n    }\n    let separator = this._layout.select('.separator');\n    if (separator.size() <= 0) {\n      this._layout.append('line')\n        .attr('class', 'separator');\n    }\n    this._gaugeGroup = this._layout.select('#budget-gauge-group');\n    if (this._gaugeGroup.size() <= 0) {\n      this._gaugeGroup = this._layout.append('g')\n        .attr('id', 'budget-gauge-group')\n        .attr('class', 'budget-gauge-group');\n\n      this._gaugeGroup.append('rect')\n        .attr('width', Config.GAUGE_CONFIG.width)\n        .attr('height', Config.GAUGE_CONFIG.height + 45)\n        .attr('fill', '#fff');\n\n      this._gaugeGroup.append('text')\n        .attr('text-anchor', 'middle')\n        .attr('x', Config.GAUGE_CONFIG.width / 2)\n        .attr('y', 95);\n\n      // Associate the gauge with the group.\n      this._gaugeGroup.datum(new d3SimpleGauge.SimpleGauge({\n        barWidth: Config.GAUGE_CONFIG.barWidth,\n        el: this._gaugeGroup.append('g'),\n        height: Config.GAUGE_CONFIG.height,\n        interval: Config.GAUGE_CONFIG.interval,\n        needleRadius: Config.GAUGE_CONFIG.needleRadius,\n        sectionsCount: 2,\n        width: Config.GAUGE_CONFIG.width\n      }));\n    }\n\n    if (this._layout.select('#budget-group')) {\n      this._budgetGroup = this._layout.append('svg')\n        .attr('id', 'budget-group')\n        .attr('height', this._height - Config.GAUGE_CONFIG.height);\n    }\n    this._budgetGroup.attr('viewBox', `0 0 ${this._width} ${this._height}`);\n\n    function initializeBudgetElement(d) {\n      const g = d3.select(this);\n      const textGroup = g.append('g')\n        .attr('class', 'text-group');\n\n      textGroup.append('text')\n        .attr('class', 'element-amount')\n        .text(Formatter.formatAmount(d.amount));\n\n      textGroup.append('text')\n        .attr('class', 'element-name');\n\n      d.svgElement = g.append('g')\n        .attr('class', 'polygons-group');\n    }\n    const createGroups = (budgetElements: BudgetElement[], id: string) => {\n      let group = this._budgetGroup.select(`#${id}`);\n      if (!group.size()) {\n        group = this._budgetGroup.append('g')\n          .attr('id', id);\n      }\n      const groups = group.selectAll('g')\n        .data(budgetElements, d => d.id);\n\n      const groupsCreated = groups.enter()\n        .append('g')\n        .each(initializeBudgetElement);\n\n      return groups.merge(groupsCreated);\n    };\n\n    this._incomeGroups = createGroups(this._budget.incomes, 'incomes-group');\n    this._spendingGroups = createGroups(this._budget.spendings, 'spendings-group');\n    this.initializeLayout();\n  }\n\n  render() {\n    function updateAmount(d) {\n      d3.select(this)\n        .select('.element-amount')\n        .text(Formatter.formatAmount(d.amount + d.temporaryAmount));\n    }\n    this._incomeGroups = this._incomeGroups.sort((a, b) => descending(a.amount, b.amount))\n      .each(updateAmount);\n    this._spendingGroups = this._spendingGroups.sort((a, b) => descending(a.amount, b.amount))\n      .each(updateAmount);\n\n    const delta = this._budget.summary.delta;\n    this._gaugeGroup.datum().value = delta;\n    this._layout.select('#budget-gauge-group')\n      .select('text')\n      .text(Formatter.formatAmount(delta));\n\n    this.renderLayout();\n  }\n\n  protected abstract initializeLayout();\n  protected abstract renderLayout();\n}\n","export class LayoutConfig {\n  averageCharSize: number;\n  horizontalMinSpacing: number;\n  horizontalPadding: number;\n  polygonLength: number;\n  transitionDuration: number;\n  verticalMinSpacing: number;\n  verticalPadding: number;\n}\n\nexport function isLayoutConfig(config: any): config is LayoutConfig {\n  return !isNaN(config.averageCharSize) && config.averageCharSize > 0 &&\n    !isNaN(config.horizontalMinSpacing) && config.horizontalMinSpacing >= 0 &&\n    !isNaN(config.horizontalPadding) && config.horizontalPadding >= 0 &&\n    !isNaN(config.polygonLength) && config.polygonLength > 0 &&\n    !isNaN(config.transitionDuration) && config.transitionDuration >= 0 &&\n    !isNaN(config.verticalMinSpacing) && config.verticalMinSpacing >= 0 &&\n    !isNaN(config.verticalPadding) && config.verticalPadding >= 0;\n}\n","import * as d3 from 'd3-selection';\nimport 'd3-transition';\n\nimport { Config } from '../../config';\nimport { Budget } from '../budget';\n\nimport { Layout } from './layout';\nimport { isLayoutConfig, LayoutConfig } from './layout-config';\n\nexport class BarsLayout extends Layout {\n  private readonly _config: LayoutConfig;\n\n  constructor(budget: Budget, svgElement: any, config: LayoutConfig) {\n    super(budget, svgElement);\n    if (!isLayoutConfig(config)) {\n      throw new TypeError('Invalid configuration specified.');\n    }\n    this._config = config;\n  }\n\n  protected initializeLayout() {\n    const self = this;\n    let maxLabelHeight = 0;\n\n    function initializeLabel(d) {\n      const g = d3.select(this);\n\n      let label = d.name;\n      const index = label.indexOf(',');\n      if (index !== -1) {\n        label = label.substring(0, index);\n      }\n\n      const labelWords = label.split(' ');\n      let line = '';\n      const lines = [];\n      labelWords.forEach(w => {\n        if (line.length * self._config.averageCharSize < self._config.polygonLength) {\n          line += (line.length === 0) ? w : ` ${w}`;\n        } else {\n          lines.push(line);\n          line = w;\n        }\n      });\n      lines.push(line);\n\n      const textGroup = g.select('.text-group')\n        .attr('transform', '');\n\n      textGroup.select('.amount')\n        .attr('text-anchor', 'middle')\n        .attr('x', self._config.polygonLength / 2)\n        .attr('y', 0);\n\n      const labelLines = textGroup.select('.label')\n        .attr('text-anchor', 'middle')\n        .attr('y', 5)\n        .selectAll('tspan')\n        .data(lines);\n\n      labelLines.exit()\n        .remove();\n\n      const labelLinesCreated = labelLines.enter()\n        .append('tspan');\n\n      labelLines.merge(labelLinesCreated)\n        .attr('x', self._config.polygonLength / 2)\n        .attr('dy', 11)\n        .text(d => d);\n\n      const height = (textGroup.node() as SVGGraphicsElement).getBBox().height;\n      if (maxLabelHeight < height) {\n        maxLabelHeight = height;\n      }\n    }\n\n    function adjustPolygonsGroup() {\n      d3.select(this).select('.polygons-group')\n        .attr('transform', `translate(0, ${maxLabelHeight})`);\n    }\n\n    this._incomeGroups.each(initializeLabel)\n      .each(adjustPolygonsGroup);\n    this._spendingGroups.each(initializeLabel)\n      .each(adjustPolygonsGroup);\n\n    // Compute min size of SVG viewBox.\n    const maxCount = Math.max(this._budget.incomes.length, this._budget.spendings.length);\n    const approxWidth = this._config.horizontalPadding * 2 + maxCount * this._config.polygonLength +\n      (maxCount - 1) * this._config.horizontalMinSpacing;\n\n    const maxElement = this._budget.elements[0];\n    const maxPolygonHeight = Math.ceil(maxElement.polygonsGroup.count / maxElement.polygonsGroup.config.maxCountPerLine)\n      * maxElement.polygonsGroup.config.sideLength;\n    const approxHeight = (this._config.verticalPadding * 2 + maxPolygonHeight + maxLabelHeight) * 2;\n\n    this._width = Math.max(approxWidth, this._width);\n    this._height = Math.max(approxHeight, this._height);\n    this._svgElement.attr('viewBox', `0 0 ${this._width} ${this._height}`);\n\n    const halfHeight = this._height / 2;\n    this._layout.select('.separator')\n      .attr('x1', 0)\n      .attr('y1', halfHeight)\n      .attr('x2', this._width)\n      .attr('y2', halfHeight);\n\n    this._gaugeGroup\n      .attr('transform', `translate(${this._width / 2 - Config.GAUGE_CONFIG.width / 2}, ${this._height - 110})`);\n\n    this._layout.select('#incomes-group')\n      .attr('transform', 'translate(0, 0)');\n\n    this._layout.select('#spendings-group')\n      .attr('transform', `translate(0, ${halfHeight})`);\n  }\n\n  protected renderLayout() {\n    const self = this;\n    let x;\n\n    function applyTransform(d, i) {\n      if (i === 0) {\n        x = self._config.horizontalPadding;\n      } else {\n        x += self._config.polygonLength + self._config.horizontalMinSpacing;\n      }\n      return `translate(${x}, ${self._config.verticalPadding})`;\n    }\n\n    this._incomeGroups.transition()\n      .duration(this._config.transitionDuration)\n      .attr('transform', applyTransform);\n\n    this._spendingGroups.transition()\n      .duration(this._config.transitionDuration)\n      .attr('transform', applyTransform);\n  }\n}\n","import { sum } from 'd3-array';\nimport * as d3 from 'd3-selection';\nimport 'd3-transition';\n\nimport { Config } from '../../config';\nimport { Budget } from '../budget';\n\nimport { Layout } from './layout';\nimport { isLayoutConfig, LayoutConfig } from './layout-config';\n\nexport class GridLayout extends Layout {\n  private readonly _config: LayoutConfig;\n\n  constructor(budget: Budget, svgElement: any, config: LayoutConfig) {\n    super(budget, svgElement);\n    if (!isLayoutConfig(config)) {\n      throw new TypeError('Invalid configuration specified.');\n    }\n    this._config = config;\n  }\n\n  protected initializeLayout() {\n    const self = this;\n    const halfWidth = this._width / 2;\n\n    this._layout.select('.separator')\n      .attr('x1', halfWidth)\n      .attr('y1', 0)\n      .attr('x2', halfWidth)\n      .attr('y2', this._height);\n\n    this._gaugeGroup\n      .attr('transform', `translate(${this._width / 2 - Config.GAUGE_CONFIG.width / 2}, ${this._height - 110})`);\n\n    function initializeLabel(d) {\n      const g = d3.select(this);\n\n      let label = d.name;\n      const index = label.indexOf(',');\n      if (index !== -1) {\n        label = label.substring(0, index);\n      }\n\n      const labelWords = label.split(' ');\n      let line = '';\n      const lines = [];\n      labelWords.forEach(w => {\n        if (line.length * self._config.averageCharSize < self._config.polygonLength) {\n          line += (line.length === 0) ? w : ` ${w}`;\n        } else {\n          lines.push(line);\n          line = w;\n        }\n      });\n      lines.push(line);\n\n      const textGroup = g.select('.text-group')\n        .attr('transform', '');\n\n      textGroup.select('.amount')\n        .attr('text-anchor', 'middle')\n        .attr('x', self._config.polygonLength / 2)\n        .attr('y', 0);\n\n      const labelLines = textGroup.select('.label')\n        .attr('text-anchor', 'middle')\n        .attr('y', 5)\n        .selectAll('tspan')\n        .data(lines);\n\n      labelLines.exit()\n        .remove();\n\n      const labelLinesCreated = labelLines.enter()\n        .append('tspan');\n\n      labelLines.merge(labelLinesCreated)\n        .attr('x', self._config.polygonLength / 2)\n        .attr('dy', 11)\n        .text(d => d);\n    }\n    this._layout.select('#incomes-group')\n      .attr('transform', 'translate(0, 0)');\n\n    this._layout.select('#spendings-group')\n      .attr('transform', `translate(${this._width / 2}, 0)`);\n\n    this._incomeGroups.each(initializeLabel);\n    this._spendingGroups.each(initializeLabel);\n  }\n\n  protected renderLayout() {\n    const self = this;\n    const halfWidth = this._width / 2;\n\n    const count = Math.floor((halfWidth - 2 * this._config.horizontalPadding) /\n      (this._config.polygonLength + this._config.horizontalMinSpacing));\n\n    const spacing = (halfWidth - 2 * this._config.horizontalPadding -\n      count * this._config.polygonLength) / (count - 1);\n\n    let maxTextHeights = [];\n    function findMaxTextHeights(d, i) {\n      const textGroup = d3.select(this).select('.text-group');\n      if (i === 0) {\n        maxTextHeights = [];\n      }\n      if (i % count === 0) {\n        maxTextHeights.push(0);\n      }\n      const index = Math.floor(i / count);\n      const height = (textGroup.node() as SVGGraphicsElement).getBBox().height;\n      if (maxTextHeights[index] < height) {\n        maxTextHeights[index] = height;\n      }\n    }\n\n    let x, y, maxHeight, maxHeights = [];\n    function applyTransform(d, i) {\n      if (i === 0) {\n        maxHeights = [];\n        y = self._config.verticalPadding;\n        maxHeight = 0;\n      }\n      if (i % count === 0) {\n        maxHeights.push(0);\n        x = self._config.horizontalPadding;\n        if (i !== 0) {\n          y += maxHeight + self._config.verticalMinSpacing;\n        }\n        maxHeight = 0;\n      } else {\n        x += self._config.polygonLength + spacing;\n      }\n      const maxTextHeight = maxTextHeights[Math.floor(i / count)];\n      d3.select(this)\n        .select('.polygons-group')\n        .attr('transform', `translate(0, ${maxTextHeight})`);\n\n      if (d.polygonsGroup.boundingBox.height > maxHeight) {\n        maxHeight = d.polygonsGroup.boundingBox.height + maxTextHeight;\n        maxHeights[Math.floor(i / count)] = maxHeight;\n      }\n      return `translate(${x}, ${y})`;\n    }\n\n    this._incomeGroups.each(findMaxTextHeights)\n      .transition()\n      .duration(this._config.transitionDuration)\n      .attr('transform', applyTransform);\n\n    this._spendingGroups.each(findMaxTextHeights)\n      .transition()\n      .duration(this._config.transitionDuration)\n      .attr('transform', applyTransform);\n\n    this._budgetGroup\n      .transition()\n      .duration(this._config.transitionDuration)\n      .attr('viewBox', () => {\n        const computedHeight = sum(maxHeights) + 2 * self._config.verticalPadding +\n          (maxHeights.length - 1) * self._config.verticalMinSpacing + 100;\n\n        const ratio = computedHeight / this._height;\n        const computedWidth = this._width /** ratio*/;\n\n        /*this._height = d3.sum(maxHeights) + 2 * self._config.verticalPadding +\n          (maxHeights.length - 1) * self._config.verticalMinSpacing + 100;*/\n        //this._width = this._height * this._ratio;\n\n        return `0 0 ${computedWidth} ${computedHeight}`;\n      });\n  }\n}\n","import { max } from 'd3-array';\nimport * as d3 from 'd3-selection';\nimport 'd3-transition';\n\nimport { Config } from '../../config';\nimport { Budget } from '../budget';\n\nimport { Layout } from './layout';\nimport { isLayoutConfig, LayoutConfig } from './layout-config';\n\nexport class HorizontalBarsLayout extends Layout {\n  private readonly _config: LayoutConfig;\n\n  constructor(budget: Budget, svgElement: any, config: LayoutConfig) {\n    super(budget, svgElement);\n    if (!isLayoutConfig(config)) {\n      throw new TypeError('Invalid configuration specified.');\n    }\n    this._config = config;\n  }\n\n  protected initializeLayout() {\n    const self = this;\n    const maxLengthName = max(this._budget.elements, d => d.name.length);\n    let maxLabelWidth = 0;\n\n    function initializeLabel(d) {\n      const g = d3.select(this);\n\n      let label = d.name;\n      const index = label.indexOf(',');\n      if (index !== -1) {\n        label = label.substring(0, index);\n      }\n\n      const labelWords = label.split(' ');\n      let line = '';\n      const lines = [];\n      labelWords.forEach(w => {\n        if (line.length * self._config.averageCharSize < maxLengthName * self._config.averageCharSize / 4) {\n          line += (line.length === 0) ? w : ` ${w}`;\n        } else {\n          lines.push(line);\n          line = w;\n        }\n      });\n      lines.push(line);\n\n      const textGroup = g.select('.text-group');\n      textGroup.select('.amount')\n        .attr('text-anchor', 'end')\n        .attr('x', 0)\n        .attr('y', 7);\n\n      const labelLines = textGroup.select('.label')\n        .attr('text-anchor', 'end')\n        .attr('y', 10)\n        .selectAll('tspan')\n        .data(lines);\n\n      labelLines.exit()\n        .remove();\n\n      const labelLinesCreated = labelLines.enter()\n        .append('tspan');\n\n      labelLines.merge(labelLinesCreated)\n        .attr('x', 0)\n        .attr('dy', 11)\n        .text(d => d);\n\n      g.select('.polygons-group')\n        .attr('transform', '');\n\n      const labelWidth = (textGroup.node() as SVGGraphicsElement).getBBox().width;\n      if (maxLabelWidth < labelWidth) {\n        maxLabelWidth = labelWidth;\n      }\n    }\n\n    function adjustGroup() {\n      const g = d3.select(this);\n      g.select('.text-group')\n        .attr('transform', `translate(${maxLabelWidth}, 0)`);\n\n      g.select('.polygons-group')\n        .attr('transform', `translate(${maxLabelWidth + self._config.horizontalPadding}, 0)`);\n    }\n\n    this._incomeGroups.each(initializeLabel)\n      .each(adjustGroup);\n    this._spendingGroups.each(initializeLabel)\n      .each(adjustGroup);\n\n    // Compute min size of SVG viewBox.\n    const maxCount = Math.max(this._budget.incomes.length, this._budget.spendings.length);\n    const approxHeight = this._config.verticalPadding * 2 + maxCount * this._config.polygonLength +\n      (maxCount - 1) * this._config.verticalMinSpacing;\n\n    const maxElement = this._budget.elements[0];\n    const maxPolygonHeight = Math.ceil(maxElement.polygonsGroup.count /\n      maxElement.polygonsGroup.config.maxCountPerLine) * maxElement.polygonsGroup.config.sideLength;\n    const approxWidth = (this._config.horizontalPadding * 2 + maxPolygonHeight + maxLabelWidth +\n      self._config.horizontalPadding) * 2;\n\n    this._width = Math.max(approxWidth, this._width);\n    this._height = Math.max(approxHeight, this._height);\n    this._svgElement.attr('viewBox', `0 0 ${this._width} ${this._height}`);\n\n    const halfWidth = this._width / 2;\n    this._layout.select('.separator')\n      .attr('x1', halfWidth)\n      .attr('y1', 0)\n      .attr('x2', halfWidth)\n      .attr('y2', this._height);\n\n    this._gaugeGroup\n      .attr('transform', `translate(${this._width / 2 - Config.GAUGE_CONFIG.width / 2}, ${this._height - 110})`);\n\n    this._layout.select('#incomes-group')\n      .attr('transform', `translate(${halfWidth}, 0)`);\n    this._layout.select('#spendings-group')\n      .attr('transform', 'translate(0, 0)');\n  }\n\n  protected renderLayout() {\n    const self = this;\n    let y;\n\n    function applyTransform(d, i) {\n      if (i === 0) {\n        y = self._config.verticalPadding;\n      } else {\n        y += self._config.polygonLength + self._config.verticalMinSpacing;\n      }\n      return `translate(${self._config.horizontalPadding}, ${y})`;\n    }\n\n    this._incomeGroups.transition()\n      .duration(this._config.transitionDuration)\n      .attr('transform', applyTransform);\n\n    this._spendingGroups.transition()\n      .duration(this._config.transitionDuration)\n      .attr('transform', applyTransform);\n  }\n}\n"],"names":["PolygonsGroupOrientation","tslib_1.__extends","descending","range","require$$0","require$$1","this","d3Collection","d3Tip","d3.select","d3.event","require$$2","require$$3","require$$4","require$$5","d3SimpleGauge","sum","max"],"mappings":"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"}