{"version":3,"file":"waffster.js","sources":["../src/geometry/polygons-group-configs.ts","../src/config.ts","../src/budget/budget-element-config.ts","../src/budget/budget-config.ts","../src/geometry/bounding-box.ts","../src/geometry/abstract-polygons-group.ts","../src/geometry/polygons-super-group.ts","../src/utils/formatter.ts","../src/budget/budget-element.ts","../src/budget/budget-element-group.ts","../src/geometry/square.ts","../src/geometry/squares-group.ts","../src/budget/simple-budget-element.ts","../src/budget/budget.ts","../node_modules/d3-tip/dist/index.js","../src/utils/event.ts","../src/budget/commands/add-command.ts","../src/budget/commands/command.ts","../src/budget/commands/command-invoker.ts","../src/budget/commands/delete-command.ts","../src/budget/visitors/rendering-visitor.ts","../src/budget/budget-visualization.ts","../node_modules/d3-simple-gauge/dist/d3-simple-gauge.js","../src/budget/layouts/layout-config.ts","../src/budget/layouts/layout.ts","../src/budget/layouts/bars-layout.ts","../src/budget/layouts/grid-layout.ts","../src/budget/layouts/horizontal-bars-layout.ts"],"sourcesContent":["/**\r\n * Defines the possible orientation of a polygons group.\r\n */\r\nexport enum PolygonsGroupOrientation {\r\n  HORIZONTAL = 'horizontal',\r\n  VERTICAL = 'vertical'\r\n}\r\n\r\n/**\r\n * Defines the base of a polygons group configuration.\r\n */\r\nexport interface PolygonsGroupConfig {\r\n  /**\r\n   * The maximum polygons count per line.\r\n   */\r\n  maxCountPerLine: number;\r\n\r\n  /**\r\n   * The orientation of the group. By default, the orientation is HORIZONTAL.\r\n   */\r\n  orientation?: PolygonsGroupOrientation;\r\n\r\n  /**\r\n   * The length of a polygon side.\r\n   */\r\n  sideLength: number;\r\n\r\n  /**\r\n   * The starting position of the group. By default, the starting position is 0.\r\n   */\r\n  startingPosition?: number;\r\n}\r\n\r\n/**\r\n * Checks if the specified configuration has all the base properties.\r\n *\r\n * @param config        The configuration to validate.\r\n * @return {boolean}    TRUE of the configuration has all the base properties. FALSE otherwise.\r\n */\r\nexport function isPolygonsGroupConfig(config: any): boolean {\r\n  return config !== undefined &&\r\n    config.maxCountPerLine !== undefined && !isNaN(config.maxCountPerLine) && config.maxCountPerLine > 0 &&\r\n    (config.orientation === undefined || (<any>Object).values(PolygonsGroupOrientation).includes(config.orientation)) &&\r\n    config.sideLength !== undefined && !isNaN(config.sideLength) && config.sideLength > 0 &&\r\n    (config.startingPosition === undefined ||\r\n      config.startingPosition >= 0 && config.startingPosition < config.maxCountPerLine);\r\n}\r\n","import { GaugeConfig } from './budget/layouts/layout-config';\r\nimport { PolygonsGroupConfig, PolygonsGroupOrientation } from './geometry/polygons-group-configs';\r\n\r\n/**\r\n * Defines the configuration values of the application.\r\n */\r\nexport class Config {\r\n  /**\r\n   * The average character size.\r\n   */\r\n  static readonly AVERAGE_CHAR_SIZE = 7.5;\r\n\r\n  /**\r\n   * The orientation og the budget elements.\r\n   */\r\n  static readonly BUDGET_ELEMENTS_ORIENTATION = PolygonsGroupOrientation.HORIZONTAL;\r\n\r\n  /**\r\n   * The spacing to use for the sub elements of the budget when these elements are active.\r\n   */\r\n  static readonly BUDGET_SUB_ELEMENTS_SPACING = 8;\r\n\r\n  /**\r\n   * The configuration of the gauge.\r\n   */\r\n  static readonly GAUGE_CONFIG: GaugeConfig = {\r\n    barWidth: 12.5,\r\n    height: 55,\r\n    interval: [-26000000, 26000000],\r\n    needleRadius: 5.5,\r\n    width: 110,\r\n  };\r\n\r\n  /**\r\n   * Indicates if the groups of an element must used different colors.\r\n   */\r\n  static readonly IS_USING_DISTINCT_COLORS = false;\r\n\r\n  /**\r\n   * The delay before the active level is changed when an element is hovered.\r\n   */\r\n  static readonly LEVEL_CHANGE_DELAY = 1000;\r\n\r\n  /**\r\n   * The minimum amount to show.\r\n   */\r\n  static readonly MIN_AMOUNT = 50000;\r\n\r\n  /**\r\n   * The maximum polygons count per line for a group.\r\n   */\r\n  static readonly MAX_COUNT_PER_LINE = 20;\r\n\r\n  /**\r\n   * The side length of a square.\r\n   */\r\n  static readonly SIDE_LENGTH = 8;\r\n\r\n  /**\r\n   * The transition duration in ms.\r\n   */\r\n  static readonly TRANSITION_DURATION = 350;\r\n\r\n  /**\r\n   * The default polygons group configuration to use.\r\n   */\r\n  static readonly DEFAULT_POLYGONS_GROUP_CONFIG: PolygonsGroupConfig = {\r\n    maxCountPerLine: Config.MAX_COUNT_PER_LINE,\r\n    orientation: Config.BUDGET_ELEMENTS_ORIENTATION,\r\n    sideLength: Config.SIDE_LENGTH\r\n  };\r\n}\r\n","/**\r\n * Defines the possible types for a budget element.\r\n */\r\nexport enum BudgetElementType {\r\n  DEFICIT = 'deficit',\r\n  INCOME = 'income',\r\n  SPENDING = 'spending'\r\n}\r\n\r\n/**\r\n * Â¸Defines a feedback message for a budget element.\r\n */\r\nexport interface FeedbackMessage {\r\n  /**\r\n   * An arrow of two elements that represents an interval.\r\n   */\r\n  interval: number[];\r\n\r\n  /**\r\n   * The message associated with the interval.\r\n   */\r\n  message: string;\r\n}\r\n\r\n/**\r\n * Validates if the specified element is a feedback message.\r\n *\r\n * @param feedbackMessage   The element to validate.\r\n * @returns {boolean}       TRUE if the element is a feedback message. FALSE otherwise.\r\n */\r\nfunction isFeedbackMessage(feedbackMessage: any): feedbackMessage is FeedbackMessage {\r\n  return feedbackMessage && feedbackMessage.interval !== undefined && feedbackMessage.interval.length === 2 &&\r\n    !isNaN(feedbackMessage.interval[0]) && !isNaN(feedbackMessage.interval[1]) &&\r\n    feedbackMessage.interval[0] <= feedbackMessage.interval[1] && feedbackMessage.message !== undefined;\r\n}\r\n\r\n/**\r\n * Defines the configuration for a budget element.\r\n */\r\nexport interface BudgetElementConfig {\r\n  /**\r\n   * The name of the element.\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * The description of the element.\r\n   */\r\n  description: string;\r\n\r\n  /**\r\n   * The type of the element.\r\n   */\r\n  type: BudgetElementType;\r\n\r\n  /**\r\n   * The min amount of the element.\r\n   */\r\n  minAmount: number;\r\n\r\n  /**\r\n   * Indicates if the element is mutable.\r\n   */\r\n  isMutable: boolean;\r\n\r\n  /**\r\n   * The feedback messages to use.\r\n   */\r\n  feedbackMessages: FeedbackMessage[];\r\n}\r\n\r\n/**\r\n * Validates if the specified element is a valid configuration.\r\n *\r\n * @param config        The configuration to validate.\r\n * @returns {boolean}   TRUE if the configuration is valid. FALSE otherwise.\r\n */\r\nexport function isBudgetElementConfig(config: any): config is BudgetElementConfig {\r\n  return config && config.name !== undefined && config.description !== undefined && config.type !== undefined &&\r\n    !isNaN(config.minAmount) && config.minAmount > 0 && (config.feedbackMessages === undefined ||\r\n    config.feedbackMessages !== undefined && config.feedbackMessages.every(f => isFeedbackMessage(f)));\r\n}\r\n","import { BudgetElement } from './budget-element';\r\nimport { BudgetElementType } from './budget-element-config';\r\n\r\n/**\r\n * Defines a budget adjustment configuration\r\n */\r\nexport interface BudgetAdjustment {\r\n  amount: number;\r\n  name: string;\r\n  type: BudgetElementType;\r\n}\r\n\r\n/**\r\n * Defines a budget item configuration\r\n */\r\ninterface BudgetItemConfig {\r\n  amount?: number;\r\n  children?: BudgetElement[];\r\n  isMutable?: boolean;\r\n  name: string;\r\n  mustBeKeep: boolean;\r\n}\r\n\r\n/**\r\n * Defines a budget configuration.\r\n */\r\nexport interface BudgetConfig {\r\n  adjustments?: BudgetAdjustment[];\r\n  incomes: BudgetItemConfig[];\r\n  spendings: BudgetItemConfig[];\r\n  year: number;\r\n}\r\n\r\nfunction isBudgetAdjustment(adjustment: any): adjustment is BudgetAdjustment {\r\n  return !isNaN(adjustment.amount) && adjustment.name && adjustment.type && adjustment.type &&\r\n    (<any>Object).values(BudgetElementType).includes(adjustment.type);\r\n}\r\n\r\n/**\r\n * Validates if the element specified is a budget element.\r\n *\r\n * @param budgetElement     The element to validate.\r\n * @returns {boolean}       TRUE if the element specified is a budget element. FALSE otherwise.\r\n */\r\nfunction isBudgetElement(budgetElement: any): budgetElement is BudgetElement {\r\n  let isValid = false;\r\n  if (budgetElement.children && budgetElement.children.length > 0) {\r\n    isValid = budgetElement.children.every(c => isBudgetElement(c));\r\n  } else if (!isNaN(budgetElement.amount) && budgetElement.amount >= 0){\r\n    isValid = true;\r\n  }\r\n  return isValid && budgetElement.name;\r\n}\r\n\r\n/**\r\n * Validates if the element specified is a valid budget configuration.\r\n *\r\n * @param budgetConfig      The configuration to validate.\r\n * @returns {boolean}       TRUE if the configuration specified is valid. FALSE otherwise.\r\n */\r\nexport function isBudgetConfig(budgetConfig: any): budgetConfig is BudgetConfig {\r\n  return !isNaN(budgetConfig.year) &&\r\n    budgetConfig.adjustments === undefined ||\r\n    (budgetConfig.adjustments.length >= 0 && budgetConfig.adjustments.every(a => isBudgetAdjustment(a))) &&\r\n    budgetConfig.incomes.length >= 0 && budgetConfig.incomes.every(s => isBudgetElement(s)) &&\r\n    budgetConfig.spendings.length >= 0 && budgetConfig.spendings.every(s => isBudgetElement(s));\r\n}\r\n","import { Point } from './point';\r\n\r\n/**\r\n * Defines a bounding box.\r\n */\r\nexport class BoundingBox {\r\n  position: Point;\r\n  width: number;\r\n  height: number;\r\n\r\n  /**\r\n   * Initializes a new instance of the BoundingBox class.\r\n   *\r\n   * @param position    The top-left position of the bounding box.\r\n   * @param width       The width of the bounding box.\r\n   * @param height      The height of the bounding box.\r\n   */\r\n  constructor(position: Point = { x: 0, y: 0 }, width = 0, height = 0) {\r\n    if (width < 0) {\r\n      throw new RangeError('Invalid width specified.');\r\n    }\r\n    if (height < 0) {\r\n      throw new RangeError('Invalid height specified.');\r\n    }\r\n    this.position = position;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  /**\r\n   * Gets the X position of the bounding box.\r\n   *\r\n   * @return {number}   The X position.\r\n   */\r\n  get x(): number {\r\n    return this.position.x;\r\n  }\r\n\r\n  /**\r\n   * Gets the Y position of the bounding box.\r\n   *\r\n   * @return {number}   The Y position.\r\n   */\r\n  get y(): number {\r\n    return this.position.y;\r\n  }\r\n\r\n  /**\r\n   * Checks if the current point is into the bounding box.\r\n   *\r\n   * @param point       The point to check.\r\n   * @return {boolean}  TRUE if the specified point is into the bounding box. FALSE otherwise.\r\n   */\r\n  isInto(point: Point): boolean {\r\n    return this.position.x <= point.x && this.position.x + this.width >= point.x &&\r\n      this.position.y <= point.y && this.position.y + this.height >= point.y;\r\n  }\r\n\r\n  /**\r\n   * Converts the bounding box to a string representation.\r\n   *\r\n   * @return {string}   The string associated with the properties of the bounding box.\r\n   */\r\n  toString(): string {\r\n    return `x: ${this.position.x} y: ${this.position.y} width: ${this.width} height: ${this.height}`;\r\n  }\r\n}\r\n","import { BoundingBox } from './bounding-box';\r\nimport { Point } from './point';\r\nimport { Polygon } from './polygon';\r\nimport { isPolygonsGroupConfig, PolygonsGroupConfig, PolygonsGroupOrientation } from './polygons-group-configs';\r\nimport { Translation } from './translation';\r\n\r\n/**\r\n * Defines the base of a polygons group.\r\n */\r\nexport abstract class AbstractPolygonsGroup {\r\n  readonly id: number;\r\n\r\n  // TODO: Put variable private and use public accessors.\r\n  protected _boundingBox: BoundingBox;\r\n  protected _maxCountPerLine: number;\r\n  protected _orientation: PolygonsGroupOrientation;\r\n  protected _sideLength: number;\r\n  protected _startingPosition;\r\n\r\n  private static _currentId = 0;\r\n  private readonly _translation: Translation;\r\n  private _boundary = [];\r\n  private _selectionCount = 0;\r\n\r\n  protected constructor(config: PolygonsGroupConfig) {\r\n    this.config = config;\r\n    this._boundary = [];\r\n    this._boundingBox = new BoundingBox();\r\n    this._translation = { x: 0, y: 0 };\r\n    this.id = ++AbstractPolygonsGroup._currentId;\r\n  }\r\n\r\n  /**\r\n   * Gets the polygons count of the group.\r\n   *\r\n   * @returns {number}              The polygons count into the group.\r\n   */\r\n  abstract get count(): number;\r\n\r\n  /**\r\n   * Sets the polygons count into the group.\r\n   *\r\n   * @param {number} count          The polygons count to set.\r\n   */\r\n  abstract set count(count: number);\r\n\r\n  abstract get isMutable(): boolean;\r\n\r\n  abstract set isMutable(isMutable: boolean);\r\n\r\n  abstract get invariableCount(): number;\r\n\r\n  /**\r\n   * Gets the polygons of the group.\r\n   *\r\n   * @returns {Polygon[]}     The polygons of the group.\r\n   */\r\n  abstract get polygons(): Polygon[];\r\n\r\n  abstract get temporaryCount(): number;\r\n\r\n  abstract set temporaryCount(count: number);\r\n\r\n  /**\r\n   * Gets the boundary of the polygons group.\r\n   */\r\n  get boundary(): Point[] {\r\n    return this._boundary;\r\n  }\r\n\r\n  /**\r\n   * Gets the bounding box associated with the group.\r\n   *\r\n   * @returns {BoundingBox}                 The bounding box of the group.\r\n   */\r\n  get boundingBox(): BoundingBox {\r\n    return this._boundingBox;\r\n  }\r\n\r\n  /**\r\n   * Gets the configuration of the group.\r\n   *\r\n   * @returns {PolygonsGroupConfig}         The configuration of the group.\r\n   */\r\n  get config(): PolygonsGroupConfig {\r\n    return this.getBaseConfig();\r\n  }\r\n\r\n  /**\r\n   * Sets the configuration of the group.\r\n   *\r\n   * @param {PolygonsGroupConfig} config    The configuration to set.\r\n   */\r\n  set config(config: PolygonsGroupConfig) {\r\n    this.setBaseConfig(config);\r\n  }\r\n\r\n  get selectionCount(): number {\r\n    return this._selectionCount;\r\n  }\r\n\r\n  set selectionCount(count: number) {\r\n    if (count < 0 || count > this.count) {\r\n      throw new TypeError('The specified count is invalid');\r\n    }\r\n    if (this._selectionCount === count) {\r\n      return;\r\n    }\r\n    this._selectionCount = count;\r\n    const polygons = this.polygons;\r\n    for (let max = this.polygons.length - 1, i = max; i >= 0; --i) {\r\n      polygons[i].isSelected = max - i < count;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the translation associated with the group.\r\n   *\r\n   * @returns {Translation}         The translation of the group.\r\n   */\r\n  get translation(): Translation {\r\n    return this._translation;\r\n  }\r\n\r\n  /**\r\n   * Reshapes the group based on the starting position.\r\n   *\r\n   * @param [startingPosition]    The starting position to use to reshape the group.\r\n   *                              By default, the starting position is 0.\r\n   */\r\n  abstract reshape(startingPosition?);\r\n\r\n  /**\r\n   * Translates the group of the offset specified.\r\n   *\r\n   * @param {number} offset       The offset to use to do translation.\r\n   */\r\n  translate(offset: number) {\r\n    if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\r\n      this._translation.x = 0;\r\n      this._translation.y = offset;\r\n    } else {\r\n      this._translation.x = offset;\r\n      this._translation.y = 0;\r\n    }\r\n  }\r\n\r\n  protected getBaseConfig(): PolygonsGroupConfig {\r\n    return {\r\n      maxCountPerLine: this._maxCountPerLine,\r\n      orientation: this._orientation,\r\n      sideLength: this._sideLength,\r\n      startingPosition: this._startingPosition\r\n    };\r\n  }\r\n\r\n  protected setBaseConfig(config: PolygonsGroupConfig) {\r\n    if (!isPolygonsGroupConfig(config)) {\r\n      throw new TypeError('Invalid configuration specified.');\r\n    }\r\n    this._maxCountPerLine = config.maxCountPerLine;\r\n    this._orientation = config.orientation || PolygonsGroupOrientation.HORIZONTAL;\r\n    this._sideLength = config.sideLength;\r\n    this._startingPosition = config.startingPosition || 0;\r\n  }\r\n\r\n  /**\r\n   * Computes the boundary of a polygons group.\r\n   */\r\n  protected updateBoundary(extraHeight = 0) {\r\n    /* Boundary model\r\n                 (1) *----->----* (2)\r\n                     |          |\r\n      (7) *----->----* (8)      |\r\n          |                     |\r\n          |             (4) *---* (3)\r\n          |                 |\r\n      (6) *--------<--------* (5)\r\n     */\r\n    const boundingBox = this.getBoundingBox({ x: 0, y: 0 }, false);\r\n    boundingBox.height += extraHeight;\r\n    const count = this.count + this._startingPosition || 1;\r\n    const padding = 0;\r\n    const hasMoreThanSingleLine = Math.ceil(count / this._maxCountPerLine) > 1;\r\n    this._boundary = [];\r\n\r\n    if (hasMoreThanSingleLine) {\r\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\r\n        // Point (1)\r\n        this._boundary.push({\r\n          x: boundingBox.x + this._startingPosition * this._sideLength - padding,\r\n          y: boundingBox.y - padding\r\n        });\r\n      } else {\r\n        // Point (1)\r\n        this._boundary.push({\r\n          x: boundingBox.x - padding,\r\n          y: boundingBox.y + this._startingPosition * this._sideLength - padding\r\n        });\r\n      }\r\n    } else {\r\n      // Point (1)\r\n      this._boundary.push({\r\n        x: boundingBox.x - padding,\r\n        y: boundingBox.y - padding\r\n      });\r\n    }\r\n\r\n    // Point (2)\r\n    this._boundary.push({\r\n      x: boundingBox.x + boundingBox.width + padding,\r\n      y: boundingBox.y - padding\r\n    });\r\n\r\n    if (count % this._maxCountPerLine !== 0 && hasMoreThanSingleLine) {\r\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\r\n        // Point (3)\r\n        this._boundary.push({\r\n          x: boundingBox.x + boundingBox.width + padding,\r\n          y: boundingBox.y + boundingBox.height - this._sideLength + padding\r\n        });\r\n        const width = (count % this._maxCountPerLine) * this._sideLength;\r\n\r\n        // Point (4)\r\n        this._boundary.push({\r\n          x: boundingBox.x + width + padding,\r\n          y: boundingBox.y + boundingBox.height - this._sideLength + padding\r\n        });\r\n        // Point (5)\r\n        this._boundary.push({\r\n          x: boundingBox.x + width + padding,\r\n          y: boundingBox.y + boundingBox.height + padding\r\n        });\r\n      } else {\r\n        const height = (count % this._maxCountPerLine) * this._sideLength;\r\n\r\n        // Point (3)\r\n        this._boundary.push({\r\n          x: boundingBox.x + boundingBox.width + padding,\r\n          y: boundingBox.y + height + padding\r\n        });\r\n        // Point (4)\r\n        this._boundary.push({\r\n          x: boundingBox.x + boundingBox.width - this._sideLength + padding,\r\n          y: boundingBox.y + height + padding\r\n        });\r\n        // Point (5)\r\n        this._boundary.push({\r\n          x: boundingBox.x + boundingBox.width - this._sideLength + padding,\r\n          y: boundingBox.y + boundingBox.height + padding\r\n        });\r\n      }\r\n    } else {\r\n      // Point (5)\r\n      this._boundary.push({\r\n        x: boundingBox.x + boundingBox.width + padding,\r\n        y: boundingBox.y + boundingBox.height + padding\r\n      });\r\n    }\r\n    // Point (6)\r\n    this._boundary.push({\r\n      x: boundingBox.x - padding,\r\n      y: boundingBox.y + boundingBox.height + padding\r\n    });\r\n    if (this._startingPosition !== 0 && hasMoreThanSingleLine) {\r\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\r\n        // Point (7)\r\n        this._boundary.push({\r\n          x: boundingBox.x - padding,\r\n          y: boundingBox.y + this._sideLength - padding\r\n        });\r\n        // Point (8)\r\n        this._boundary.push({\r\n          x: boundingBox.x + this._startingPosition * this._sideLength - padding,\r\n          y: boundingBox.y + this._sideLength - padding\r\n        });\r\n      } else {\r\n        // Point (7)\r\n        this._boundary.push({\r\n          x: boundingBox.x + this._sideLength - padding,\r\n          y: boundingBox.y - padding\r\n        });\r\n        // Point (8)\r\n        this._boundary.push({\r\n          x: boundingBox.x + this._sideLength - padding,\r\n          y: boundingBox.y + this._startingPosition * this._sideLength - padding\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  protected getBoundingBox(position: { x, y }, isIncludedTemporaryCount = true): BoundingBox {\r\n    let count = this.count;\r\n    if (isIncludedTemporaryCount && this.temporaryCount > 0) {\r\n      count += this.temporaryCount;\r\n    }\r\n    let countPerLine = this._maxCountPerLine;\r\n    if (this.count > 0 && (this._startingPosition + count) / this._maxCountPerLine <= 1) {\r\n      countPerLine = count;\r\n      const offset = this._startingPosition * this._sideLength;\r\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\r\n        position.x += offset;\r\n      } else {\r\n        position.y += offset;\r\n      }\r\n    }\r\n    const lineLength = (count > 0) ? countPerLine * this._sideLength : this._sideLength;\r\n    const columnLength = (count > 0)\r\n      ? Math.ceil((this._startingPosition + count) / this._maxCountPerLine) * this._sideLength : this._sideLength;\r\n\r\n    if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\r\n      return new BoundingBox(position, lineLength, columnLength);\r\n    }\r\n    return new BoundingBox(position, columnLength, lineLength);\r\n  }\r\n}\r\n","import { ascending, descending } from 'd3-array';\r\n\r\nimport { AbstractPolygonsGroup } from './abstract-polygons-group';\r\nimport { Polygon } from './polygon';\r\nimport { PolygonsGroupConfig, PolygonsGroupOrientation } from './polygons-group-configs';\r\nimport { Config } from '../config';\r\n\r\nenum PolygonsSuperGroupState {\r\n  COLLAPSED,\r\n  EXPANDED\r\n}\r\n\r\nexport class PolygonsSuperGroup extends AbstractPolygonsGroup {\r\n  private readonly _children: AbstractPolygonsGroup[];\r\n  private _isMutable: boolean;\r\n  private _spacing: number;\r\n  private _state: PolygonsSuperGroupState;\r\n\r\n  /**\r\n   * Initializes a new instance of the PolygonsSuperGroup class.\r\n   *\r\n   * @param {PolygonsGroupConfig} config      The configuration to use.\r\n   * @param {number} spacing                  The spacing to use between groups.\r\n   */\r\n  constructor(config: PolygonsGroupConfig, spacing: number) {\r\n    super(config);\r\n    this._children = [];\r\n    this._isMutable = true;\r\n    this._spacing = spacing;\r\n    this._state = PolygonsSuperGroupState.COLLAPSED;\r\n  }\r\n\r\n  /**\r\n   * Gets the polygons count of the super group.\r\n   *\r\n   * @returns {number}              The polygons count into the super group.\r\n   */\r\n  get count(): number {\r\n    return this._children.reduce((total, child) => total + child.count, 0);\r\n  }\r\n\r\n  /**\r\n   * Sets the polygons count into the super group.\r\n   *\r\n   * @param {number} count          The polygons count to set.\r\n   */\r\n  set count(count: number) {\r\n    if (this.count === count) {\r\n      return;\r\n    }\r\n    if (!this._isMutable) {\r\n      throw new Error('the group cannot be modified.');\r\n    }\r\n\r\n    const invariableCount = this.invariableCount;\r\n    count -= invariableCount;\r\n    if (count < 0) {\r\n      throw new RangeError('Invalid count specified. Be sure to specify a number above the invariable count.');\r\n    }\r\n    if (this.temporaryCount !== 0) {\r\n      throw new Error('You should not have temporary element before to set a new count.');\r\n    }\r\n    let diffCount = 0;\r\n    const children = this.children.filter(c => c.isMutable);\r\n    const currentCount = this.count - invariableCount;\r\n\r\n    children.forEach(c => {\r\n      let ratio;\r\n      if (currentCount === 0) {\r\n        ratio = 1 / children.length;\r\n      } else {\r\n        ratio = c.count / currentCount;\r\n      }\r\n      const countToApply = Math.round(ratio * count);\r\n      diffCount += Math.abs(c.count - countToApply);\r\n      c.count = countToApply;\r\n    });\r\n    // Adjust the total count to correct the imprecision of the ratio computations.\r\n    const delta = count - currentCount;\r\n    if (children.length > 0 && Math.abs(delta) !== diffCount) {\r\n      let adjustment = (delta > 0 ? 1 : -1 ) * (Math.abs(delta) - diffCount);\r\n      children.some(c => {\r\n        let countToApply = c.count + adjustment;\r\n        if (countToApply < 0) {\r\n          countToApply = 0;\r\n        }\r\n        if (adjustment < 0) {\r\n          adjustment += c.count - countToApply;\r\n        }\r\n        c.count = countToApply;\r\n        return adjustment >= 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  get isMutable(): boolean {\r\n    return this._isMutable;\r\n  }\r\n\r\n  set isMutable(isMutable: boolean) {\r\n    this._isMutable = isMutable;\r\n    this.children.forEach(c => c.isMutable = isMutable);\r\n  }\r\n\r\n  get invariableCount(): number {\r\n    return this._children.reduce((total, child) => total + child.invariableCount, 0);\r\n  }\r\n\r\n  /**\r\n   * Gets the children associated with the super group.\r\n   *\r\n   * @returns {Polygon[]}     The children of the super group.\r\n   */\r\n  get polygons(): Polygon[] {\r\n    return [].concat.apply([], this.children.map(c => c.polygons));\r\n  }\r\n\r\n  get temporaryCount(): number {\r\n    return this._children.reduce((total, child) => total + child.temporaryCount, 0);\r\n  }\r\n\r\n  set temporaryCount(count: number) {\r\n    const temporaryCount = this.temporaryCount;\r\n    if (this.temporaryCount === count) {\r\n      return;\r\n    }\r\n    const children = this.children;\r\n    if (children.length <= 0) {\r\n      return;\r\n    }\r\n    count = Math.max(!this.isMutable ? -this.count : -this.count + this.invariableCount, count);\r\n\r\n    // Create new elements\r\n    if (count > 0) {\r\n      if (this.count > 0) {\r\n        children[children.length - 1].temporaryCount = count; // Put temporary element to last element of the group.\r\n      } else {\r\n        children[0].temporaryCount = count; // If there is no element, put it in the first.\r\n      }\r\n    } else {\r\n      if (this.temporaryCount > 0) {\r\n        children.forEach(c => c.temporaryCount = 0);\r\n      }\r\n      let remainingCount = count;\r\n      for (let i = children.length - 1; i >= 0; --i) {\r\n        const child = children[i];\r\n        if (Math.abs(remainingCount) - child.count >= 0) {\r\n          child.temporaryCount = -child.count;\r\n          remainingCount += child.count;\r\n        } else {\r\n          child.temporaryCount = remainingCount;\r\n          remainingCount = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the children associated with the super group.\r\n   *\r\n   * @returns {AbstractPolygonsGroup[]}     The children of the super group.\r\n   */\r\n  get children(): AbstractPolygonsGroup[] {\r\n    return this._children.sort((a, b) => {\r\n      let compare = descending(a.count, b.count);\r\n      if (compare === 0) { // Compare IDs if the counts are equals.\r\n        compare = ascending(a.id, b.id);\r\n      }\r\n      return compare;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets the spacing to use between the groups.\r\n   *\r\n   * @returns {number}            The spacing used between the groups.\r\n   */\r\n  get spacing(): number {\r\n    return this._spacing;\r\n  }\r\n\r\n  /**\r\n   * Sets the spacing to use between the groups.\r\n   *\r\n   * @param {number} spacing      The spacing to use.\r\n   */\r\n  set spacing(spacing: number) {\r\n    this._spacing = spacing;\r\n  }\r\n\r\n  reshape(startingPosition = 0) {\r\n    this._startingPosition = startingPosition;\r\n    this.update();\r\n  }\r\n\r\n  addGroup(group: AbstractPolygonsGroup) {\r\n    this._children.push(group);\r\n  }\r\n\r\n  removeGroup(group: AbstractPolygonsGroup) {\r\n    this._children.splice(this._children.findIndex(c => c === group), 1);\r\n  }\r\n\r\n  collapse() {\r\n    this._state = PolygonsSuperGroupState.COLLAPSED;\r\n  }\r\n\r\n  expand() {\r\n    this._state = PolygonsSuperGroupState.EXPANDED;\r\n  }\r\n\r\n  update() {\r\n    const children = this.children;\r\n    switch (this._state) {\r\n      case PolygonsSuperGroupState.COLLAPSED: {\r\n        let count = this._startingPosition;\r\n        let cumulative = 0;\r\n        children.forEach((c, i) => {\r\n          let adjustment = 0;\r\n          if (c.count > 0) {\r\n            adjustment = (count % this._maxCountPerLine === 0 || i === 0) ? 0 : this._sideLength;\r\n            c.translate(cumulative - adjustment);\r\n            c.reshape(count % this._maxCountPerLine);\r\n            count += c.count;\r\n\r\n            if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\r\n              cumulative += c.boundingBox.height - adjustment;\r\n            } else {\r\n              cumulative += c.boundingBox.width - adjustment;\r\n            }\r\n          } else {\r\n            c.translate(0);\r\n            c.reshape(0);\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case PolygonsSuperGroupState.EXPANDED: {\r\n        this._startingPosition = 0;\r\n        let cumulative = 0;\r\n        children.forEach(c => {\r\n          c.translate(cumulative);\r\n          c.reshape(0);\r\n\r\n          if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\r\n            cumulative += c.boundingBox.height + this._spacing;\r\n          } else {\r\n            cumulative += c.boundingBox.width + this._spacing;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    this.updateBoundingBox();\r\n  }\r\n\r\n  private updateBoundingBox() {\r\n    const count = this.count + Math.max(0, this.temporaryCount);\r\n    const maximums = {\r\n      height: this._sideLength,\r\n      width: this._sideLength\r\n    };\r\n    if (count > 0) {\r\n      this._children\r\n        .filter(c => this._state === PolygonsSuperGroupState.EXPANDED || c.count > 0 || c.temporaryCount > 0)\r\n        .forEach(c => {\r\n          let height = c.translation.y + c.boundingBox.y + c.boundingBox.height;\r\n          let width = c.translation.x + c.boundingBox.x + c.boundingBox.width;\r\n          if (maximums.height < height) {\r\n            maximums.height = height;\r\n          }\r\n          if (maximums.width < width) {\r\n            maximums.width = width;\r\n          }\r\n        });\r\n    }\r\n    this._boundingBox.height = maximums.height;\r\n    this._boundingBox.width = maximums.width;\r\n    this.updateBoundary(Config.SIDE_LENGTH / 4 * this._children.length);\r\n  }\r\n}\r\n","const DEFAULT_LOCALE = 'fr';\r\n\r\nexport class Formatter {\r\n  static formatAmount(amount: number, locale = DEFAULT_LOCALE): string {\r\n    let result = amount / Math.pow(10, 6);\r\n    if (Math.abs(result) >= 1) {\r\n      if (locale === DEFAULT_LOCALE) {\r\n        return `${result.toFixed(2).replace('.', ',')} G$`;\r\n      }\r\n      return `$${result.toFixed(2)}B`;\r\n    }\r\n    result = amount / Math.pow(10, 3);\r\n    if (locale === DEFAULT_LOCALE) {\r\n      return `${result.toFixed(0).replace('.', ',')} M$`;\r\n    }\r\n    return `$${result.toFixed(0)}M`;\r\n  }\r\n\r\n  /**\r\n   * Formats the specified name to retrieve the ID associated.\r\n   *\r\n   * @param {string} name             The name to transform.\r\n   * @param {string} spaceCharacter   The space character to use. By default, the character is dash (-).\r\n   * @returns {string}                The ID associated with the name specified.\r\n   */\r\n  static formatId(name: string, spaceCharacter = '-'): string {\r\n    return name.trim().toLowerCase().replace(/[^a-zA-Z ]/g, '').replace(/\\s/g, spaceCharacter);\r\n  }\r\n}\r\n","import { AbstractPolygonsGroup } from '../geometry/abstract-polygons-group';\r\nimport { Formatter } from '../utils/formatter';\r\nimport { D3Selection } from '../utils/types';\r\n\r\nimport {\r\n  isBudgetElementConfig,\r\n  BudgetElementConfig,\r\n  BudgetElementType,\r\n  FeedbackMessage\r\n} from './budget-element-config';\r\nimport { BudgetElementVisitor } from './visitors/budget-element-visitor';\r\n\r\n/**\r\n * Defines an abstract budget element.\r\n */\r\nexport abstract class BudgetElement {\r\n  /**\r\n   * The ID of the element.\r\n   */\r\n  readonly id: string;\r\n\r\n  /**\r\n   * The name of the element.\r\n   */\r\n  readonly name: string;\r\n\r\n  /**\r\n   * The description of the element.\r\n   */\r\n  readonly description: string;\r\n\r\n  /**\r\n   * The element type.\r\n   */\r\n  readonly type: BudgetElementType;\r\n\r\n  /**\r\n   * The parent of the element.\r\n   */\r\n  parent: BudgetElement;\r\n\r\n  /**\r\n   * Indicates if the element is hovered over.\r\n   */\r\n  isHovered: boolean;\r\n\r\n  protected _minAmount: number;\r\n  protected _activeLevel = 0;\r\n  protected _level = 0;\r\n\r\n  private _feedbackMessages: FeedbackMessage[];\r\n\r\n  /**\r\n   * Initializes a new instance of the BudgetElement class.\r\n   *\r\n   * @param {BudgetElementConfig} config    The configuration to use.\r\n   */\r\n  protected constructor(config: BudgetElementConfig) {\r\n    if (!isBudgetElementConfig(config)) {\r\n      throw new TypeError('Invalid configuration specified.');\r\n    }\r\n    this.id = Formatter.formatId(config.name);\r\n    this.name = config.name;\r\n    this.description = config.description;\r\n    this.type = config.type;\r\n    this._minAmount = config.minAmount;\r\n    this._feedbackMessages = config.feedbackMessages;\r\n  }\r\n\r\n  /**\r\n   * Gets the active level.\r\n   *\r\n   * @returns {number} The active level of the element.\r\n   */\r\n  abstract get activeLevel(): number;\r\n\r\n  /**\r\n   * Sets the active level of the element.\r\n   *\r\n   * @param {number} level     The level to set as active.\r\n   */\r\n  abstract set activeLevel(level: number);\r\n\r\n  /**\r\n   * Indicates if the element has the focus.\r\n   *\r\n   * @returns {boolean} TRUE if the element has the focus. FALSE otherwise.\r\n   */\r\n  abstract get hasFocus(): boolean;\r\n\r\n  /**\r\n   * Sets if the element has the focus or not.\r\n   *\r\n   * @param {boolean} hasFocus   TRUE if the element must have the focus. FALSE otherwise.\r\n   */\r\n  abstract set hasFocus(hasFocus: boolean);\r\n\r\n  /**\r\n   * Gets the initial amount of the element.\r\n   *\r\n   * @returns {number} The initial amount of the element.\r\n   */\r\n  abstract get initialAmount(): number;\r\n\r\n  /**\r\n   * Gets the level of the element.\r\n   *\r\n   * @return {number} The level of the element.\r\n   */\r\n  abstract get level(): number;\r\n\r\n  /**\r\n   * Sets the level of the element.\r\n   *\r\n   * @param {number} level    The level to set.\r\n   */\r\n  abstract set level(level: number);\r\n\r\n  /**\r\n   * Gets the polygons group associated with the element.\r\n   *\r\n   * @returns {AbstractPolygonsGroup} The polygons group associated with the element.\r\n   */\r\n  abstract get polygonsGroup(): AbstractPolygonsGroup;\r\n\r\n  /**\r\n   * Gets the D3 selection associated with the element.\r\n   *\r\n   * @returns {D3Selection} The D3 selection associated.\r\n   */\r\n  abstract get svgElement(): D3Selection;\r\n\r\n  /**\r\n   * Sets the D3 selection  associated with the element.\r\n   *\r\n   * @param {D3Selection} element     The D3 selection to use.\r\n   */\r\n  abstract set svgElement(element: D3Selection);\r\n\r\n  /**\r\n   * Gets the amount of the element.\r\n   *\r\n   * @returns {number} The current amount of the element.\r\n   */\r\n  get amount(): number {\r\n    return this.polygonsGroup.count * this._minAmount;\r\n  }\r\n\r\n  /**\r\n   * Sets the amount of the element.\r\n   *\r\n   * @param {number} amount   The amount to set.\r\n   */\r\n  set amount(amount: number) {\r\n    if (!this.isMutable) {\r\n      throw new Error('Impossible to change the amount associated with the element.');\r\n    }\r\n    if (amount < 0) {\r\n      throw new TypeError('Invalid amount specified.');\r\n    }\r\n    this.polygonsGroup.count = Math.ceil(amount / this._minAmount);\r\n  }\r\n\r\n  /**\r\n   * Gets the feedback message associated with the current amount of the element.\r\n   *\r\n   * @returns {string} The message associated with the current amount of the element.\r\n   */\r\n  get feedbackMessage(): string {\r\n    const initialAmount = this.initialAmount;\r\n    if (initialAmount === 0) {\r\n      return '';\r\n    }\r\n    const percent = Math.round(this.amount / initialAmount * 100);\r\n    const feedback = this._feedbackMessages.find(f => f.interval[0] <= percent && f.interval[1] >= percent);\r\n    let message = feedback ? feedback.message : '';\r\n    if (!feedback && this.parent !== undefined) {\r\n      message = this.parent.feedbackMessage;\r\n    }\r\n    return message;\r\n  }\r\n\r\n  /**\r\n   * Indicates if the current element is active.\r\n   *\r\n   * @return {boolean} TRUE if the current element is active. FALSE otherwise.\r\n   */\r\n  get isActive(): boolean {\r\n    return this._level === this.activeLevel;\r\n  }\r\n\r\n  /**\r\n   * Indicates if the amount associated with the element can be modified.\r\n   *\r\n   * @returns {boolean} TRUE if the amount can be modified. FALSE otherwise.\r\n   */\r\n  get isMutable(): boolean {\r\n    return this.polygonsGroup.isMutable;\r\n  }\r\n\r\n  /**\r\n   * Sets if the amount of the element can be modified or not.\r\n   *\r\n   * @param {boolean} isMutable   TRUE if the amount can be modified. FALSE otherwise.\r\n   */\r\n  set isMutable(isMutable: boolean) {\r\n    this.polygonsGroup.isMutable = isMutable;\r\n  }\r\n\r\n  /**\r\n   * Gets the root element of the current element.\r\n   *\r\n   * @returns {BudgetElement} The root element of the current element. If there is no root, the current element is\r\n   *                          returned.\r\n   */\r\n  get root(): BudgetElement {\r\n    let element: BudgetElement = this;\r\n    while (element.parent !== undefined) {\r\n      element = element.parent;\r\n    }\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Gets the amount selected for the element.\r\n   *\r\n   * @returns {number} The selected amount of the element.\r\n   */\r\n  get selectedAmount(): number {\r\n    return this.polygonsGroup.selectionCount * this._minAmount;\r\n  }\r\n\r\n  /**\r\n   * Sets the selected amount for the element.\r\n   *\r\n   * @param {number} selectedAmount    The amount to select in the element. The amount must be positive or equal\r\n   *                                   to zero.\r\n   */\r\n  set selectedAmount(selectedAmount: number) {\r\n    if (selectedAmount < 0) {\r\n      selectedAmount = 0;\r\n    }\r\n    if (this.selectedAmount === selectedAmount) {\r\n      return;\r\n    }\r\n    selectedAmount = Math.min(selectedAmount, this.amount);\r\n    this.polygonsGroup.selectionCount = Math.ceil(selectedAmount / this._minAmount);\r\n  }\r\n\r\n  /**\r\n   * Gets the temporary amount of the element.\r\n   *\r\n   * @returns {number} The temporary amount of the element.\r\n   */\r\n  get temporaryAmount(): number {\r\n    return this.polygonsGroup.temporaryCount * this._minAmount;\r\n  }\r\n\r\n  /**\r\n   * Sets the temporary amount of the element.\r\n   *\r\n   * @param {number} temporaryAmount   The temporary amount to set.\r\n   */\r\n  set temporaryAmount(temporaryAmount: number) {\r\n    this.polygonsGroup.temporaryCount = Math.ceil(temporaryAmount / this._minAmount);\r\n  }\r\n\r\n  /**\r\n   * Accepts the visitor.\r\n   *\r\n   * @param {BudgetElementVisitor} visitor   The visitor to use.\r\n   */\r\n  abstract accept(visitor: BudgetElementVisitor);\r\n\r\n  /**\r\n   * Resets the element to the initial amount.\r\n   */\r\n  abstract reset();\r\n}\r\n","import { descending } from 'd3-array';\r\n\r\nimport { Config } from '../config';\r\nimport { PolygonsGroupConfig } from '../geometry/polygons-group-configs';\r\nimport { PolygonsSuperGroup } from '../geometry/polygons-super-group';\r\nimport { D3Selection } from '../utils/types';\r\n\r\nimport { BudgetElement } from './budget-element';\r\nimport { BudgetElementConfig } from './budget-element-config';\r\nimport { BudgetElementVisitor } from './visitors/budget-element-visitor';\r\n\r\nexport class BudgetElementGroup extends BudgetElement {\r\n  private readonly _children: BudgetElement[];\r\n  private readonly _group: PolygonsSuperGroup;\r\n\r\n  private _hasFocus: boolean;\r\n  private _svgElement: D3Selection;\r\n\r\n  constructor(config: BudgetElementConfig, polygonsGroupConfig: PolygonsGroupConfig) {\r\n    super(config);\r\n    this._children = [];\r\n    this._group = new PolygonsSuperGroup(polygonsGroupConfig, Config.BUDGET_SUB_ELEMENTS_SPACING);\r\n    this._hasFocus = false;\r\n    this.isMutable = config.isMutable;\r\n  }\r\n\r\n  get activeLevel(): number {\r\n    return Math.min(this._level + 1, this._activeLevel);\r\n  }\r\n\r\n  set activeLevel(level: number) {\r\n    if (level < 0) {\r\n      throw new RangeError('Invalid level specified.');\r\n    }\r\n    if (this._activeLevel === level) {\r\n      return;\r\n    }\r\n    this._activeLevel = level;\r\n    this._hasFocus = false;\r\n    this._group.selectionCount = 0;\r\n    this._children.forEach(c => c.activeLevel = level);\r\n    if (this.level + 1 <= this.activeLevel) {\r\n      if (this.level > 0 && this.activeLevel > 1) {\r\n        (this.root.polygonsGroup as PolygonsSuperGroup).spacing = 3 * Config.BUDGET_SUB_ELEMENTS_SPACING;\r\n      } else {\r\n        this.polygonsGroup.spacing = Config.BUDGET_SUB_ELEMENTS_SPACING;\r\n      }\r\n      this._group.expand();\r\n    } else {\r\n      this._group.collapse();\r\n    }\r\n  }\r\n\r\n  get hasFocus(): boolean {\r\n    return this._hasFocus;\r\n  }\r\n\r\n  set hasFocus(hasFocus: boolean) {\r\n    this._hasFocus = hasFocus;\r\n    this.selectedAmount = 0;\r\n    this.children.forEach(c => c.hasFocus = hasFocus);\r\n  }\r\n\r\n  get initialAmount(): number {\r\n    return this._children.reduce((total, child) => total + child.initialAmount, 0);\r\n  }\r\n\r\n  get level(): number {\r\n    return this._level;\r\n  }\r\n\r\n  set level(level: number) {\r\n    if (level < 0) {\r\n      throw new RangeError('Invalid level specified.');\r\n    }\r\n    this._level = level;\r\n    this._children.forEach(c => c.level = level + 1);\r\n  }\r\n\r\n  get polygonsGroup(): PolygonsSuperGroup {\r\n    return this._group;\r\n  }\r\n\r\n  get svgElement(): D3Selection {\r\n    return this._svgElement;\r\n  }\r\n\r\n  set svgElement(svgElement: D3Selection) {\r\n    if (!svgElement) {\r\n      throw ReferenceError('The specified element is undefined.');\r\n    }\r\n    this._svgElement = svgElement;\r\n    const levelGroup = svgElement.append('g')\r\n      .attr('class', 'level-group');\r\n\r\n    levelGroup.append('rect')\r\n      .attr('x', 0)\r\n      .attr('y', 0)\r\n      .attr('width', 0)\r\n      .attr('height', 0);\r\n\r\n    levelGroup.append('line')\r\n      .attr('x1', 0)\r\n      .attr('y1', 0)\r\n      .attr('x2', 0)\r\n      .attr('y2', 0);\r\n\r\n    /*if (this.level === 0) {\r\n      svgElement.append('line')\r\n        .attr('class', 'reference-line')\r\n        .attr('x1', 0)\r\n        .attr('y1', 0)\r\n        .attr('x2', 0)\r\n        .attr('y2', 0);\r\n    }*/\r\n\r\n    this.children.forEach(c => {\r\n      c.svgElement = svgElement.append('g');\r\n    });\r\n    this._svgElement.append('polygon')\r\n      .attr('class', `boundary boundary${this.level}`);\r\n  }\r\n\r\n  get children() {\r\n    return this._children.sort((a, b) => descending(a.amount, b.amount));\r\n  }\r\n\r\n  accept(visitor: BudgetElementVisitor) {\r\n    visitor.visitBudgetElementGroup(this);\r\n  }\r\n\r\n  reset() {\r\n    if (!this.isMutable) {\r\n      return;\r\n    }\r\n    this._children.forEach(c => c.reset());\r\n  }\r\n\r\n  addChild(element: BudgetElement) {\r\n    element.activeLevel = this._activeLevel;\r\n    element.level = this._level + 1;\r\n    element.parent = this;\r\n    if (!this.isMutable) {\r\n      element.isMutable = false;\r\n    }\r\n\r\n    this._children.push(element);\r\n    this._group.addGroup(element.polygonsGroup);\r\n  }\r\n\r\n  removeChild(element: BudgetElement) {\r\n    this._children.splice(this._children.findIndex(c => c === element), 1);\r\n\r\n    element.activeLevel = 0;\r\n    element.level = 0;\r\n    element.parent = undefined;\r\n  }\r\n}\r\n","import { range } from 'd3-array';\r\n\r\nimport { BoundingBox } from './bounding-box';\r\nimport { Point } from './point';\r\nimport { Polygon } from './polygon';\r\n\r\n/**\r\n * Defines a square.\r\n */\r\nexport class Square implements Polygon {\r\n  isSelected: boolean;\r\n  isTemporary: boolean;\r\n\r\n  private static _currentId = 0;\r\n\r\n  private readonly _boundingBox: BoundingBox;\r\n  private readonly _id: number;\r\n\r\n  private _sideLength: number;\r\n  private _points: Point[];\r\n  private _position: Point;\r\n\r\n  /**\r\n   * Initializes a new instance of the Square class.\r\n   *\r\n   * @param position          The top-left position of the square.\r\n   * @param sideLength        The side length of the square.\r\n   */\r\n  constructor(position: Point, sideLength: number) {\r\n    if (sideLength < 0) {\r\n      throw new RangeError('The specified side length is invalid.');\r\n    }\r\n    this._id = Square._currentId++;\r\n    this._position = position;\r\n    this._sideLength = sideLength;\r\n    this._boundingBox = new BoundingBox(this._position, this._sideLength, this._sideLength);\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Gets the bounding box associated with the square.\r\n   *\r\n   * @return {BoundingBox}  The bounding box associated with the square.\r\n   */\r\n  get boundingBox(): BoundingBox {\r\n    return this._boundingBox;\r\n  }\r\n\r\n  /**\r\n   * Gets the unique ID associated with the square.\r\n   *\r\n   * @returns {number}     The ID of the square.\r\n   */\r\n  get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n  /**\r\n   * Gets the points associated with the square in clockwise order.\r\n   *\r\n   * @return {Point[]}      The points in clockwise order.\r\n   */\r\n  get points(): Point[] {\r\n    return this._points;\r\n  }\r\n\r\n  /**\r\n   * Gets the top-left position of the square.\r\n   *\r\n   * @return {Point}        The top-left position of the square.\r\n   */\r\n  get position(): Point {\r\n    return this._position;\r\n  }\r\n\r\n  /**\r\n   * Sets the top-left position of the square.\r\n   *\r\n   * @param position        The new top-left position of the square.\r\n   */\r\n  set position(position: Point) {\r\n    this._position = position;\r\n    this._boundingBox.position.x = position.x;\r\n    this._boundingBox.position.y = position.y;\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Gets the side length of the square.\r\n   *\r\n   * @returns {number}            The side length of the square.\r\n   */\r\n  get sideLength(): number {\r\n    return this._sideLength;\r\n  }\r\n\r\n  /**\r\n   * Sets the side length of the square.\r\n   *\r\n   * @param {number} sideLength   The side length to set.\r\n   */\r\n  set sideLength(sideLength: number) {\r\n    if (sideLength < 0) {\r\n      throw new RangeError('The specified side length is invalid.');\r\n    }\r\n    this._sideLength = sideLength;\r\n    this._boundingBox.height = sideLength;\r\n    this._boundingBox.width = sideLength;\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Updates the square points.\r\n   */\r\n  private update() {\r\n    const center = {\r\n      x: this._position.x + this._sideLength / 2,\r\n      y: this._position.y + this._sideLength / 2\r\n    };\r\n    this._points = range(4).map(d => {\r\n      const i = (d < 2) ? d % 2 : (d + 1) % 2;\r\n      const j = Math.floor(d / 2);\r\n      return {\r\n        x: center.x - ((i === 0) ? 1 : -1) * this._sideLength / 2,\r\n        y: center.y - ((j === 0) ? 1 : -1) * this._sideLength / 2\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { range } from 'd3-array';\r\n\r\nimport { AbstractPolygonsGroup } from './abstract-polygons-group';\r\nimport { Point } from './point';\r\nimport { PolygonsGroupConfig, PolygonsGroupOrientation } from './polygons-group-configs';\r\nimport { Square } from './square';\r\n\r\n/**\r\n * Defines a group of squares.\r\n */\r\nexport class SquaresGroup extends AbstractPolygonsGroup {\r\n  isMutable: boolean;\r\n\r\n  private readonly _position: Point;\r\n  private _count: number;\r\n  private _squares: Square[];\r\n  private _temporaryCount: number;\r\n\r\n  /**\r\n   * Initializes a new instance of the SquaresGroup class.\r\n   *\r\n   * @param count     The squares count of the group.\r\n   * @param config    The parameters to use to initialize the group.\r\n   */\r\n  constructor(count: number, config: PolygonsGroupConfig) {\r\n    if (count < 0) {\r\n      throw new RangeError('Invalid count specified.');\r\n    }\r\n    super(config);\r\n    this.isMutable = true;\r\n    this._count = count;\r\n    this._position = { x: 0, y: 0 };\r\n    this._squares = range(this._startingPosition, this._count + this._startingPosition)\r\n      .map(i => new Square(this.getSquarePosition(i), this._sideLength));\r\n    this._temporaryCount = 0;\r\n    this.updateBoundingBox();\r\n  }\r\n\r\n  /**\r\n   * Gets the configuration of the group.\r\n   *\r\n   * @returns {PolygonsGroupConfig}         The configuration of the group.\r\n   */\r\n  get config(): PolygonsGroupConfig {\r\n    return super.getBaseConfig();\r\n  }\r\n\r\n  /**\r\n   * Sets the configuration of the group.\r\n   *\r\n   * @param {PolygonsGroupConfig} config    The configuration to set.\r\n   */\r\n  set config(config: PolygonsGroupConfig) {\r\n    super.setBaseConfig(config);\r\n    if (this._squares) {\r\n      this._squares.forEach((square, i) => {\r\n        square.position = this.getSquarePosition(i + this._startingPosition);\r\n        square.sideLength = this._sideLength;\r\n      });\r\n      this.updateBoundingBox();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the squares count.\r\n   *\r\n   * @returns {number}        The squares count.\r\n   */\r\n  get count(): number {\r\n    return this._count;\r\n  }\r\n\r\n  /**\r\n   * Sets the polygons count.\r\n   *\r\n   * @param {number} count    The polygons count to set.\r\n   */\r\n  set count(count: number) {\r\n    if (this._count === count) {\r\n      return;\r\n    }\r\n    if (!this.isMutable) {\r\n      throw new Error('The group cannot be modified.');\r\n    }\r\n    if (count < 0) {\r\n      throw new RangeError(`Invalid count specified (${count}).`);\r\n    }\r\n    if (this._temporaryCount !== 0) {\r\n      throw new Error('You should not have temporary element before to set a new count.');\r\n    }\r\n    this.updateCount(this._count, count);\r\n    this._count = count;\r\n    this.updateBoundingBox();\r\n  }\r\n\r\n  get invariableCount(): number {\r\n    return !this.isMutable ? this._count : 0;\r\n  }\r\n\r\n  /**\r\n   * Gets the polygons associated with the group.\r\n   *\r\n   * @returns {Square[]}      A list of squares.\r\n   */\r\n  get polygons(): Square[] {\r\n    return this._squares;\r\n  }\r\n\r\n  get temporaryCount(): number {\r\n    return this._temporaryCount;\r\n  }\r\n\r\n  set temporaryCount(count: number) {\r\n    if (this._temporaryCount === count) {\r\n      return;\r\n    }\r\n    count = Math.max(-this._count, count);\r\n    if (count >= 0) {\r\n      if (this._temporaryCount <= 0) {\r\n        this._temporaryCount = 0;\r\n        this._squares.forEach(s => s.isTemporary = false);\r\n      }\r\n      this.updateCount(this._count + this._temporaryCount, this._count + count, true);\r\n    } else {\r\n      if (this._temporaryCount > 0) {\r\n        this.updateCount(this._count + this._temporaryCount, this._count, true);\r\n      }\r\n      this._squares.forEach((s, i) => s.isTemporary = i >= this._count + count);\r\n    }\r\n    this._temporaryCount = count;\r\n    this.updateBoundingBox();\r\n  }\r\n\r\n  /**\r\n   * Reshapes the group based on the starting position specified.\r\n   *\r\n   * @param {number} startingPosition   The starting position to use. By default, the starting position is 0.\r\n   */\r\n  reshape(startingPosition = 0) {\r\n    if (this._startingPosition === startingPosition) {\r\n      return;\r\n    }\r\n    if (startingPosition < 0 || startingPosition >= this._maxCountPerLine) {\r\n      throw new RangeError('Invalid starting position specified.');\r\n    }\r\n    const delta = this._startingPosition - startingPosition;\r\n    const count = Math.min(Math.abs(delta), this._count);\r\n\r\n    if (delta > 0) { // Add squares on the first line.\r\n      const othersSquares = this._squares.slice(0, this._squares.length - count);\r\n      const squaresToModify = this._squares.slice(this._squares.length - count);\r\n      squaresToModify.forEach((square, i) => {\r\n        square.position = this.getSquarePosition(i + startingPosition);\r\n      });\r\n      this._squares = squaresToModify.concat(othersSquares);\r\n    } else { // Remove squares on the first line.\r\n      const othersSquares = this._squares.slice(count);\r\n      const squaresToModify = this._squares.slice(0, count);\r\n      squaresToModify.forEach((square, i) => {\r\n        square.position = this.getSquarePosition(i + startingPosition + othersSquares.length);\r\n      });\r\n      this._squares = othersSquares.concat(squaresToModify);\r\n    }\r\n    this._startingPosition = startingPosition;\r\n    this.updateBoundingBox();\r\n  }\r\n\r\n  /**\r\n   * Gets a square position.\r\n   *\r\n   * @param {number} index    The index of the square.\r\n   * @returns {Point}         The position of square.\r\n   */\r\n  private getSquarePosition(index: number): Point {\r\n    const currentPoint = {\r\n      x: this._position.x,\r\n      y: this._position.y\r\n    };\r\n\r\n    // If this is a change of line...\r\n    if (Math.floor(index / this._maxCountPerLine) > 0) {\r\n      const lineOffset = this._sideLength * Math.floor(index / this._maxCountPerLine);\r\n      if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\r\n        currentPoint.y += lineOffset;\r\n      } else {\r\n        currentPoint.x += lineOffset;\r\n      }\r\n    }\r\n    const offset = this._sideLength * (index % this._maxCountPerLine);\r\n    if (this._orientation === PolygonsGroupOrientation.HORIZONTAL) {\r\n      currentPoint.x += offset;\r\n    } else {\r\n      currentPoint.y += offset;\r\n    }\r\n    return currentPoint;\r\n  }\r\n\r\n  private updateCount(currentCount, newCount, isTemporary = false) {\r\n    if (currentCount > newCount) { // Remove extra squares.\r\n      this._squares = this._squares.slice(0, newCount);\r\n    } else { // Add new squares.\r\n      this._squares = this._squares.concat(\r\n        range(currentCount + this._startingPosition,\r\n          newCount + this._startingPosition)\r\n          .map(i => {\r\n            const square = new Square(this.getSquarePosition(i), this._sideLength);\r\n            square.isTemporary = isTemporary;\r\n            return square;\r\n          })\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the bounding box.\r\n   */\r\n  private updateBoundingBox() {\r\n    this._boundingBox = this.getBoundingBox({\r\n      x: this._position.x,\r\n      y: this._position.y\r\n    });\r\n    this.updateBoundary();\r\n  }\r\n}\r\n","import { PolygonsGroupConfig } from '../geometry/polygons-group-configs';\r\nimport { SquaresGroup } from '../geometry/squares-group';\r\nimport { D3Selection } from '../utils/types';\r\n\r\nimport { BudgetElement } from './budget-element';\r\nimport { BudgetElementConfig } from './budget-element-config';\r\nimport { BudgetElementVisitor } from './visitors/budget-element-visitor';\r\n\r\nexport class SimpleBudgetElement extends BudgetElement {\r\n  readonly initialAmount: number;\r\n\r\n  private readonly _group: SquaresGroup;\r\n  private _hasFocus: boolean;\r\n  private _svgElement: D3Selection;\r\n\r\n  constructor(config: BudgetElementConfig, amount = 0, polygonsGroupConfig: PolygonsGroupConfig) {\r\n    super(config);\r\n    this.initialAmount = amount;\r\n    this._group = new SquaresGroup(Math.round(amount / this._minAmount), polygonsGroupConfig);\r\n    this._hasFocus = false;\r\n    this.isMutable = config.isMutable;\r\n  }\r\n\r\n  get activeLevel(): number {\r\n    return Math.min(this._level, this._activeLevel);\r\n  }\r\n\r\n  set activeLevel(level: number) {\r\n    if (level < 0) {\r\n      throw new RangeError('Invalid level specified.');\r\n    }\r\n    if (this._activeLevel === level) {\r\n      return;\r\n    }\r\n    this._activeLevel = level;\r\n    this._hasFocus = false;\r\n  }\r\n\r\n  get hasFocus(): boolean {\r\n    return this._hasFocus;\r\n  }\r\n\r\n  set hasFocus(hasFocus: boolean) {\r\n    this._hasFocus = hasFocus;\r\n    this._group.selectionCount = 0;\r\n  }\r\n\r\n  get level(): number {\r\n    return this._level;\r\n  }\r\n\r\n  set level(level: number) {\r\n    if (level < 0) {\r\n      level = 0;\r\n    }\r\n    this._level = level;\r\n  }\r\n\r\n  get polygonsGroup(): SquaresGroup {\r\n    return this._group;\r\n  }\r\n\r\n  get svgElement(): D3Selection {\r\n    return this._svgElement;\r\n  }\r\n\r\n  set svgElement(svgElement: D3Selection) {\r\n    if (!svgElement) {\r\n      throw ReferenceError('The specified element is undefined.');\r\n    }\r\n    this._svgElement = svgElement;\r\n    this._svgElement.append('g')\r\n      .attr('class', 'squares');\r\n    this._svgElement.append('polygon')\r\n      .attr('class', `boundary boundary${this.level}`);\r\n  }\r\n\r\n  accept(visitor: BudgetElementVisitor) {\r\n    visitor.visitSimpleBudgetElement(this);\r\n  }\r\n\r\n  reset() {\r\n    const isMutable = this.isMutable;\r\n    this.isMutable = true;\r\n    this.amount = this.initialAmount;\r\n    this.isMutable = isMutable;\r\n  }\r\n}\r\n","import { descending } from 'd3-array';\r\n\r\nimport { Config } from '../config';\r\nimport { PolygonsGroupConfig } from '../geometry/polygons-group-configs';\r\n\r\nimport { isBudgetConfig, BudgetAdjustment, BudgetConfig } from './budget-config';\r\nimport { BudgetElement } from './budget-element';\r\nimport { BudgetElementConfig, BudgetElementType } from './budget-element-config';\r\nimport { BudgetElementGroup } from './budget-element-group';\r\nimport { SimpleBudgetElement } from './simple-budget-element';\r\n\r\n/**\r\n * The possible state of a budget.\r\n */\r\nexport enum BudgetState {\r\n  BALANCED = 'balanced',\r\n  DEFICIT = 'deficit',\r\n  SURPLUS = 'surplus'\r\n}\r\n\r\n/**\r\n * The budget summary.\r\n */\r\nexport interface BudgetSummary {\r\n  delta: number;\r\n  incomesAmount: number;\r\n  spendingsAmount: number;\r\n  state: BudgetState;\r\n}\r\n\r\n/**\r\n * Defines a budget.\r\n */\r\nexport class Budget {\r\n  readonly year: number;\r\n  readonly adjustments: BudgetAdjustment[] = [];\r\n  readonly incomes: BudgetElement[] = [];\r\n  readonly spendings: BudgetElement[] = [];\r\n  readonly minAmount: number;\r\n\r\n  private static _amountStack = [];\r\n  private readonly _polygonsGroupConfig: PolygonsGroupConfig;\r\n\r\n  /**\r\n   * Initializes a new instance of the Budget class.\r\n   *\r\n   * @param {BudgetConfig} budgetConfig                   The budget configuration to use to initialize a budget.\r\n   * @param {number} [minAmount]                          The min amount to use. By default, the budget uses the min\r\n   *                                                      amount specified in the Config class.\r\n   * @param {PolygonsGroupConfig} [polygonsGroupConfig]   The configuration to use for the polygons group.\r\n   */\r\n  constructor(budgetConfig: BudgetConfig, minAmount: number = Config.MIN_AMOUNT,\r\n              polygonsGroupConfig: PolygonsGroupConfig = Config.DEFAULT_POLYGONS_GROUP_CONFIG) {\r\n    if (!isBudgetConfig(budgetConfig)) {\r\n      throw new TypeError('Invalid configuration specified.');\r\n    }\r\n    if (minAmount <= 0) {\r\n      throw new RangeError('The min amount must be greater than 0.');\r\n    }\r\n    this.minAmount = minAmount;\r\n    this.year = budgetConfig.year;\r\n    this._polygonsGroupConfig = polygonsGroupConfig;\r\n\r\n    this.adjustments = budgetConfig.adjustments.map(a => {\r\n      a.amount = Math.round(a.amount / minAmount) * minAmount;\r\n      return a;\r\n    });\r\n\r\n    const initialize = (e, type, elements) => {\r\n      if (e.children && e.children.length > 0) {\r\n        const group = new BudgetElementGroup(this.getBudgetElementConfig(e, type), this._polygonsGroupConfig);\r\n        e.children.forEach(c => this.initializeBudgetElement(c, type, group));\r\n        elements.push(group);\r\n      } else {\r\n        elements.push(new SimpleBudgetElement(this.getBudgetElementConfig(e, type), e.amount,\r\n          this._polygonsGroupConfig));\r\n      }\r\n      elements.sort((a, b) => descending(a.amount, b.amount));\r\n    };\r\n    budgetConfig.incomes.forEach(e => initialize(e, BudgetElementType.INCOME, this.incomes));\r\n    budgetConfig.spendings.forEach(e => initialize(e, BudgetElementType.SPENDING, this.spendings));\r\n  }\r\n\r\n  /**\r\n   * Gets the elements of the budgets sorted in descending order.\r\n   *\r\n   * @returns {BudgetElement[]}   An array that contains the incomes and the spendings of the budget.\r\n   */\r\n  get elements(): BudgetElement[] {\r\n   return this.incomes.concat(this.spendings)\r\n     .sort((a, b) => descending(a.amount, b.amount));\r\n  }\r\n\r\n  /**\r\n   * Gets the the budget summary (include the temporary amounts).\r\n   *\r\n   * @returns {BudgetSummary}       The summary of the budget.\r\n   */\r\n  get summary(): BudgetSummary {\r\n    let incomesAmount = this.incomes.reduce(\r\n      (total, income) => total + income.amount + income.temporaryAmount, 0);\r\n    let spendingsAmount = this.spendings.reduce(\r\n      (total, spending) => total + spending.amount + spending.temporaryAmount, 0);\r\n\r\n    this.adjustments.forEach(a => {\r\n      switch (a.type) {\r\n        case BudgetElementType.INCOME:\r\n          incomesAmount += a.amount;\r\n          break;\r\n        case BudgetElementType.SPENDING:\r\n          spendingsAmount += a.amount;\r\n      }\r\n    });\r\n\r\n    const delta = incomesAmount - spendingsAmount;\r\n    let state = BudgetState.BALANCED;\r\n    if (delta < 0) {\r\n      state = BudgetState.DEFICIT;\r\n    } else if (delta > 0) {\r\n       state = BudgetState.SURPLUS;\r\n    }\r\n    return {\r\n      delta: delta,\r\n      incomesAmount: incomesAmount,\r\n      spendingsAmount: spendingsAmount,\r\n      state: state\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Gets the element associated with the name specified.\r\n   *\r\n   * @param {string} name         The name associated with the element to retrieve.\r\n   * @returns {BudgetElement}     The budget element associated with the name specified.\r\n   *                              If the name specified doesn't match with an element,\r\n   *                              UNDEFINED is returned.\r\n   */\r\n  getElementByName(name: string): BudgetElement {\r\n    function getElement(e) {\r\n      if (e.name === name) {\r\n        return e;\r\n      }\r\n      if (e instanceof BudgetElementGroup && e.children && e.children.length !== 0) {\r\n        let element = undefined;\r\n        e.children.some(c => {\r\n          element = getElement(c);\r\n          return element;\r\n        });\r\n        return element;\r\n      }\r\n    }\r\n\r\n    let element = undefined;\r\n    this.elements.some(e => {\r\n      element = getElement(e);\r\n      return element;\r\n    });\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Gets the budget element configuration of the specified element.\r\n   *\r\n   * @param element                     The element to use to retrieved the configuration associated.\r\n   * @param {BudgetElementType} type    The type of the element.\r\n   * @returns {BudgetElementConfig}     The configuration associated with the element specified.\r\n   */\r\n  private getBudgetElementConfig(element: any, type: BudgetElementType): BudgetElementConfig {\r\n    return {\r\n      description: element.description || '',\r\n      feedbackMessages: element.feedback || [],\r\n      isMutable: element.isMutable !== undefined ? element.isMutable : true,\r\n      minAmount: this.minAmount,\r\n      name: element.name,\r\n      type: type,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialize a budget element.\r\n   *\r\n   * @param data                            The data to use to initialize the element.\r\n   * @param {BudgetElementType} type        The budget element type to use.\r\n   * @param {BudgetElementGroup} parent     The parent of the element to initialize.\r\n   */\r\n  private initializeBudgetElement(data: any, type: BudgetElementType, parent: BudgetElementGroup) {\r\n    if (data.children && data.children.length > 0) {\r\n      Budget._amountStack.push(0);\r\n      const group = new BudgetElementGroup(this.getBudgetElementConfig(data, type), this._polygonsGroupConfig);\r\n      data.children.forEach(c => this.initializeBudgetElement(c, type, group));\r\n\r\n      const totalAmount = Budget._amountStack[Budget._amountStack.length - 1];\r\n      if (parent) {\r\n       if (this.isAcceptableAmount(group.amount) && group.children.length > 1) {\r\n         parent.addChild(group);\r\n       } else if (this.isAcceptableAmount(totalAmount)) {\r\n         parent.addChild(new SimpleBudgetElement(this.getBudgetElementConfig(data, type), totalAmount,\r\n           this._polygonsGroupConfig));\r\n       }\r\n      }\r\n      Budget._amountStack.pop();\r\n      if (Budget._amountStack.length > 0) {\r\n        Budget._amountStack[Budget._amountStack.length - 1] += totalAmount;\r\n      }\r\n    } else if (parent && (this.isAcceptableAmount(data.amount) || data.mustBeKeep)) {\r\n      if (Budget._amountStack.length > 0) {\r\n        Budget._amountStack[Budget._amountStack.length - 1] += data.amount;\r\n      }\r\n      parent.addChild(new SimpleBudgetElement(this.getBudgetElementConfig(data, type), data.amount,\r\n        this._polygonsGroupConfig));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicates if the specified amount is acceptable based on the min amount of the budget.\r\n   *\r\n   * @param {number} amount     The amount to validate.\r\n   * @returns {boolean}         TRUE if the budget is acceptable. FALSE otherwise.\r\n   */\r\n  private isAcceptableAmount(amount: number) {\r\n    return Math.round(amount / this.minAmount) > 0;\r\n  }\r\n}\r\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('d3-collection'), require('d3-selection')) :\n  typeof define === 'function' && define.amd ? define(['d3-collection', 'd3-selection'], factory) :\n  (global.d3 = global.d3 || {}, global.d3.tip = factory(global.d3,global.d3));\n}(this, (function (d3Collection,d3Selection) { 'use strict';\n\n  /**\n   * d3.tip\n   * Copyright (c) 2013-2017 Justin Palmer\n   *\n   * Tooltips for d3.js SVG visualizations\n   */\n  // Public - constructs a new tooltip\n  //\n  // Returns a tip\n  function index() {\n    var direction   = d3TipDirection,\n        offset      = d3TipOffset,\n        html        = d3TipHTML,\n        rootElement = document.body,\n        node        = initNode(),\n        svg         = null,\n        point       = null,\n        target      = null;\n\n    function tip(vis) {\n      svg = getSVGNode(vis);\n      if (!svg) return\n      point = svg.createSVGPoint();\n      rootElement.appendChild(node);\n    }\n\n    // Public - show the tooltip on the screen\n    //\n    // Returns a tip\n    tip.show = function() {\n      var args = Array.prototype.slice.call(arguments);\n      if (args[args.length - 1] instanceof SVGElement) target = args.pop();\n\n      var content = html.apply(this, args),\n          poffset = offset.apply(this, args),\n          dir     = direction.apply(this, args),\n          nodel   = getNodeEl(),\n          i       = directions.length,\n          coords,\n          scrollTop  = document.documentElement.scrollTop ||\n        rootElement.scrollTop,\n          scrollLeft = document.documentElement.scrollLeft ||\n        rootElement.scrollLeft;\n\n      nodel.html(content)\n        .style('opacity', 1).style('pointer-events', 'all');\n\n      while (i--) nodel.classed(directions[i], false);\n      coords = directionCallbacks.get(dir).apply(this);\n      nodel.classed(dir, true)\n        .style('top', (coords.top + poffset[0]) + scrollTop + 'px')\n        .style('left', (coords.left + poffset[1]) + scrollLeft + 'px');\n\n      return tip\n    };\n\n    // Public - hide the tooltip\n    //\n    // Returns a tip\n    tip.hide = function() {\n      var nodel = getNodeEl();\n      nodel.style('opacity', 0).style('pointer-events', 'none');\n      return tip\n    };\n\n    // Public: Proxy attr calls to the d3 tip container.\n    // Sets or gets attribute value.\n    //\n    // n - name of the attribute\n    // v - value of the attribute\n    //\n    // Returns tip or attribute value\n    // eslint-disable-next-line no-unused-vars\n    tip.attr = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().attr(n)\n      }\n\n      var args =  Array.prototype.slice.call(arguments);\n      d3Selection.selection.prototype.attr.apply(getNodeEl(), args);\n      return tip\n    };\n\n    // Public: Proxy style calls to the d3 tip container.\n    // Sets or gets a style value.\n    //\n    // n - name of the property\n    // v - value of the property\n    //\n    // Returns tip or style property value\n    // eslint-disable-next-line no-unused-vars\n    tip.style = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().style(n)\n      }\n\n      var args = Array.prototype.slice.call(arguments);\n      d3Selection.selection.prototype.style.apply(getNodeEl(), args);\n      return tip\n    };\n\n    // Public: Set or get the direction of the tooltip\n    //\n    // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n    //     sw(southwest), ne(northeast) or se(southeast)\n    //\n    // Returns tip or direction\n    tip.direction = function(v) {\n      if (!arguments.length) return direction\n      direction = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: Sets or gets the offset of the tip\n    //\n    // v - Array of [x, y] offset\n    //\n    // Returns offset or\n    tip.offset = function(v) {\n      if (!arguments.length) return offset\n      offset = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: sets or gets the html value of the tooltip\n    //\n    // v - String value of the tip\n    //\n    // Returns html value or tip\n    tip.html = function(v) {\n      if (!arguments.length) return html\n      html = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: sets or gets the root element anchor of the tooltip\n    //\n    // v - root element of the tooltip\n    //\n    // Returns root node of tip\n    tip.rootElement = function(v) {\n      if (!arguments.length) return rootElement\n      rootElement = v == null ? v : functor(v);\n\n      return tip\n    };\n\n    // Public: destroys the tooltip and removes it from the DOM\n    //\n    // Returns a tip\n    tip.destroy = function() {\n      if (node) {\n        getNodeEl().remove();\n        node = null;\n      }\n      return tip\n    };\n\n    function d3TipDirection() { return 'n' }\n    function d3TipOffset() { return [0, 0] }\n    function d3TipHTML() { return ' ' }\n\n    var directionCallbacks = d3Collection.map({\n          n:  directionNorth,\n          s:  directionSouth,\n          e:  directionEast,\n          w:  directionWest,\n          nw: directionNorthWest,\n          ne: directionNorthEast,\n          sw: directionSouthWest,\n          se: directionSouthEast\n        }),\n        directions = directionCallbacks.keys();\n\n    function directionNorth() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.n.y - node.offsetHeight,\n        left: bbox.n.x - node.offsetWidth / 2\n      }\n    }\n\n    function directionSouth() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.s.y,\n        left: bbox.s.x - node.offsetWidth / 2\n      }\n    }\n\n    function directionEast() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.e.y - node.offsetHeight / 2,\n        left: bbox.e.x\n      }\n    }\n\n    function directionWest() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.w.y - node.offsetHeight / 2,\n        left: bbox.w.x - node.offsetWidth\n      }\n    }\n\n    function directionNorthWest() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.nw.y - node.offsetHeight,\n        left: bbox.nw.x - node.offsetWidth\n      }\n    }\n\n    function directionNorthEast() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.ne.y - node.offsetHeight,\n        left: bbox.ne.x\n      }\n    }\n\n    function directionSouthWest() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.sw.y,\n        left: bbox.sw.x - node.offsetWidth\n      }\n    }\n\n    function directionSouthEast() {\n      var bbox = getScreenBBox(this);\n      return {\n        top:  bbox.se.y,\n        left: bbox.se.x\n      }\n    }\n\n    function initNode() {\n      var div = d3Selection.select(document.createElement('div'));\n      div\n        .style('position', 'absolute')\n        .style('top', 0)\n        .style('opacity', 0)\n        .style('pointer-events', 'none')\n        .style('box-sizing', 'border-box');\n\n      return div.node()\n    }\n\n    function getSVGNode(element) {\n      var svgNode = element.node();\n      if (!svgNode) return null\n      if (svgNode.tagName.toLowerCase() === 'svg') return svgNode\n      return svgNode.ownerSVGElement\n    }\n\n    function getNodeEl() {\n      if (node == null) {\n        node = initNode();\n        // re-add node to DOM\n        rootElement.appendChild(node);\n      }\n      return d3Selection.select(node)\n    }\n\n    // Private - gets the screen coordinates of a shape\n    //\n    // Given a shape on the screen, will return an SVGPoint for the directions\n    // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n    // nw(northwest), sw(southwest).\n    //\n    //    +-+-+\n    //    |   |\n    //    +   +\n    //    |   |\n    //    +-+-+\n    //\n    // Returns an Object {n, s, e, w, nw, sw, ne, se}\n    function getScreenBBox(targetShape) {\n      var targetel   = target || targetShape;\n\n      while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n        targetel = targetel.parentNode;\n      }\n\n      var bbox       = {},\n          matrix     = targetel.getScreenCTM(),\n          tbbox      = targetel.getBBox(),\n          width      = tbbox.width,\n          height     = tbbox.height,\n          x          = tbbox.x,\n          y          = tbbox.y;\n\n      point.x = x;\n      point.y = y;\n      bbox.nw = point.matrixTransform(matrix);\n      point.x += width;\n      bbox.ne = point.matrixTransform(matrix);\n      point.y += height;\n      bbox.se = point.matrixTransform(matrix);\n      point.x -= width;\n      bbox.sw = point.matrixTransform(matrix);\n      point.y -= height / 2;\n      bbox.w = point.matrixTransform(matrix);\n      point.x += width;\n      bbox.e = point.matrixTransform(matrix);\n      point.x -= width / 2;\n      point.y -= height / 2;\n      bbox.n = point.matrixTransform(matrix);\n      point.y += height;\n      bbox.s = point.matrixTransform(matrix);\n\n      return bbox\n    }\n\n    // Private - replace D3JS 3.X d3.functor() function\n    function functor(v) {\n      return typeof v === 'function' ? v : function() {\n        return v\n      }\n    }\n\n    return tip\n  }\n\n  return index;\n\n})));\n","/**\r\n * Defines an event.\r\n *\r\n * @see http://stackoverflow.com/questions/12881212/does-typescript-support-events-on-classes\r\n */\r\nexport class Event<T> {\r\n  private _handlers: { handler: {(data?: T): void}, context: any }[] = [];\r\n\r\n  /**\r\n   * Registers an handler.\r\n   *\r\n   * @param handler       Handler to register.\r\n   * @param [context]     The context to use with the handler.\r\n   */\r\n  register(handler: { (data?: T): void }, context?: any) {\r\n    if (!context) {\r\n      context = this;\r\n    }\r\n    this._handlers.push({ handler: handler, context: context });\r\n  }\r\n\r\n  /**\r\n   * Unregisters an handler.\r\n   *\r\n   * @param handler       Handler to unregister.\r\n   * @param [context]     The context associated with the handler to unregister.\r\n   */\r\n  unregister(handler: { (data?: T): void }, context?: any) {\r\n    if (!context) {\r\n      context = this;\r\n    }\r\n    this._handlers = this._handlers.filter(h => h.handler !== handler && h.context !== context);\r\n  }\r\n\r\n  /**\r\n   * Invokes the event.\r\n   *\r\n   * @param [data]        The data to pass to the handlers.\r\n   */\r\n   invoke(data?: T) {\r\n    this._handlers.slice(0).forEach(h => h.handler.call(h.context, data));\r\n  }\r\n}\r\n","import { BudgetElement } from '../budget-element';\r\nimport { Layout } from '../layouts/layout';\r\nimport { RenderingVisitor } from '../visitors/rendering-visitor';\r\n\r\nimport { UndoableCommand } from './command';\r\n\r\nexport class AddCommand implements UndoableCommand {\r\n  readonly element: BudgetElement;\r\n  readonly amount: number;\r\n\r\n  private readonly _rendering: RenderingVisitor;\r\n  private readonly _layout: Layout;\r\n  private _isFirstTime = true;\r\n\r\n  constructor(element: BudgetElement, rendering: RenderingVisitor, layout: Layout) {\r\n    if (!element.isMutable) {\r\n      throw new Error('The specified element cannot be modified.');\r\n    }\r\n    this.amount = element.temporaryAmount;\r\n    this.element = element;\r\n    this._rendering = rendering;\r\n    this._layout = layout;\r\n  }\r\n\r\n  execute() {\r\n    this.element.temporaryAmount = 0;\r\n    this.element.amount += this.amount;\r\n    this.update();\r\n  }\r\n\r\n  undo() {\r\n    this.element.amount -= this.amount;\r\n    this.update();\r\n  }\r\n\r\n  private update() {\r\n    this.element.selectedAmount = 0;\r\n    this._rendering.transitionDuration = 0;\r\n    this.element.accept(this._rendering);\r\n    this._rendering.resetTransitionDuration();\r\n\r\n    if (this._isFirstTime) {\r\n      this.element.selectedAmount = this.amount;\r\n    }\r\n    const root = this.element.root;\r\n    if (this._isFirstTime || root !== this.element) {\r\n      root.accept(this._rendering);\r\n    }\r\n    this._layout.render();\r\n    this._isFirstTime = false;\r\n  }\r\n}\r\n","export interface Command {\r\n  execute();\r\n}\r\n\r\nexport interface UndoableCommand extends Command {\r\n  undo();\r\n}\r\n\r\nexport function isCommand(command: any): command is Command {\r\n  return command !== undefined && command.execute !== undefined;\r\n}\r\n\r\nexport function isUndoableCommand(command: any): command is UndoableCommand {\r\n  return isCommand(command) && (command as any).undo !== undefined;\r\n}\r\n","import { Event } from '../../utils/event';\r\n\r\nimport { isUndoableCommand, Command, UndoableCommand } from './command';\r\n\r\nexport class CommandInvoker {\r\n  readonly onCommandInvoked: Event<Command> = new Event<Command>();\r\n\r\n  private _commands: UndoableCommand[] = [];\r\n  private _currentIndex = -1;\r\n\r\n  get canUndo(): boolean {\r\n    return this._commands.length >= 1 && this._currentIndex >= 0;\r\n  }\r\n\r\n  get canRedo(): boolean {\r\n    return this._commands.length >= 1 && this._currentIndex < this._commands.length - 1;\r\n  }\r\n\r\n  undo() {\r\n    if (this.canUndo) {\r\n      this._commands[this._currentIndex--].undo();\r\n      this.onCommandInvoked.invoke();\r\n    }\r\n  }\r\n\r\n  redo() {\r\n    if (this.canRedo) {\r\n      this._commands[++this._currentIndex].execute();\r\n      this.onCommandInvoked.invoke();\r\n    }\r\n  }\r\n\r\n  invoke(command: Command, isSavingCommand = true) {\r\n    if (isSavingCommand && isUndoableCommand(command)) {\r\n      this._commands = this._commands.slice(0, ++this._currentIndex);\r\n      this._commands.push(command);\r\n    }\r\n    command.execute();\r\n    this.onCommandInvoked.invoke(command);\r\n  }\r\n}\r\n","import { BudgetElement } from '../budget-element';\r\nimport { Layout } from '../layouts/layout';\r\nimport { RenderingVisitor } from '../visitors/rendering-visitor';\r\n\r\nimport { UndoableCommand } from './command';\r\n\r\nexport class DeleteCommand implements UndoableCommand {\r\n  readonly amount: number;\r\n  readonly element: BudgetElement;\r\n\r\n  private readonly _rendering: RenderingVisitor;\r\n  private readonly _layout: Layout;\r\n\r\n  constructor(element: BudgetElement, rendering: RenderingVisitor, layout: Layout) {\r\n    if (!element.isMutable) {\r\n      throw new Error('The specified element cannot be modified.');\r\n    }\r\n    this.amount = Math.abs(element.temporaryAmount);\r\n    this.element = element;\r\n    this._rendering = rendering;\r\n    this._layout = layout;\r\n  }\r\n\r\n  execute() {\r\n    this.element.temporaryAmount = 0;\r\n    this.element.amount -= this.amount;\r\n    this.update();\r\n  }\r\n\r\n  undo() {\r\n    this.element.amount += this.amount;\r\n    this.update();\r\n  }\r\n\r\n  private update() {\r\n    this._rendering.transitionDuration = 0;\r\n    this.element.accept(this._rendering);\r\n    this._rendering.resetTransitionDuration();\r\n\r\n    const root = this.element.root;\r\n    if (this.element !== root) {\r\n      root.accept(this._rendering);\r\n    }\r\n    this._layout.render();\r\n  }\r\n}\r\n","import 'd3-transition';\r\n\r\nimport { Config } from '../../config';\r\nimport { BudgetElement } from '../budget-element';\r\nimport { BudgetElementGroup } from '../budget-element-group';\r\nimport { SimpleBudgetElement } from '../simple-budget-element';\r\n\r\nimport { BudgetElementVisitor } from './budget-element-visitor';\r\n\r\nexport class RenderingVisitor implements BudgetElementVisitor {\r\n  private readonly _defaultTransitionDuration: number;\r\n  private readonly _levelStack = [];\r\n  private _transitionDuration: number;\r\n\r\n  constructor(defaultTransitionDuration: number) {\r\n    this._defaultTransitionDuration = this.transitionDuration = defaultTransitionDuration;\r\n  }\r\n\r\n  get transitionDuration(): number {\r\n    return this._transitionDuration;\r\n  }\r\n\r\n  set transitionDuration(duration: number) {\r\n    if (duration < 0) {\r\n      throw new RangeError('The transition duration must be greater or equal to 0.');\r\n    }\r\n    this._transitionDuration = duration;\r\n  }\r\n\r\n  resetTransitionDuration() {\r\n    this._transitionDuration = this._defaultTransitionDuration;\r\n  }\r\n\r\n  visitBudgetElementGroup(group: BudgetElementGroup) {\r\n    if (this._levelStack.length === 0) { // TODO: Be more efficient!\r\n      group.polygonsGroup.update();\r\n\r\n      const boundingBox = group.polygonsGroup.boundingBox;\r\n      const halfWidth = boundingBox.width / 2;\r\n      group.svgElement.select('.reference-line')\r\n        .transition()\r\n        .duration(this._transitionDuration)\r\n        .style('stroke-dasharray', 1)\r\n        .style('stroke', '#999')\r\n        .style('stroke-width', '1px')\r\n        .attr('x1', halfWidth)\r\n        .attr('y1', 0)\r\n        .attr('x2', halfWidth)\r\n        .attr('y2', boundingBox.height);\r\n    }\r\n    this._levelStack.push(0);\r\n    group.svgElement.selectAll('.empty')\r\n      .remove();\r\n\r\n    RenderingVisitor.updateBoundary(group);\r\n    group.children.forEach((c, i) => {\r\n      c.accept(this);\r\n      c.svgElement.classed(`group${i}`, (c.level - 1 === c.activeLevel && Config.IS_USING_DISTINCT_COLORS))\r\n        .transition()\r\n        .duration(this._transitionDuration)\r\n        .attr('transform',\r\n          `translate(${c.polygonsGroup.translation.x}, ${c.polygonsGroup.translation.y + \r\n          (group.isHovered && group.activeLevel <= group.level ? i * Config.SIDE_LENGTH / 4 : 0)})`);\r\n    });\r\n\r\n    if (group.activeLevel - group.level === 1) {\r\n      const offset = this._levelStack[this._levelStack.length - 1] >= 1 ? 14 : 7;\r\n      const halfOffset = offset / 2;\r\n\r\n      const levelGroup = group.svgElement.select('.level-group');\r\n      levelGroup.select('rect')\r\n        .transition()\r\n        .duration(this._transitionDuration)\r\n        .attr('x', -offset)\r\n        .attr('y', -halfOffset)\r\n        .attr('height', group.polygonsGroup.boundingBox.height + offset)\r\n        .attr('width', offset);\r\n\r\n      levelGroup.select('line')\r\n        .transition()\r\n        .duration(this._transitionDuration)\r\n        .attr('x1', -offset)\r\n        .attr('y1', -halfOffset)\r\n        .attr('x2', -offset)\r\n        .attr('y2', group.polygonsGroup.boundingBox.height + halfOffset);\r\n\r\n      this._levelStack[this._levelStack.length - 1] = 1;\r\n    } else {\r\n      const levelGroup = group.svgElement.select('.level-group');\r\n      levelGroup.select('rect')\r\n        .transition()\r\n        .duration(this._transitionDuration)\r\n        .attr('x', 0)\r\n        .attr('y', 0)\r\n        .attr('height', 0)\r\n        .attr('width', 0);\r\n\r\n      levelGroup.select('line')\r\n        .transition()\r\n        .duration(this._transitionDuration)\r\n        .attr('x1', 0)\r\n        .attr('y1', 0)\r\n        .attr('x2', 0)\r\n        .attr('y2', 0);\r\n    }\r\n    if (group.isActive && group.amount === 0) {\r\n      RenderingVisitor.createEmptyElement(group);\r\n    }\r\n\r\n    const count = this._levelStack.pop();\r\n    if (this._levelStack.length >= 1) {\r\n      this._levelStack[this._levelStack.length - 1] += count;\r\n    }\r\n  }\r\n\r\n  visitSimpleBudgetElement(element: SimpleBudgetElement) {\r\n    const polygons = element.svgElement.select('.squares').selectAll('.square')\r\n      .data(element.polygonsGroup.polygons, d => (d as any).id);\r\n    let selectedAmount = element.selectedAmount;\r\n    element.svgElement.selectAll('.empty')\r\n      .remove();\r\n\r\n    RenderingVisitor.updateBoundary(element);\r\n    polygons.enter()\r\n      .append('polygon')\r\n      .on('animationend', function(d) {\r\n        d.isSelected = false;\r\n        (this as SVGGraphicsElement).classList.remove('selected');\r\n        if (selectedAmount > 0) {\r\n          selectedAmount = 0;\r\n          element.selectedAmount = 0;\r\n        }\r\n      })\r\n      .merge(polygons)\r\n      .attr('class', `square ${element.type}`)\r\n      .classed('focused', element.hasFocus)\r\n      .classed('selected', d => d.isSelected)\r\n      .classed('temporary', d => d.isTemporary)\r\n      .classed('added', d => d.isTemporary && element.temporaryAmount > 0)\r\n      .classed('removed', d => d.isTemporary && element.temporaryAmount < 0)\r\n      .transition()\r\n      .duration(this._transitionDuration)\r\n      .attr('points', d => d.points.map(e => `${e.x} ${e.y}`).join(', '));\r\n\r\n    polygons.exit()\r\n      .remove();\r\n\r\n    if (element.isActive && element.amount === 0) {\r\n      RenderingVisitor.createEmptyElement(element);\r\n    }\r\n  }\r\n\r\n  private static createEmptyElement(element: BudgetElement) {\r\n    const sideLength = element.polygonsGroup.config.sideLength;\r\n    element.svgElement.append('rect')\r\n      .attr('class', 'square empty')\r\n      .attr('x', 0)\r\n      .attr('y', 0)\r\n      .attr('width', sideLength)\r\n      .attr('height', sideLength);\r\n  }\r\n\r\n  private static updateBoundary(element: BudgetElement) {\r\n    element.svgElement.select(`.boundary${element.level}`)\r\n      .attr('points', (element.level - 1 <= element.activeLevel)\r\n        ? element.polygonsGroup.boundary.map(e => `${e.x} ${e.y}`).join(', ')\r\n        : '');\r\n  }\r\n}\r\n","import * as d3 from 'd3-selection';\nimport d3Tip from 'd3-tip';\n\nimport { Config } from '../config';\nimport { PolygonsGroupConfig } from '../geometry/polygons-group-configs';\nimport { Event } from '../utils/event';\nimport { Formatter } from '../utils/formatter';\nimport { D3Selection } from '../utils/types';\n\nimport { Budget } from './budget';\nimport { BudgetElement } from './budget-element';\nimport { BudgetElementGroup } from './budget-element-group';\nimport { AddCommand } from './commands/add-command';\nimport { Command } from './commands/command';\nimport { CommandInvoker } from './commands/command-invoker';\nimport { DeleteCommand } from './commands/delete-command';\nimport { Layout } from './layouts/layout';\nimport { SimpleBudgetElement } from './simple-budget-element';\nimport { BudgetElementVisitor } from './visitors/budget-element-visitor';\nimport { RenderingVisitor } from './visitors/rendering-visitor';\n\nexport class BudgetVisualization {\n  readonly budget: Budget;\n  readonly commandInvoker: CommandInvoker;\n  readonly svgElement: D3Selection;\n  readonly rendering: RenderingVisitor;\n  readonly tip: d3Tip;\n\n  readonly onElementSelected: Event<BudgetElement> = new Event<BudgetElement>();\n  readonly onActionExecuted: Event<Command> = new Event<Command>();\n  readonly onInvalidActionExecuted: Event<BudgetElement> = new Event<BudgetElement>();\n\n  private _layout: Layout;\n  private _isEnabled = true;\n  private _isInitialized = false;\n\n  constructor(budget: Budget, svgElement: D3Selection,\n              layout: Layout, commandInvoker: CommandInvoker = new CommandInvoker(),\n              rendering: RenderingVisitor = new RenderingVisitor(Config.TRANSITION_DURATION)) {\n    this.budget = budget;\n    this.svgElement = svgElement;\n    this._layout = layout;\n    this.commandInvoker = commandInvoker;\n    this.rendering = rendering;\n\n    this.tip = d3Tip()\n      .html(d => {\n        let str = `<strong>${d.name} (${Formatter.formatAmount(d.amount + d.temporaryAmount, layout.locale)})</strong>`;\n        str += d.description ? `<p>${d.description}</p>` : '';\n        return str;\n      });\n    this.commandInvoker.onCommandInvoked.register(command => this.onActionExecuted.invoke(command));\n  }\n\n  set activeLevel(activeLevel: number) {\n    this.budget.elements.forEach(e => {\n      e.activeLevel = activeLevel;\n      e.accept(this.rendering);\n    });\n    this._layout.render();\n  }\n\n  get isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  set isEnabled(isEnabled: boolean) {\n    this._isEnabled = isEnabled;\n    this.svgElement.classed('disabled', !isEnabled);\n\n    if (!isEnabled) {\n      this.budget.elements.forEach(e => {\n        e.hasFocus = false;\n        e.svgElement.classed('hovered', false);\n        e.accept(this.rendering);\n      });\n      this.activeLevel = 0;\n    }\n  }\n\n  get layout(): Layout {\n    return this._layout;\n  }\n\n  initialize() {\n    if (this._isInitialized) {\n      throw new Error('The visualization is already initialized.');\n    }\n    const self = this;\n    let hoveredElement: BudgetElement = undefined;\n    let selectedElement: BudgetElement = undefined;\n\n    this.svgElement.attr('class', 'budget-visualization');\n    this._layout.initialize();\n    this.svgElement.call(this.tip);\n\n    const executeCommand = () => {\n      if (selectedElement !== undefined && selectedElement.temporaryAmount !== 0) {\n        if (selectedElement.isMutable) {\n          if (selectedElement.temporaryAmount > 0) {\n            this.commandInvoker.invoke(new AddCommand(selectedElement, this.rendering, this._layout));\n          } else {\n            this.commandInvoker.invoke(new DeleteCommand(selectedElement, this.rendering, this._layout));\n          }\n        } else {\n          selectedElement.temporaryAmount = 0;\n          this.rendering.transitionDuration = 0;\n          selectedElement.accept(this.rendering);\n          this.rendering.resetTransitionDuration();\n\n          const root = selectedElement.root;\n          if (root !== selectedElement) {\n            root.accept(this.rendering);\n          }\n          this._layout.render();\n          this.onInvalidActionExecuted.invoke(selectedElement);\n        }\n      }\n    };\n\n    // Creation / Deletion\n    d3.select('body')\n      .on('wheel', () => {\n        if (this._isEnabled && selectedElement) {\n          let delta = d3.event.deltaY / 100;\n          delta = (delta >= 0) ? Math.ceil(delta) : Math.floor(delta);\n          selectedElement.temporaryAmount += delta * this.budget.minAmount;\n\n          this.rendering.transitionDuration = 0;\n          selectedElement.root.accept(this.rendering);\n          this.rendering.resetTransitionDuration();\n\n          this._layout.transitionDuration = 0;\n          this._layout.render();\n          this._layout.resetTransitionDuration();\n        }\n      })\n      .on('keydown', () => {\n        if (this._isEnabled && selectedElement) {\n          let isValidKey = false;\n          switch (d3.event.key) {\n            case 'ArrowUp':\n              isValidKey = true;\n              selectedElement.temporaryAmount -= this.budget.minAmount;\n              break;\n            case 'ArrowDown':\n              isValidKey = true;\n              selectedElement.temporaryAmount += this.budget.minAmount;\n              break;\n          }\n          if (!isValidKey) {\n            return;\n          }\n          this.rendering.transitionDuration = 0;\n          selectedElement.root.accept(this.rendering);\n          this.rendering.resetTransitionDuration();\n\n          this._layout.transitionDuration = 0;\n          this._layout.render();\n          this._layout.resetTransitionDuration();\n        }\n      })\n      .on('click', () => {\n        if (this._isEnabled && selectedElement && selectedElement.hasFocus) {\n          selectedElement.hasFocus = false;\n          selectedElement.isHovered = false\n          selectedElement.accept(this.rendering);\n        }\n        executeCommand();\n        selectedElement = undefined;\n      });\n\n    // Events\n    const events = new (class implements BudgetElementVisitor {\n      visitBudgetElementGroup(group: BudgetElementGroup) {\n        this.subscribe(group);\n\n        group.svgElement.select('.level-group')\n          .on('mouseenter', () => {\n            if (!self._isEnabled) {\n              return;\n            }\n            hoveredElement = group;\n            self.tip.direction('w')\n              .offset([0, -8]) // TODO: Put in constant!\n              .attr('class', 'd3-tip level-tip')\n              .show.call(group.svgElement.node(), group);\n          })\n          .on('mouseleave', () => {\n            if (!self._isEnabled) {\n              return;\n            }\n            if (hoveredElement) {\n              hoveredElement.isHovered = false;\n            }\n            hoveredElement = undefined;\n            self.tip.hide();\n          })\n          .on('click', () => {\n            if (!self._isEnabled) {\n              return;\n            }\n            d3.event.stopPropagation();\n            executeCommand();\n            self.tip.hide();\n            group.activeLevel = group.level;\n            group.isHovered = false;\n            group.root.accept(self.rendering);\n            self._layout.render();\n            group.svgElement.classed('hovered', false);\n          });\n        group.children.forEach(c => c.accept(this));\n      }\n\n      visitSimpleBudgetElement(element: SimpleBudgetElement) {\n        this.subscribe(element);\n      }\n\n      subscribe(element: BudgetElement) {\n        if (!element.svgElement) {\n          throw new TypeError('The SVG element is undefined.');\n        }\n\n        function showTooltip() {\n          if (element.level > 0) {\n            self.tip.direction('e')\n              .offset([0, 8])\n              .attr('class', 'd3-tip element-tip')\n              .show.call(element.svgElement.node(), element);\n          }\n        }\n\n        element.svgElement.on('click', () => {\n          if (self._isEnabled && element.isActive) {\n            d3.event.stopPropagation();\n            if (selectedElement && selectedElement !== element && selectedElement.hasFocus) {\n              selectedElement.hasFocus = false;\n              selectedElement.accept(self.rendering);\n              executeCommand();\n            }\n            element.hasFocus = !element.hasFocus;\n            element.accept(self.rendering);\n\n            if (!element.hasFocus) {\n              executeCommand();\n              selectedElement = undefined;\n            } else {\n              selectedElement = element;\n              self.onElementSelected.invoke(element);\n            }\n          }\n        });\n        element.svgElement.on('mouseenter', () => {\n          if (self._isEnabled && element.isActive) {\n            hoveredElement = element;\n            hoveredElement.svgElement.classed('hovered', true);\n            hoveredElement.isHovered = true;\n            self.rendering.transitionDuration = 0;\n            hoveredElement.accept(self.rendering);\n            self.rendering.resetTransitionDuration();\n            showTooltip();\n          }\n        });\n        element.svgElement.on('mouseover', () => {\n          if (self._isEnabled && element.isActive) {\n            hoveredElement = element;\n            hoveredElement.svgElement.classed('hovered', true);\n            hoveredElement.isHovered = true;\n            self.rendering.transitionDuration = 0;\n            hoveredElement.accept(self.rendering);\n            self.rendering.resetTransitionDuration();\n            showTooltip();\n          }\n        });\n        element.svgElement.on('mouseleave', () => {\n          if (self._isEnabled && element.isActive && hoveredElement) {\n            hoveredElement.svgElement.classed('hovered', false);\n            hoveredElement.isHovered = false;\n            self.rendering.transitionDuration = 0;\n            hoveredElement.accept(self.rendering);\n            self.rendering.resetTransitionDuration();\n            hoveredElement = undefined;\n            self.tip.hide();\n          }\n        });\n        element.svgElement.on('dblclick', () => {\n          if (self._isEnabled && element.isActive) {\n            executeCommand();\n            selectedElement = undefined;\n            element.activeLevel += 1;\n            element.root.accept(self.rendering);\n            self._layout.render();\n\n            hoveredElement.svgElement.classed('hovered', false);\n            hoveredElement = undefined;\n            self.tip.hide();\n          }\n        });\n      }\n    });\n\n    // Events subscription\n    this.budget.elements.forEach(e => {\n      e.accept(events);\n      e.accept(this.rendering);\n    });\n\n    // Layout initialisation\n    this._layout.render();\n    this._isInitialized = true;\n  }\n\n  reset() {\n    this.budget.elements.forEach(e => {\n      e.activeLevel = 0;\n      e.reset();\n      e.accept(this.rendering);\n    });\n    this._layout.render();\n  }\n\n  update(layout: Layout, polygonsGroupConfig?: PolygonsGroupConfig) {\n    if (!this._isInitialized) {\n      throw new Error('The visualization is not initialized. Please initialize the visualization first.');\n    }\n    if (polygonsGroupConfig) {\n      const polygonsConfigs = new (class implements BudgetElementVisitor {\n        visitBudgetElementGroup(group: BudgetElementGroup) {\n          group.polygonsGroup.config = polygonsGroupConfig;\n          group.children.forEach(c => c.accept(this));\n        }\n\n        visitSimpleBudgetElement(element: SimpleBudgetElement) {\n          element.polygonsGroup.config = polygonsGroupConfig;\n        }\n      });\n      this.budget.elements.forEach(e => {\n        e.accept(polygonsConfigs);\n        e.accept(this.rendering);\n      });\n    }\n    this._layout = layout;\n    this._layout.initialize();\n    this._layout.render();\n  }\n}\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', 'd3-shape', 'd3-ease', 'd3-array', 'd3-scale', 'd3-selection', 'd3-transition'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('d3-shape'), require('d3-ease'), require('d3-array'), require('d3-scale'), require('d3-selection'), require('d3-transition'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.d3, global.d3, global.d3, global.d3, global.d3, global.d3);\n    global.d3SimpleGauge = mod.exports;\n  }\n})(this, function (exports, _d3Shape, _d3Ease, _d3Array, _d3Scale, _d3Selection) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SimpleGauge = undefined;\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var CONSTANTS = {\n    BAR_WIDTH: 40,\n    CHAR_INSET: 10,\n    EASE_TYPE: _d3Ease.easeElastic,\n    NEEDLE_ANIMATION_DELAY: 0,\n    NEEDLE_ANIMATION_DURATION: 3000,\n    NEEDLE_RADIUS: 15,\n    PAD_RAD: 0.05\n  };\n\n  var percToDeg = function percToDeg(perc) {\n    return perc * 360;\n  };\n  var degToRad = function degToRad(deg) {\n    return deg * Math.PI / 180;\n  };\n  var percToRad = function percToRad(perc) {\n    return degToRad(percToDeg(perc));\n  };\n\n  /**\r\n   * Defines the needle used in the gauge.\r\n   */\n\n  var Needle = function () {\n    /**\r\n     * Initializes a new instance of the Needle class.\r\n     *\r\n     * @param config                      The configuration to use to initialize the needle.\r\n     * @param config.animationDelay       The delay in ms before to start the needle animation.\r\n     * @param config.animationDuration    The duration in ms of the needle animation.\r\n     * @param config.color                The color to use for the needle.\r\n     * @param config.easeType             The ease type to use for the needle animation.\r\n     * @param config.el                   The parent element of the needle.\r\n     * @param config.length               The length of the needle.\r\n     * @param config.percent              The initial percentage to use.\r\n     * @param config.radius               The radius of the needle.\r\n     */\n    function Needle(config) {\n      _classCallCheck(this, Needle);\n\n      this._animationDelay = config.animationDelay;\n      this._animationDuration = config.animationDuration;\n      this._color = config.color;\n      this._easeType = config.easeType;\n      this._el = config.el;\n      this._length = config.length;\n      this._percent = config.percent;\n      this._radius = config.radius;\n      this._initialize();\n    }\n\n    /**\r\n     * Updates the needle position based on the percentage specified.\r\n     *\r\n     * @param percent      The percentage to use.\r\n     */\n\n\n    _createClass(Needle, [{\n      key: 'update',\n      value: function update(percent) {\n        var self = this;\n        this._el.transition().delay(this._animationDelay).ease(this._easeType).duration(this._animationDuration).selectAll('.needle').tween('progress', function () {\n          var thisElement = this;\n          var delta = percent - self._percent;\n          var initialPercent = self._percent;\n          return function (progressPercent) {\n            self._percent = initialPercent + progressPercent * delta;\n            return (0, _d3Selection.select)(thisElement).attr('d', self._getPath(self._percent));\n          };\n        });\n      }\n    }, {\n      key: '_initialize',\n      value: function _initialize() {\n        this._el.append('circle').attr('class', 'needle-center').attr('cx', 0).attr('cy', 0).attr('r', this._radius);\n\n        this._el.append('path').attr('class', 'needle').attr('d', this._getPath(this._percent));\n\n        if (this._color) {\n          this._el.select('.needle-center').style('fill', this._color);\n\n          this._el.select('.needle').style('fill', this._color);\n        }\n      }\n    }, {\n      key: '_getPath',\n      value: function _getPath(percent) {\n        var halfPI = Math.PI / 2;\n        var thetaRad = percToRad(percent / 2); // half circle\n\n        var centerX = 0;\n        var centerY = 0;\n\n        var topX = centerX - this._length * Math.cos(thetaRad);\n        var topY = centerY - this._length * Math.sin(thetaRad);\n\n        var leftX = centerX - this._radius * Math.cos(thetaRad - halfPI);\n        var leftY = centerY - this._radius * Math.sin(thetaRad - halfPI);\n\n        var rightX = centerX - this._radius * Math.cos(thetaRad + halfPI);\n        var rightY = centerY - this._radius * Math.sin(thetaRad + halfPI);\n\n        return 'M ' + leftX + ' ' + leftY + ' L ' + topX + ' ' + topY + ' L ' + rightX + ' ' + rightY;\n      }\n    }]);\n\n    return Needle;\n  }();\n\n  var SimpleGauge = exports.SimpleGauge = function () {\n    /**\r\n     * Initializes a new instance of the SimpleGauge class.\r\n     *\r\n     * @param config                        The configuration to use to initialize the gauge.\r\n     * @param [config.animationDelay]       The delay in ms before to start the needle animation. By default, the value\r\n     *                                      is 0.\r\n     * @param [config.animationDuration]    The duration in ms of the needle animation. By default, the value is 3000.\r\n     * @param [config.barWidth]             The bar width of the gauge. By default, the value is 40.\r\n     * @param [config.chartInset]           The char inset to use. By default, the value is 10.\r\n     * @param [config.easeType]             The ease type to use for the needle animation. By default, the value is\r\n     *                                      \"d3.easeElastic\".\r\n     * @param config.el                     The D3 element to use to create the gauge (must be a group or an SVG element).\r\n     * @param config.height                 The height of the gauge.\r\n     * @param [config.interval]             The interval (min and max values) of the gauge. By default, the interval\r\n     *                                      ia [0, 1].\r\n     * @param [config.needleColor]          The needle color.\r\n     * @param [config.needleRadius]         The radius of the needle. By default, the radius is 15.\r\n     * @param [config.percent]              The percentage to use for the needle position. By default, the value is 0.\r\n     * @param config.sectionsCount          The number of sections in the gauge.\r\n     * @param [config.sectionsColors]       The color to use for each section.\r\n     * @param config.width                  The width of the gauge.\r\n     */\n    function SimpleGauge(config) {\n      _classCallCheck(this, SimpleGauge);\n\n      if (!config.el) {\n        throw new Error('The element must be valid.');\n      }\n      if (isNaN(config.height) || config.height <= 0) {\n        throw new RangeError('The height must be a positive number.');\n      }\n      if (isNaN(config.sectionsCount) || config.sectionsCount <= 0) {\n        throw new RangeError('The sections count must be a positive number.');\n      }\n      if (isNaN(config.width) || config.width <= 0) {\n        throw new RangeError('The width must be a positive number.');\n      }\n      if (config.animationDelay !== undefined && (isNaN(config.animationDelay) || config.animationDelay < 0)) {\n        throw new RangeError('The transition delay must be greater or equal to 0.');\n      }\n      if (config.animationDuration !== undefined && (isNaN(config.animationDuration) || config.animationDuration < 0)) {\n        throw new RangeError('The transition duration must be greater or equal to 0.');\n      }\n      if (config.barWidth !== undefined && (isNaN(config.barWidth) || config.barWidth <= 0)) {\n        throw new RangeError('The bar width must be a positive number.');\n      }\n      if (config.chartInset !== undefined && (isNaN(config.chartInset) || config.chartInset < 0)) {\n        throw new RangeError('The chart inset must be greater or equal to 0.');\n      }\n      if (config.needleRadius !== undefined && (isNaN(config.needleRadius) || config.needleRadius < 0)) {\n        throw new RangeError('The needle radius must be greater or equal to 0.');\n      }\n      if (config.sectionsColors !== undefined && config.sectionsColors.length !== config.sectionsCount) {\n        throw new RangeError('The sectionsColors length must match with the sectionsCount.');\n      }\n\n      this._animationDelay = config.animationDelay !== undefined ? config.animationDelay : CONSTANTS.NEEDLE_ANIMATION_DELAY;\n\n      this._animationDuration = config.animationDuration !== undefined ? config.animationDuration : CONSTANTS.NEEDLE_ANIMATION_DURATION;\n\n      this._chartInset = config.chartInset !== undefined ? config.chartInset : CONSTANTS.CHAR_INSET;\n\n      this._barWidth = config.barWidth || CONSTANTS.BAR_WIDTH;\n      this._easeType = config.easeType || CONSTANTS.EASE_TYPE;\n      this._el = config.el;\n      this._height = config.height;\n      this._needleRadius = config.needleRadius !== undefined ? config.needleRadius : CONSTANTS.NEEDLE_RADIUS;\n      this._sectionsCount = config.sectionsCount;\n      this._width = config.width;\n      this._sectionsColors = config.sectionsColors;\n      this._needleColor = config.needleColor;\n\n      this.interval = config.interval || [0, 1];\n      this.percent = config.percent !== undefined ? config.percent : 0;\n\n      this._initialize();\n    }\n\n    /**\r\n     * Gets the interval of the gauge.\r\n     *\r\n     * @returns {Array}   An array of two elements that represents the min and the max values of the gauge.\r\n     */\n\n\n    _createClass(SimpleGauge, [{\n      key: '_initialize',\n\n\n      /**\r\n       * Initializes the simple gauge.\r\n       *\r\n       * @private\r\n       */\n      value: function _initialize() {\n        var _this = this;\n\n        var sectionPercentage = 1 / this._sectionsCount / 2;\n        var padRad = CONSTANTS.PAD_RAD;\n\n        var totalPercent = 0.75; // Start at 270deg\n        var radius = Math.min(this._width, this._height * 2) / 2;\n\n        this._chart = this._el.append('g').attr('transform', 'translate(' + this._width / 2 + ', ' + this._height + ')');\n\n        this._arcs = this._chart.selectAll('.arc').data((0, _d3Array.range)(1, this._sectionsCount + 1)).enter().append('path').attr('class', function (sectionIndex) {\n          return 'arc chart-color' + sectionIndex;\n        }).attr('d', function (sectionIndex) {\n          var arcStartRad = percToRad(totalPercent);\n          var arcEndRad = arcStartRad + percToRad(sectionPercentage);\n          totalPercent += sectionPercentage;\n\n          var startPadRad = sectionIndex === 0 ? 0 : padRad / 2;\n          var endPadRad = sectionIndex === _this._sectionsCount ? 0 : padRad / 2;\n          var arc = (0, _d3Shape.arc)().outerRadius(radius - _this._chartInset).innerRadius(radius - _this._chartInset - _this._barWidth).startAngle(arcStartRad + startPadRad).endAngle(arcEndRad - endPadRad);\n\n          return arc(_this);\n        });\n\n        if (this._sectionsColors) {\n          this._arcs.style('fill', function (sectionIndex) {\n            return _this._sectionsColors[sectionIndex - 1];\n          });\n        }\n\n        this._needle = new Needle({\n          animationDelay: this._animationDelay,\n          animationDuration: this._animationDuration,\n          color: this._needleColor,\n          easeType: this._easeType,\n          el: this._chart,\n          length: this._height * 0.5,\n          percent: this._percent,\n          radius: this._needleRadius\n        });\n        this._update();\n      }\n\n      /**\r\n       * Updates the active arc and the gauge status (min or max) based on the current percent.\r\n       *\r\n       * @private\r\n       */\n\n    }, {\n      key: '_update',\n      value: function _update() {\n        var _this2 = this;\n\n        if (!this._arcs) {\n          return;\n        }\n        this._arcs.classed('active', function (d, i) {\n          return i === Math.floor(_this2._percent * _this2._sectionsCount) || i === _this2._arcs.size() - 1 && _this2._percent === 1;\n        });\n        this._chart.classed('min', this._percent === 0);\n        this._chart.classed('max', this._percent === 1);\n      }\n    }, {\n      key: 'interval',\n      get: function get() {\n        return this._scale.domain();\n      }\n\n      /**\r\n       * Sets the interval of the gauge (min and max values).\r\n       *\r\n       * @param interval\r\n       */\n      ,\n      set: function set(interval) {\n        if (!(interval instanceof Array) || interval.length !== 2 || isNaN(interval[0]) || isNaN(interval[1]) || interval[0] > interval[1]) {\n          throw new Error('The interval specified is invalid.');\n        }\n        this._scale = (0, _d3Scale.scaleLinear)().domain(interval).range([0, 1]).clamp(true);\n      }\n\n      /**\r\n       * Gets the needle percent.\r\n       *\r\n       * @returns {number|*}    The percentage position of the needle.\r\n       */\n\n    }, {\n      key: 'percent',\n      get: function get() {\n        return this._percent;\n      }\n\n      /**\r\n       * Sets the needle percent. The percent must be between 0 and 1.\r\n       *\r\n       * @param percent         The percentage to set.\r\n       */\n      ,\n      set: function set(percent) {\n        if (isNaN(percent) || percent < 0 || percent > 1) {\n          throw new RangeError('The percentage must be between 0 and 1.');\n        }\n        if (this._needle) {\n          this._needle.update(percent);\n        }\n        this._percent = percent;\n        this._update();\n      }\n\n      /**\r\n       * Sets the needle position based on the specified value inside the interval.\r\n       * If the value specified is outside the interval, the value will be\r\n       * clamped to fit inside the domain.\r\n       *\r\n       * @param value           The value to use to set the needle position.\r\n       */\n\n    }, {\n      key: 'value',\n      set: function set(value) {\n        if (isNaN(value)) {\n          throw new Error('The specified value must be a number.');\n        }\n        this.percent = this._scale(value);\n      }\n    }]);\n\n    return SimpleGauge;\n  }();\n});","export class LayoutConfig {\r\n  amountTextHeight: number;\r\n  amountTextHeightY: number;\r\n  averageCharSize: number;\r\n  horizontalMinSpacing: number;\r\n  horizontalPadding: number;\r\n  polygonLength: number;\r\n  titleLineHeight: number;\r\n  transitionDuration: number;\r\n  verticalMinSpacing: number;\r\n  verticalPadding: number;\r\n  countPerLine?: number;\r\n  legend?: {\r\n    minAmount: number,\r\n    sideLength: number\r\n  };\r\n  isAmountsDisplayed?: boolean;\r\n  isGaugeDisplayed?: boolean;\r\n  locale?: string;\r\n  gaugeConfig?: GaugeConfig;\r\n  size?: Size;\r\n}\r\n\r\nexport class GaugeConfig {\r\n  barWidth: number;\r\n  height: number;\r\n  interval: number[];\r\n  needleRadius: number;\r\n  width: number;\r\n}\r\n\r\nexport class Size {\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\n/* tslint:disable:cyclomatic-complexity */\r\nexport function isLayoutConfig(config: any): config is LayoutConfig {\r\n  return config && !isNaN(config.amountTextHeight) && config.amountTextHeight >= 0 &&\r\n    !isNaN(config.amountTextHeightY) && config.amountTextHeightY >= 0 &&\r\n    !isNaN(config.averageCharSize) && config.averageCharSize >= 0 &&\r\n    !isNaN(config.horizontalMinSpacing) && config.horizontalMinSpacing >= 0 &&\r\n    !isNaN(config.horizontalPadding) && config.horizontalPadding >= 0 &&\r\n    !isNaN(config.polygonLength) && config.polygonLength > 0 &&\r\n    !isNaN(config.titleLineHeight) && config.titleLineHeight >= 0 &&\r\n    !isNaN(config.transitionDuration) && config.transitionDuration >= 0 &&\r\n    !isNaN(config.verticalMinSpacing) && config.verticalMinSpacing >= 0 &&\r\n    !isNaN(config.verticalPadding) && config.verticalPadding >= 0 &&\r\n    config.isGaugeDisplayed === false || isGaugeConfig(config.gaugeConfig) &&\r\n    !config.size || isSize(config.size);\r\n}\r\n\r\nexport function isGaugeConfig(config: any): config is GaugeConfig {\r\n  return config && !isNaN(config.barWidth) && config.barWidth >= 0 &&\r\n    !isNaN(config.height) && config.height > 0 &&\r\n    !isNaN(config.needleRadius) && config.needleRadius >= 0 &&\r\n    !isNaN(config.width) && config.width > 0 &&\r\n    config.interval && config.interval.length === 2 && !isNaN(config.interval[0]) &&\r\n    !isNaN(config.interval[1]) && config.interval[0] <= config.interval[1];\r\n}\r\n\r\nexport function isSize(size: any): size is Size {\r\n  return size && !isNaN(size.height) && size.height >= 0 &&\r\n    !isNaN(size.width) && size.width >= 0;\r\n}\r\n","import { ascending, descending } from 'd3-array';\r\nimport * as d3 from 'd3-selection';\r\nimport d3SimpleGauge from 'd3-simple-gauge';\r\n\r\nimport { Formatter } from '../../utils/formatter';\r\nimport { D3Selection } from '../../utils/types';\r\nimport { Budget } from '../budget';\r\nimport { BudgetElement } from '../budget-element';\r\n\r\nimport { isLayoutConfig, LayoutConfig } from './layout-config';\r\n\r\nexport abstract class Layout {\r\n  protected readonly _budget: Budget;\r\n  protected readonly _svgElement: D3Selection;\r\n  protected readonly _config: LayoutConfig;\r\n\r\n  protected _layoutElement: D3Selection;\r\n  protected _budgetGroup: D3Selection;\r\n  protected _incomeGroups: D3Selection;\r\n  protected _spendingGroups: D3Selection;\r\n  protected _gaugeGroup: D3Selection;\r\n\r\n  protected _height: number;\r\n  protected _width: number;\r\n\r\n  private readonly _defaultTransitionDuration: number;\r\n\r\n  protected constructor(budget: Budget, svgElement: D3Selection, config: LayoutConfig) {\r\n    if (!isLayoutConfig(config)) {\r\n      throw new TypeError('Invalid configuration specified.');\r\n    }\r\n    this._budget = budget;\r\n    this._svgElement = svgElement;\r\n    this._config = config;\r\n    this._config.isGaugeDisplayed = config.isGaugeDisplayed !== undefined ? config.isGaugeDisplayed : true;\r\n    this._config.isAmountsDisplayed = config.isAmountsDisplayed !== false;\r\n    this._config.locale = config.locale !== undefined ? config.locale : 'fr';\r\n    this._defaultTransitionDuration = config.transitionDuration;\r\n\r\n    if (this._config.size) {\r\n      this._width = this._config.size.width;\r\n      this._height = this._config.size.height;\r\n    } else {\r\n      // Gets the SVG bounding box.\r\n      const bbox = this._svgElement.node().getBoundingClientRect();\r\n      this._width = bbox.width;\r\n      this._height = bbox.height;\r\n    }\r\n  }\r\n\r\n  get locale(): string {\r\n    return this._config.locale;\r\n  }\r\n\r\n  get transitionDuration(): number {\r\n    return this._config.transitionDuration;\r\n  }\r\n\r\n  set transitionDuration(duration: number) {\r\n    if (duration < 0) {\r\n      throw new RangeError('The transition duration must be greater or equal to 0.');\r\n    }\r\n    this._config.transitionDuration = duration;\r\n  }\r\n\r\n  initialize() {\r\n    this._svgElement.attr('viewBox', `0 0 ${this._width} ${this._height}`);\r\n\r\n    // Retrieves the layout element.\r\n    this._layoutElement = this._svgElement.select('#layout');\r\n    if (!this._layoutElement.size()) {\r\n      this._layoutElement = this._svgElement.append('g')\r\n        .attr('id', 'layout');\r\n    }\r\n\r\n    // Initializes the gauge\r\n    if (this._config.isGaugeDisplayed) {\r\n      this._gaugeGroup = this._layoutElement.select('#budget-gauge-group');\r\n      if (this._gaugeGroup.size() <= 0) {\r\n        this._gaugeGroup = this._layoutElement.append('g')\r\n          .attr('id', 'budget-gauge-group')\r\n          .attr('class', 'budget-gauge-group');\r\n\r\n        this._gaugeGroup.append('rect')\r\n          .attr('width', this._config.gaugeConfig.width)\r\n          .attr('height', this._config.gaugeConfig.height * 1.5 + 10)\r\n          .attr('fill', '#fff');\r\n\r\n        this._gaugeGroup.append('text')\r\n          .attr('text-anchor', 'middle')\r\n          .attr('x', this._config.gaugeConfig.width / 2)\r\n          .attr('y', this._config.gaugeConfig.height * 1.5);\r\n\r\n        // Associate the gauge with the group.\r\n        this._gaugeGroup.datum(new d3SimpleGauge.SimpleGauge({\r\n          barWidth: this._config.gaugeConfig.barWidth,\r\n          el: this._gaugeGroup.append('g'),\r\n          height: this._config.gaugeConfig.height,\r\n          interval: this._config.gaugeConfig.interval,\r\n          needleRadius: this._config.gaugeConfig.needleRadius,\r\n          sectionsCount: 2,\r\n          width: this._config.gaugeConfig.width\r\n        }));\r\n      }\r\n    }\r\n\r\n    // Initializes the legend\r\n    if (this._config.legend) {\r\n      let legend = this._layoutElement.select('#budget-legend');\r\n      if (legend.size() <= 0) {\r\n        legend = this._layoutElement.append('g')\r\n          .attr('id', 'budget-legend')\r\n          .attr('class', 'budget-legend')\r\n          .attr('transform', `translate(${this._config.horizontalPadding},\r\n            ${this._height - this._config.verticalPadding / 2})`);\r\n\r\n        legend.append('rect')\r\n          .attr('class', 'square')\r\n          .attr('x', 0)\r\n          .attr('y', 0)\r\n          .attr('width', this._config.legend.sideLength)\r\n          .attr('height', this._config.legend.sideLength);\r\n\r\n        legend.append('text')\r\n          .attr('x', 1.5 * this._config.legend.sideLength)\r\n          .attr('y', this._config.legend.sideLength)\r\n          .style('font-size', `${1.8 * this._config.legend.sideLength}px`)\r\n          .text(`= ${Formatter.formatAmount(this._config.legend.minAmount, this._config.locale)}`);\r\n      }\r\n    }\r\n\r\n    if (this._layoutElement.select('#budget-group')) {\r\n      this._budgetGroup = this._layoutElement.append('svg')\r\n        .attr('id', 'budget-group')\r\n        .datum({});\r\n\r\n      if (this._config.isGaugeDisplayed) {\r\n        this._budgetGroup.attr('height', this._height - this._config.gaugeConfig.height);\r\n      } else {\r\n        this._budgetGroup.attr('height', this._height);\r\n      }\r\n    }\r\n\r\n    const self = this;\r\n    function initializeBudgetElement(d) {\r\n      const g = d3.select(this);\r\n      const textGroup = g.append('g')\r\n        .attr('class', 'text-group');\r\n\r\n      if (self._config.isAmountsDisplayed) {\r\n        textGroup.append('text')\r\n          .attr('class', 'element-amount')\r\n          .text(Formatter.formatAmount(d.amount));\r\n      }\r\n      textGroup.append('text')\r\n        .attr('class', 'element-name');\r\n\r\n      d.svgElement = g.append('g')\r\n        .attr('class', 'polygons-group');\r\n    }\r\n    const createGroups = (budgetElements: BudgetElement[], id: string) => {\r\n      let group = this._budgetGroup.select(`#${id}`);\r\n      if (!group.size()) {\r\n        group = this._budgetGroup.append('g')\r\n          .attr('id', id);\r\n      }\r\n      const groups = group.selectAll('g')\r\n        .data(budgetElements, d => (d as any).id);\r\n\r\n      const groupsCreated = groups.enter()\r\n        .append('g')\r\n        .each(initializeBudgetElement);\r\n\r\n      return groups.merge(groupsCreated);\r\n    };\r\n\r\n    this._incomeGroups = createGroups(this._budget.incomes, 'incomes-group');\r\n    this._spendingGroups = createGroups(this._budget.spendings, 'spendings-group');\r\n    this.initializeLayout();\r\n  }\r\n\r\n  render() {\r\n    const locale = this._config.locale;\r\n    function updateAmount(d) {\r\n      d3.select(this)\r\n        .select('.element-amount')\r\n        .text(Formatter.formatAmount(d.amount + d.temporaryAmount, locale));\r\n    }\r\n    this._incomeGroups = this._incomeGroups\r\n      .sort(Layout.sortElements)\r\n      .each(updateAmount);\r\n\r\n    this._spendingGroups = this._spendingGroups\r\n      .sort(Layout.sortElements)\r\n      .each(updateAmount);\r\n\r\n    if (this._config.isGaugeDisplayed) {\r\n      const delta = this._budget.summary.delta;\r\n      this._gaugeGroup.datum().value = delta;\r\n      this._layoutElement.select('#budget-gauge-group')\r\n        .select('text')\r\n        .text(Formatter.formatAmount(delta, locale));\r\n\r\n    }\r\n    this.renderLayout();\r\n  }\r\n\r\n  resetTransitionDuration() {\r\n    this._config.transitionDuration = this._defaultTransitionDuration;\r\n  }\r\n\r\n  protected abstract initializeLayout();\r\n  protected abstract renderLayout();\r\n\r\n  private static sortElements(a: BudgetElement, b: BudgetElement) {\r\n    let compare = descending(a.amount, b.amount);\r\n    if (compare === 0) {\r\n      compare = ascending(a.name, b.name);\r\n    }\r\n    return compare;\r\n  }\r\n}\r\n","import * as d3 from 'd3-selection';\r\nimport 'd3-transition';\r\n\r\nimport { Config } from '../../config';\r\nimport { D3Selection } from '../../utils/types';\r\nimport { Budget } from '../budget';\r\n\r\nimport { Layout } from './layout';\r\nimport { LayoutConfig } from './layout-config';\r\n\r\nexport class BarsLayout extends Layout {\r\n\r\n  constructor(budget: Budget, svgElement: D3Selection, config: LayoutConfig) {\r\n    super(budget, svgElement, config);\r\n  }\r\n\r\n  protected initializeLayout() {\r\n    const self = this;\r\n    let maxLabelHeight = 0;\r\n\r\n    function initializeLabel(d) {\r\n      const g = d3.select(this);\r\n\r\n      let label = d.name;\r\n      const index = label.indexOf(',');\r\n      if (index !== -1) {\r\n        label = label.substring(0, index);\r\n      }\r\n\r\n      const labelWords = label.split(' ');\r\n      let line = '';\r\n      const lines = [];\r\n      labelWords.forEach(w => {\r\n        if (line.length * self._config.averageCharSize < self._config.polygonLength) {\r\n          line += (line.length === 0) ? w : ` ${w}`;\r\n        } else {\r\n          lines.push(line);\r\n          line = w;\r\n        }\r\n      });\r\n      lines.push(line);\r\n\r\n      const textGroup = g.select('.text-group')\r\n        .attr('transform', '');\r\n\r\n      textGroup.select('.amount')\r\n        .attr('text-anchor', 'middle')\r\n        .attr('x', self._config.polygonLength / 2)\r\n        .attr('y', 0);\r\n\r\n      const labelLines = textGroup.select('.label')\r\n        .attr('text-anchor', 'middle')\r\n        .attr('y', 5)\r\n        .selectAll('tspan')\r\n        .data(lines);\r\n\r\n      labelLines.exit()\r\n        .remove();\r\n\r\n      const labelLinesCreated = labelLines.enter()\r\n        .append('tspan');\r\n\r\n      labelLines.merge(labelLinesCreated)\r\n        .attr('x', self._config.polygonLength / 2)\r\n        .attr('dy', 11)\r\n        .text(d => d);\r\n\r\n      const height = (textGroup.node() as SVGGraphicsElement).getBBox().height;\r\n      if (maxLabelHeight < height) {\r\n        maxLabelHeight = height;\r\n      }\r\n    }\r\n\r\n    function adjustPolygonsGroup() {\r\n      d3.select(this).select('.polygons-group')\r\n        .attr('transform', `translate(0, ${maxLabelHeight})`);\r\n    }\r\n\r\n    this._incomeGroups.each(initializeLabel)\r\n      .each(adjustPolygonsGroup);\r\n    this._spendingGroups.each(initializeLabel)\r\n      .each(adjustPolygonsGroup);\r\n\r\n    // Compute min size of SVG viewBox.\r\n    const maxCount = Math.max(this._budget.incomes.length, this._budget.spendings.length);\r\n    const approxWidth = this._config.horizontalPadding * 2 + maxCount * this._config.polygonLength +\r\n      (maxCount - 1) * this._config.horizontalMinSpacing;\r\n\r\n    const maxElement = this._budget.elements[0];\r\n    const maxPolygonHeight = Math.ceil(maxElement.polygonsGroup.count / maxElement.polygonsGroup.config.maxCountPerLine)\r\n      * maxElement.polygonsGroup.config.sideLength;\r\n    const approxHeight = (this._config.verticalPadding * 2 + maxPolygonHeight + maxLabelHeight) * 2;\r\n\r\n    this._width = Math.max(approxWidth, this._width);\r\n    this._height = Math.max(approxHeight, this._height);\r\n    this._svgElement.attr('viewBox', `0 0 ${this._width} ${this._height}`);\r\n\r\n    const halfHeight = this._height / 2;\r\n    this._layoutElement.select('.separator')\r\n      .attr('x1', 0)\r\n      .attr('y1', halfHeight)\r\n      .attr('x2', this._width)\r\n      .attr('y2', halfHeight);\r\n\r\n    this._gaugeGroup\r\n      .attr('transform', `translate(${this._width / 2 - Config.GAUGE_CONFIG.width / 2}, ${this._height - 110})`);\r\n\r\n    this._layoutElement.select('#incomes-group')\r\n      .attr('transform', 'translate(0, 0)');\r\n\r\n    this._layoutElement.select('#spendings-group')\r\n      .attr('transform', `translate(0, ${halfHeight})`);\r\n  }\r\n\r\n  protected renderLayout() {\r\n    const self = this;\r\n    let x;\r\n\r\n    function applyTransform(d, i) {\r\n      if (i === 0) {\r\n        x = self._config.horizontalPadding;\r\n      } else {\r\n        x += self._config.polygonLength + self._config.horizontalMinSpacing;\r\n      }\r\n      return `translate(${x}, ${self._config.verticalPadding})`;\r\n    }\r\n\r\n    this._incomeGroups.transition()\r\n      .duration(this._config.transitionDuration)\r\n      .attr('transform', applyTransform);\r\n\r\n    this._spendingGroups.transition()\r\n      .duration(this._config.transitionDuration)\r\n      .attr('transform', applyTransform);\r\n  }\r\n}\r\n","import { sum } from 'd3-array';\r\nimport * as d3 from 'd3-selection';\r\nimport 'd3-transition';\r\n\r\nimport { D3Selection } from '../../utils/types';\r\nimport { Budget } from '../budget';\r\n\r\nimport { Layout } from './layout';\r\nimport { LayoutConfig } from './layout-config';\r\n\r\nconst MIN_COUNT_PER_LINE = 5;\r\n\r\nexport class GridLayout extends Layout {\r\n  private readonly _countPerLine: number;\r\n  private readonly _spacing: number;\r\n  private readonly _budgetWidth: number;\r\n  private readonly _gaugeHeight: number;\r\n\r\n  constructor(budget: Budget, svgElement: D3Selection, config: LayoutConfig, minCountPerLine = MIN_COUNT_PER_LINE) {\r\n    super(budget, svgElement, config);\r\n    if (minCountPerLine <= 0) {\r\n      throw new RangeError('The min count per line must be a positive number.');\r\n    }\r\n    const maxCountElements = Math.max(budget.spendings.length, budget.incomes.length);\r\n    this._countPerLine = !this._config.countPerLine\r\n      ? Math.min(minCountPerLine, maxCountElements)\r\n      : this._config.countPerLine;\r\n    this._spacing = (this._countPerLine > 1) ? this._config.horizontalMinSpacing : 0;\r\n    this._gaugeHeight = this._config.isGaugeDisplayed ? this._config.gaugeConfig.height * 1.5 + 10 : 0;\r\n\r\n    // Adjustment factor if there is no spending or incomes.\r\n    const factor = budget.spendings.length === 0 || budget.incomes.length === 0 ? 1 : 2;\r\n\r\n    this._budgetWidth = factor * (2 * this._config.horizontalPadding + this._countPerLine *\r\n      this._config.polygonLength + (this._countPerLine - 1) * this._spacing);\r\n  }\r\n\r\n  protected initializeLayout() {\r\n    this._budgetGroup.attr('viewBox', `0 0 ${this._budgetWidth} ${this._height}`);\r\n    if (this._gaugeGroup) {\r\n      this._gaugeGroup.attr('transform',\r\n        `translate(${this._width / 2 - this._config.gaugeConfig.width / 2},` +\r\n        `${this._height - this._gaugeHeight})`);\r\n    }\r\n\r\n    const initializeLabel = (d, i, nodes) => {\r\n      const g = d3.select(nodes[i]);\r\n\r\n      // Spits the element's name based on the polygon width.\r\n      let name = d.name;\r\n      const index = name.indexOf(',');\r\n      if (index !== -1) {\r\n        name = name.substring(0, index);\r\n      }\r\n\r\n      const nameWords = name.split(' ');\r\n      let line = '';\r\n      const lines = [];\r\n      nameWords.forEach(w => {\r\n        if (line.length * this._config.averageCharSize < this._config.polygonLength) {\r\n          line += (line.length === 0) ? w : ` ${w}`;\r\n        } else {\r\n          lines.push(line);\r\n          line = w;\r\n        }\r\n      });\r\n      lines.push(line);\r\n\r\n      const textGroup = g.select('.text-group')\r\n        .attr('transform', '');\r\n\r\n      textGroup.select('.element-amount')\r\n        .attr('text-anchor', 'middle')\r\n        .attr('x', this._config.polygonLength / 2)\r\n        .attr('y', 0);\r\n\r\n      const labelLines = textGroup.select('.element-name')\r\n        .attr('text-anchor', 'middle')\r\n        .attr('y', this._config.amountTextHeightY)\r\n        .selectAll('tspan')\r\n        .data(lines);\r\n\r\n      labelLines.exit()\r\n        .remove();\r\n\r\n      const labelLinesCreated = labelLines.enter()\r\n        .append('tspan');\r\n\r\n      labelLines.merge(labelLinesCreated)\r\n        .attr('x', this._config.polygonLength / 2)\r\n        .attr('dy', this._config.titleLineHeight)\r\n        .text(d => d);\r\n\r\n      (g.datum() as any).textHeight = this._config.amountTextHeight + this._config.titleLineHeight * lines.length;\r\n    };\r\n\r\n    this._layoutElement.select('#incomes-group')\r\n      .attr('transform', 'translate(0, 0)');\r\n\r\n    this._layoutElement.select('#spendings-group')\r\n      .attr('transform', `translate(${this._budget.incomes.length === 0 ? 0 : this._budgetWidth / 2}, 0)`);\r\n\r\n    this._incomeGroups.each(initializeLabel);\r\n    this._spendingGroups.each(initializeLabel);\r\n  }\r\n\r\n  protected renderLayout() {\r\n    let maxTextHeights = [];\r\n    const findMaxTextHeights = (d, i) => {\r\n      if (i === 0) {\r\n        maxTextHeights = [];\r\n      }\r\n      if (i % this._countPerLine === 0) {\r\n        maxTextHeights.push(0);\r\n      }\r\n      const index = Math.floor(i / this._countPerLine);\r\n      const height = d.textHeight;\r\n      if (maxTextHeights[index] < height) {\r\n        maxTextHeights[index] = height;\r\n      }\r\n    };\r\n\r\n    let x, y, groupIndex, maxHeight, maxGroupHeights = [];\r\n    const applyTransform = (d, i, nodes) => {\r\n      if (i === 0) {\r\n        groupIndex = maxGroupHeights.length;\r\n        maxGroupHeights.push([]);\r\n        y = this._config.verticalPadding;\r\n        maxHeight = 0;\r\n      }\r\n      if (i % this._countPerLine === 0) {\r\n        maxGroupHeights[groupIndex].push(0);\r\n        x = this._config.horizontalPadding;\r\n        if (i !== 0) {\r\n          y += maxHeight + this._config.verticalMinSpacing;\r\n        }\r\n        maxHeight = 0;\r\n      } else {\r\n        x += this._config.polygonLength + this._spacing;\r\n      }\r\n      const maxTextHeight = maxTextHeights[Math.floor(i / this._countPerLine)];\r\n      d3.select(nodes[i])\r\n        .select('.polygons-group')\r\n        .attr('transform', `translate(0, ${maxTextHeight})`);\r\n\r\n      if (d.polygonsGroup.boundingBox.height > maxHeight) {\r\n        maxHeight = d.polygonsGroup.boundingBox.height + maxTextHeight;\r\n        maxGroupHeights[groupIndex][Math.floor(i / this._countPerLine)] = maxHeight;\r\n      }\r\n      return `translate(${x}, ${y})`;\r\n    };\r\n\r\n    this._incomeGroups.each(findMaxTextHeights)\r\n      .transition()\r\n      .duration(this._config.transitionDuration)\r\n      .attr('transform', applyTransform);\r\n\r\n    this._spendingGroups.each(findMaxTextHeights)\r\n      .transition()\r\n      .duration(this._config.transitionDuration)\r\n      .attr('transform', applyTransform);\r\n\r\n    const maxHeightsSum = maxGroupHeights.map(d => sum(d));\r\n    const index = maxHeightsSum.indexOf(Math.max(...maxHeightsSum));\r\n    const computedHeight = maxHeightsSum[index] + 2 * this._config.verticalPadding +\r\n      (maxGroupHeights[index].length - 1) * this._config.verticalMinSpacing + this._gaugeHeight;\r\n\r\n    if (computedHeight !== (this._budgetGroup.datum() as any).computedHeight) {\r\n      (this._budgetGroup.datum() as any).computedHeight = computedHeight;\r\n      this._budgetGroup\r\n        .transition()\r\n        .duration(this._config.transitionDuration)\r\n        .attr('viewBox', () => `0 0 ${this._budgetWidth} ${computedHeight}`);\r\n    }\r\n  }\r\n}\r\n","import { max } from 'd3-array';\r\nimport * as d3 from 'd3-selection';\r\nimport 'd3-transition';\r\n\r\nimport { Config } from '../../config';\r\nimport { D3Selection } from '../../utils/types';\r\nimport { Budget } from '../budget';\r\n\r\nimport { Layout } from './layout';\r\nimport { isLayoutConfig, LayoutConfig } from './layout-config';\r\n\r\nexport class HorizontalBarsLayout extends Layout {\r\n\r\n  constructor(budget: Budget, svgElement: D3Selection, config: LayoutConfig) {\r\n    super(budget, svgElement, config);\r\n  }\r\n\r\n  protected initializeLayout() {\r\n    const self = this;\r\n    const maxLengthName = max(this._budget.elements, d => d.name.length);\r\n    let maxLabelWidth = 0;\r\n\r\n    function initializeLabel(d) {\r\n      const g = d3.select(this);\r\n\r\n      let label = d.name;\r\n      const index = label.indexOf(',');\r\n      if (index !== -1) {\r\n        label = label.substring(0, index);\r\n      }\r\n\r\n      const labelWords = label.split(' ');\r\n      let line = '';\r\n      const lines = [];\r\n      labelWords.forEach(w => {\r\n        if (line.length * self._config.averageCharSize < maxLengthName * self._config.averageCharSize / 4) {\r\n          line += (line.length === 0) ? w : ` ${w}`;\r\n        } else {\r\n          lines.push(line);\r\n          line = w;\r\n        }\r\n      });\r\n      lines.push(line);\r\n\r\n      const textGroup = g.select('.text-group');\r\n      textGroup.select('.amount')\r\n        .attr('text-anchor', 'end')\r\n        .attr('x', 0)\r\n        .attr('y', 7);\r\n\r\n      const labelLines = textGroup.select('.label')\r\n        .attr('text-anchor', 'end')\r\n        .attr('y', 10)\r\n        .selectAll('tspan')\r\n        .data(lines);\r\n\r\n      labelLines.exit()\r\n        .remove();\r\n\r\n      const labelLinesCreated = labelLines.enter()\r\n        .append('tspan');\r\n\r\n      labelLines.merge(labelLinesCreated)\r\n        .attr('x', 0)\r\n        .attr('dy', 11)\r\n        .text(d => d);\r\n\r\n      g.select('.polygons-group')\r\n        .attr('transform', '');\r\n\r\n      const labelWidth = (textGroup.node() as SVGGraphicsElement).getBBox().width;\r\n      if (maxLabelWidth < labelWidth) {\r\n        maxLabelWidth = labelWidth;\r\n      }\r\n    }\r\n\r\n    function adjustGroup() {\r\n      const g = d3.select(this);\r\n      g.select('.text-group')\r\n        .attr('transform', `translate(${maxLabelWidth}, 0)`);\r\n\r\n      g.select('.polygons-group')\r\n        .attr('transform', `translate(${maxLabelWidth + self._config.horizontalPadding}, 0)`);\r\n    }\r\n\r\n    this._incomeGroups.each(initializeLabel)\r\n      .each(adjustGroup);\r\n    this._spendingGroups.each(initializeLabel)\r\n      .each(adjustGroup);\r\n\r\n    // Compute min size of SVG viewBox.\r\n    const maxCount = Math.max(this._budget.incomes.length, this._budget.spendings.length);\r\n    const approxHeight = this._config.verticalPadding * 2 + maxCount * this._config.polygonLength +\r\n      (maxCount - 1) * this._config.verticalMinSpacing;\r\n\r\n    const maxElement = this._budget.elements[0];\r\n    const maxPolygonHeight = Math.ceil(maxElement.polygonsGroup.count /\r\n      maxElement.polygonsGroup.config.maxCountPerLine) * maxElement.polygonsGroup.config.sideLength;\r\n    const approxWidth = (this._config.horizontalPadding * 2 + maxPolygonHeight + maxLabelWidth +\r\n      self._config.horizontalPadding) * 2;\r\n\r\n    this._width = Math.max(approxWidth, this._width);\r\n    this._height = Math.max(approxHeight, this._height);\r\n    this._svgElement.attr('viewBox', `0 0 ${this._width} ${this._height}`);\r\n\r\n    const halfWidth = this._width / 2;\r\n    this._layoutElement.select('.separator')\r\n      .attr('x1', halfWidth)\r\n      .attr('y1', 0)\r\n      .attr('x2', halfWidth)\r\n      .attr('y2', this._height);\r\n\r\n    this._gaugeGroup\r\n      .attr('transform', `translate(${this._width / 2 - Config.GAUGE_CONFIG.width / 2}, ${this._height - 110})`);\r\n\r\n    this._layoutElement.select('#incomes-group')\r\n      .attr('transform', `translate(${halfWidth}, 0)`);\r\n    this._layoutElement.select('#spendings-group')\r\n      .attr('transform', 'translate(0, 0)');\r\n  }\r\n\r\n  protected renderLayout() {\r\n    const self = this;\r\n    let y;\r\n\r\n    function applyTransform(d, i) {\r\n      if (i === 0) {\r\n        y = self._config.verticalPadding;\r\n      } else {\r\n        y += self._config.polygonLength + self._config.verticalMinSpacing;\r\n      }\r\n      return `translate(${self._config.horizontalPadding}, ${y})`;\r\n    }\r\n\r\n    this._incomeGroups.transition()\r\n      .duration(this._config.transitionDuration)\r\n      .attr('transform', applyTransform);\r\n\r\n    this._spendingGroups.transition()\r\n      .duration(this._config.transitionDuration)\r\n      .attr('transform', applyTransform);\r\n  }\r\n}\r\n"],"names":["PolygonsGroupOrientation","BudgetElementType","tslib_1.__extends","descending","ascending","range","require$$0","require$$1","this","d3Tip","d3.select","d3.event","require$$2","require$$3","require$$4","require$$5","d3SimpleGauge","sum","max"],"mappings":"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"}